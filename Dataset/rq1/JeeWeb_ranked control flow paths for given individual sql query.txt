======================================= 1 given SQL query ===========================================
Given individual SQL query: select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
Pre-processed SQL query: select from sysuser user where user.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.avatar(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.avatar(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 5 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 6 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 7 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 8 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ 9 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++ 10 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, True, False, False]
path_matching_number_k:[0, 1, 2, 2, 2]
path_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.44558738337517334
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.635530632316197

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.17827200328817194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.178272003288172
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False



======================================= 2 given SQL query ===========================================
Given individual SQL query: insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest, httpservletresponse) 
called| attachment com.sun.proxy..proxy64.upload(httpservletrequest, multipartfile) 
called| attachment cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest, multipartfile) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.upload(httpservletrequest, string, multipartfile, string[], long, boolean) 
called| void cn.jeeweb.core.utils.upload.fileuploadutils.assertallowed(multipartfile, string[], long) 
called| boolean cn.jeeweb.core.utils.upload.fileuploadutils.isallowedextension(string, string[]) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.extractfilename(multipartfile, string, boolean) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.datepath() 
called| string cn.jeeweb.core.utils.stringutils.getextensionname(string) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.extractuploaddir(httpservletrequest) 
called| file cn.jeeweb.core.utils.upload.fileuploadutils.getabsolutefile(string, string) 
called| string cn.jeeweb.core.utils.stringutils.getfilenamenoex(string) 
called| string cn.jeeweb.core.utils.iputils.getipaddr(httpservletrequest) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getheader(string) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.model.ajaxjson.setdata(object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15408920818541805
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.15408920818541805
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15408920818541805
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.15408920818541805
Path matching:False
Request matching:False



======================================= 3 given SQL query ===========================================
Given individual SQL query: update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
Pre-processed SQL query: update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.38153258506199683
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, True]
request_matching_number_k:[0, 1, 1, 2, 3]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.6]
request_ap:0.49063060812119297

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1983549820115472
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6983549820115472
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1983549820115472
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6983549820115472
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1983549820115472
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6983549820115472
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16540866000957083
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.16540866000957083
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.16540866000957083
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.16540866000957083
Path matching:True
Request matching:True



======================================= 4 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_user this_
Pre-processed SQL query: select count(*) from sysuser 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basetreecontroller.bootstraptreedata(queryable, serializable, httpservletrequest, httpservletresponse, propertyprefilterable) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy70.listwithnopage(queryable, detachedcriteria) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listwithnopage(queryable, detachedcriteria) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(detachedcriteria) 
sql|select count(*) as y0_ from sys_user this_
sql|select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| bootstraptreehelper cn.jeeweb.core.common.entity.tree.bootstraptreehelper.create() 
called| list cn.jeeweb.core.common.entity.tree.bootstraptreehelper.sort(list) 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| void cn.jeeweb.core.common.entity.tree.bootstraptreehelper.parsesubnode(bootstraptreenode) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.38086424797383805

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.48179352664897523
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4817935266489752
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17363694687878087
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1736369468787808
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.17363694687878087
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1736369468787808
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17363694687878087
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1736369468787808
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17363694687878087
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1736369468787808
Path matching:False
Request matching:False



======================================= 5 given SQL query ===========================================
Given individual SQL query: select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
Pre-processed SQL query: select from sysorganization 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basetreecontroller.bootstraptreedata(queryable, serializable, httpservletrequest, httpservletresponse, propertyprefilterable) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy70.listwithnopage(queryable, detachedcriteria) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listwithnopage(queryable, detachedcriteria) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(detachedcriteria) 
sql|select count(*) as y0_ from sys_user this_
sql|select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| bootstraptreehelper cn.jeeweb.core.common.entity.tree.bootstraptreehelper.create() 
called| list cn.jeeweb.core.common.entity.tree.bootstraptreehelper.sort(list) 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| void cn.jeeweb.core.common.entity.tree.bootstraptreehelper.parsesubnode(bootstraptreenode) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, False]
request_matching_number_k:[0, 0, 0, 1, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2]
request_ap:0.34568341982672984

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.7426022436000167
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7426022436000168
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.7426022436000167
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7426022436000168
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.7426022436000167
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7426022436000168
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.7072691887885028
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7072691887885028
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.6634389429222631
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1634389429222631
Path matching:False
Request matching:False



======================================= 6 given SQL query ===========================================
Given individual SQL query: select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
Pre-processed SQL query: select from sysuser order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basetreecontroller.bootstraptreedata(queryable, serializable, httpservletrequest, httpservletresponse, propertyprefilterable) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy70.listwithnopage(queryable, detachedcriteria) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listwithnopage(queryable, detachedcriteria) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(detachedcriteria) 
sql|select count(*) as y0_ from sys_user this_
sql|select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| bootstraptreehelper cn.jeeweb.core.common.entity.tree.bootstraptreehelper.create() 
called| list cn.jeeweb.core.common.entity.tree.bootstraptreehelper.sort(list) 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| void cn.jeeweb.core.common.entity.tree.bootstraptreehelper.parsesubnode(bootstraptreenode) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3969242192521312

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.44038322163705745
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4403832216370573
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08566246713745085
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0856624671374508
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.08566246713745085
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0856624671374508
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08566246713745085
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0856624671374508
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08566246713745085
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0856624671374508
Path matching:False
Request matching:False



======================================= 7 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_dict_group this_
Pre-processed SQL query: select count(*) from sysdictgroup 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.44753002741436887
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.44753002741436887

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.7247280072622554
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7247280072622555
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5349372616507523
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5349372616507524
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5349372616507523
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5349372616507524
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5349372616507523
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5349372616507524
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.47813602534862965
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9781360253486296
Path matching:False
Request matching:False



======================================= 8 given SQL query ===========================================
Given individual SQL query: select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , as update , from sysdictgroup order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5946486091156629
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5946486091156629

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.6321670493375505
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6321670493375504
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35420626840084424
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3542062684008442
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.35420626840084424
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3542062684008442
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35420626840084424
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3542062684008442
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3216335763051267
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8216335763051267
Path matching:False
Request matching:False



======================================= 9 given SQL query ===========================================
Given individual SQL query: insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy66.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22580067372189677
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22580067372189677
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22580067372189677
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22580067372189677
Path matching:True
Request matching:True



======================================= 10 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_dict this_ where this_.gid=?
Pre-processed SQL query: select count(*) from sysdict where this_.gid=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.5166114196440027
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5166114196440028
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.38843584051359303
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388435840513593
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.38843584051359303
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388435840513593
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.38843584051359303
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388435840513593
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4153169262400035
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9153169262400035
Path matching:False
Request matching:False



======================================= 11 given SQL query ===========================================
Given individual SQL query: select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.gid=? order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , as create , as update , from sysdict inner join sysdictgroup where this_.gid=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.4167191365167548
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.4167191365167548

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.45886831338255574
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4588683133825557
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.42366364860526406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.423663648605264
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.42366364860526406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.423663648605264
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.42366364860526406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.423663648605264
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.39046756016554285
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8904675601655428
Path matching:False
Request matching:False



======================================= 12 given SQL query ===========================================
Given individual SQL query: insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy67.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.26392582767483364
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.29615927864148656

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3324063938135682
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3324063938135682
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3324063938135682
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3324063938135682
Path matching:False
Request matching:True



======================================= 13 given SQL query ===========================================
Given individual SQL query: select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
Pre-processed SQL query: select as create , dictentity.createdate as create , as update , dictentity.updatedate as update , as create , as update , from sysdict inner join sysdictgroup where dictentity.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy67.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preedit(dictentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy67.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy67.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy67.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.24700297146401404
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.46895079413779345

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.27034534402750826
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2703453440275083
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.379131116359328
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8791311163593281
Path matching:False
Request matching:False



======================================= 14 given SQL query ===========================================
Given individual SQL query: update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?
Pre-processed SQL query: update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy67.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy67.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.22013261620413346
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.2618811938046431

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3709731666574855
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8709731666574855
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3709731666574855
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8709731666574855
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3709731666574855
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8709731666574855
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.38225909316488077
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.38225909316488077
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.38225909316488077
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.38225909316488077
Path matching:False
Request matching:True



======================================= 15 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_dict this_ where this_.label=? and this_.gid=?
Pre-processed SQL query: select count(*) from sysdict where this_.label=? and this_.gid=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| condition cn.jeeweb.core.query.data.condition.and(condition.operator, string, object) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.label=? and this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.label=? and this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.3852891492880163
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3852891492880164
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.30361129366883505
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.303611293668835
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30361129366883505
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.303611293668835
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.30361129366883505
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.303611293668835
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3419966449179414
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8419966449179415
Path matching:False
Request matching:False



======================================= 16 given SQL query ===========================================
Given individual SQL query: select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.label=? and this_.gid=? order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , as create , as update , from sysdict inner join sysdictgroup where this_.label=? and this_.gid=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| condition cn.jeeweb.core.query.data.condition.and(condition.operator, string, object) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.label=? and this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.label=? and this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.41553492599043906
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.41553492599043906

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.40793340215149804
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.407933402151498
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3771358093259258
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3771358093259258
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3771358093259258
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3771358093259258
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3771358093259258
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3771358093259258
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.37086983385254446
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8708698338525445
Path matching:False
Request matching:False



======================================= 17 given SQL query ===========================================
Given individual SQL query: delete from sys_dict where id=?
Pre-processed SQL query: delete from sys_dict where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy67.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44625644802494646
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.44625644802494646

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdict where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdict where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 18 given SQL query ===========================================
Given individual SQL query: select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
Pre-processed SQL query: select as create , as update , from sysdictgroup where dictgroup.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy66.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, True, False, False]
path_matching_number_k:[0, 1, 2, 2, 2]
path_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.5987172733710794
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.5987172733710794

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.4066254823356935
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4066254823356936
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.44367393826692286
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9436739382669228
Path matching:False
Request matching:False



======================================= 19 given SQL query ===========================================
Given individual SQL query: delete from sys_dict_group where id=?
Pre-processed SQL query: delete from sys_dict_group where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9602240855677909
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9602240855677909

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.33398087792221876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3339808779222189
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.33398087792221876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3339808779222189
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True



======================================= 20 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_dict_group this_ where this_.name like ?
Pre-processed SQL query: select count(*) from sysdictgroup where this_.name like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.4045504339390309
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.4045504339390309

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.29768250611230296
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.297682506112303
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27787752468272797
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.277877524682728
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27787752468272797
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.277877524682728
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27787752468272797
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.277877524682728
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25672264229365066
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7567226422936506
Path matching:False
Request matching:False



======================================= 21 given SQL query ===========================================
Given individual SQL query: select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ where this_.name like ? order by this_.id asc limit ?
Pre-processed SQL query: select as create , as update , from sysdictgroup where this_.name like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5389764222230634
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5389764222230634

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.38770929704733403
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.387709297047334
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27352261352610846
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2735226135261084
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27352261352610846
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2735226135261084
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27352261352610846
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2735226135261084
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2547358805978713
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7547358805978712
Path matching:False
Request matching:False



======================================= 22 given SQL query ===========================================
Given individual SQL query: insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy69.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy69.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.24541503327889827
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.26753508082124805

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.4228664738469845
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9228664738469845
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.4228664738469845
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9228664738469845
Path matching:False
Request matching:False



======================================= 23 given SQL query ===========================================
Given individual SQL query: select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
Pre-processed SQL query: select from sysmenu where menu.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy69.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy69.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
sql|update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy69.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
sql|delete from sys_menu where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, True]
path_matching_number_k:[0, 0, 0, 1, 2]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
path_ap:0.4121463256479206
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.4121463256479206

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.3172643159499739
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.317264315949974
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:True
Request matching:True



======================================= 24 given SQL query ===========================================
Given individual SQL query: update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
Pre-processed SQL query: update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy69.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
sql|update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.19178058736076906
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.23355690766537018

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4797421972396178
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9797421972396179
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4797421972396178
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9797421972396179
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4797421972396178
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9797421972396179
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4442444085580286
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4442444085580286
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4442444085580286
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4442444085580286
Path matching:False
Request matching:False



======================================= 25 given SQL query ===========================================
Given individual SQL query: update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, '%')
Pre-processed SQL query: update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+, length(parent_ids)+)) where parent_ids like concat(?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy69.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
sql|update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.350616579156198
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.350616579156198

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.02262796571006168
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5226279657100616
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.02262796571006168
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5226279657100616
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.02262796571006168
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5226279657100616
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.04273543479267233
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.04273543479267233
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.04273543479267233
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.04273543479267233
Path matching:True
Request matching:True



======================================= 26 given SQL query ===========================================
Given individual SQL query: delete from sys_menu where id=? or parent_ids like concat(?, '%')
Pre-processed SQL query: delete from sys_menu where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy69.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
sql|delete from sys_menu where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.3861750659398765
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3861750659398765

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysmenu where id=?]

Syntactic Similarity:0.1654891878911957
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1654891878911957
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysmenu where id=?]

Syntactic Similarity:0.1654891878911957
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1654891878911957
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.06326664284914012
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5632666428491401
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.06326664284914012
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5632666428491401
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]

Syntactic Similarity:0.050670037228926795
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3840033705622601
Path matching:False
Request matching:False



======================================= 27 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_role this_
Pre-processed SQL query: select count(*) from sysrole 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy72.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_role this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.4401546242763438
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.4401546242763438

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.6518156067376717
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6518156067376717
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4089830306357388
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.408983030635739
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.38885796900156705
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388857969001567
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.38885796900156705
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388857969001567
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.38885796900156705
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.388857969001567
Path matching:False
Request matching:False



======================================= 28 given SQL query ===========================================
Given individual SQL query: select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , from sysrole order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy72.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_role this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5478531671752832
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5478531671752832

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.5710582835453188
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5710582835453188
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25626465964264944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2562646596426494
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25626465964264944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2562646596426494
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25626465964264944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2562646596426494
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.24965018670328487
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2496501867032848
Path matching:False
Request matching:False



======================================= 29 given SQL query ===========================================
Given individual SQL query: select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
Pre-processed SQL query: select as create , role.createdate as create , as update , role.updatedate as update , from sysrole role where role.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy72.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy72.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy72.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.5793983758651687
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.5956791588429933

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.3557639943210805
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3557639943210806
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3154445566600019
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.315444556660002
Path matching:False
Request matching:False



======================================= 30 given SQL query ===========================================
Given individual SQL query: delete from sys_role where id=?
Pre-processed SQL query: delete from sys_role where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
path_ap:0.8307576630415668
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.8307576630415668

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.3431743809700083
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3431743809700083
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.3431743809700083
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3431743809700083
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.17179099150560545
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6717909915056055
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.17179099150560545
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6717909915056055
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]

Syntactic Similarity:0.1527115467136089
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.48604488004694224
Path matching:False
Request matching:False



======================================= 31 given SQL query ===========================================
Given individual SQL query: insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy72.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.24728577104436184
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.2754381331670547

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.23211693733733293
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.732116937337333
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.23211693733733293
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.732116937337333
Path matching:False
Request matching:False



======================================= 32 given SQL query ===========================================
Given individual SQL query: update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?
Pre-processed SQL query: update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy72.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy72.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.18950419074252253
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.24913029442543513

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2613447288506133
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7613447288506132
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2613447288506133
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7613447288506132
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2613447288506133
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7613447288506132
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21874656913312662
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.21874656913312662
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21874656913312662
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.21874656913312662
Path matching:False
Request matching:False



======================================= 33 given SQL query ===========================================
Given individual SQL query: select this_.id as id13_0_, this_.name as name13_0_, this_.parent_id as parent3_13_0_, this_.parent_ids as parent4_13_0_, this_.isshow as isshow13_0_, this_.menu_icon as menu6_13_0_, this_.permission as permission13_0_, this_.remarks as remarks13_0_, this_.sort as sort13_0_, this_.type as type13_0_, this_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = this_.id) as formula0_0_ from sys_menu this_
Pre-processed SQL query: select from sysmenu 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy69.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id13_0_, this_.name as name13_0_, this_.parent_id as parent3_13_0_, this_.parent_ids as parent4_13_0_, this_.isshow as isshow13_0_, this_.menu_icon as menu6_13_0_, this_.permission as permission13_0_, this_.remarks as remarks13_0_, this_.sort as sort13_0_, this_.type as type13_0_, this_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = this_.id) as formula0_0_ from sys_menu this_
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| list com.sun.proxy..proxy69.findmenubyroleid(string) 
called| list cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select menu0_.id as id13_, menu0_.name as name13_, menu0_.parent_id as parent3_13_, menu0_.parent_ids as parent4_13_, menu0_.isshow as isshow13_, menu0_.menu_icon as menu6_13_, menu0_.permission as permission13_, menu0_.remarks as remarks13_, menu0_.sort as sort13_, menu0_.type as type13_, menu0_.url as url13_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_ from sys_menu menu0_ where menu0_.id in (select rolemenu1_.menu_id from sys_role_menu rolemenu1_ where rolemenu1_.role_id=?)
called| boolean cn.jeeweb.core.common.entity.treeentity.isleaf() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| boolean cn.jeeweb.core.common.entity.abstractentity.isnew() 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.275
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.275

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.5650843618575958
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5650843618575958
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4005893641526062
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4005893641526062
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.39496155023512225
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3949615502351222
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.39496155023512225
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3949615502351222
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.39496155023512225
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3949615502351222
Path matching:False
Request matching:False



======================================= 34 given SQL query ===========================================
Given individual SQL query: select menu0_.id as id13_, menu0_.name as name13_, menu0_.parent_id as parent3_13_, menu0_.parent_ids as parent4_13_, menu0_.isshow as isshow13_, menu0_.menu_icon as menu6_13_, menu0_.permission as permission13_, menu0_.remarks as remarks13_, menu0_.sort as sort13_, menu0_.type as type13_, menu0_.url as url13_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_ from sys_menu menu0_ where menu0_.id in (select rolemenu1_.menu_id from sys_role_menu rolemenu1_ where rolemenu1_.role_id=?)
Pre-processed SQL query: select from sysmenu where menu.id in (select rolemenu.menu_id from sys_role_menu rolemenu where rolemenu.role_id=?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy69.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id13_0_, this_.name as name13_0_, this_.parent_id as parent3_13_0_, this_.parent_ids as parent4_13_0_, this_.isshow as isshow13_0_, this_.menu_icon as menu6_13_0_, this_.permission as permission13_0_, this_.remarks as remarks13_0_, this_.sort as sort13_0_, this_.type as type13_0_, this_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = this_.id) as formula0_0_ from sys_menu this_
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| list com.sun.proxy..proxy69.findmenubyroleid(string) 
called| list cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select menu0_.id as id13_, menu0_.name as name13_, menu0_.parent_id as parent3_13_, menu0_.parent_ids as parent4_13_, menu0_.isshow as isshow13_, menu0_.menu_icon as menu6_13_, menu0_.permission as permission13_, menu0_.remarks as remarks13_, menu0_.sort as sort13_, menu0_.type as type13_, menu0_.url as url13_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_ from sys_menu menu0_ where menu0_.id in (select rolemenu1_.menu_id from sys_role_menu rolemenu1_ where rolemenu1_.role_id=?)
called| boolean cn.jeeweb.core.common.entity.treeentity.isleaf() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| boolean cn.jeeweb.core.common.entity.abstractentity.isnew() 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.16666666666666666
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.16666666666666666

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.12407216835778677
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1240721683577868
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1067205877068522
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1067205877068522
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1067205877068522
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1067205877068522
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1067205877068522
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1067205877068522
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1067205877068522
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1067205877068522
Path matching:False
Request matching:False



======================================= 35 given SQL query ===========================================
Given individual SQL query: select this_.id as id16_0_, this_.menu_id as menu2_16_0_, this_.role_id as role3_16_0_ from sys_role_menu this_ where this_.role_id=?
Pre-processed SQL query: select from sysrolemenu where this_.role_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy71.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id16_0_, this_.menu_id as menu2_16_0_, this_.role_id as role3_16_0_ from sys_role_menu this_ where this_.role_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy71.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrolemenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select menuid, roleid, id from sysrolemenu order by desc limit ?]

Syntactic Similarity:0.3179769745569055
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3179769745569054
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.294672643472191
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.294672643472191
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.294672643472191
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.294672643472191
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.294672643472191
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.294672643472191
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrolemenu set menuid=?, roleid=?, id=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2699003282540121
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7699003282540121
Path matching:False
Request matching:False



======================================= 36 given SQL query ===========================================
Given individual SQL query: insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)
Pre-processed SQL query: insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy71.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id16_0_, this_.menu_id as menu2_16_0_, this_.role_id as role3_16_0_ from sys_role_menu this_ where this_.role_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy71.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.0436004014543251
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.051829279981895744

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1943998920935897
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1943998920935897
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1943998920935897
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1943998920935897
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1943998920935897
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1943998920935897
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:False



======================================= 37 given SQL query ===========================================
Given individual SQL query: insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy70.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy70.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.33570565239585726
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.33286048810808905

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30259423376567746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30259423376567746
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30259423376567746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30259423376567746
Path matching:True
Request matching:True



======================================= 38 given SQL query ===========================================
Given individual SQL query: select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
Pre-processed SQL query: select from sysorganization where organizati.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy70.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_organization where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy70.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
sql|update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy70.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 5 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 6 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, True, False, False]
path_matching_number_k:[0, 1, 2, 2, 2]
path_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.4717911353054371
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.4717911353054371

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.39420954759506077
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3942095475950609
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.44481110680584207
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.944811106805842
Path matching:False
Request matching:False



======================================= 39 given SQL query ===========================================
Given individual SQL query: delete from sys_organization where id=? or parent_ids like concat(?, '%')
Pre-processed SQL query: delete from sys_organization where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy70.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_organization where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.4425612938034764
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.4425612938034764

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysorganization where id=?]

Syntactic Similarity:0.1667622980960581
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1667622980960581
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysorganization where id=?]

Syntactic Similarity:0.1667622980960581
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1667622980960581
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.18477062350124135
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.18477062350124135
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.18477062350124135
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.18477062350124135
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.17339989026239966
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.17339989026239966
Path matching:False
Request matching:False



======================================= 40 given SQL query ===========================================
Given individual SQL query: update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
Pre-processed SQL query: update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy70.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
sql|update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.2554084932500612
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.28906978907411285

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19264034494427043
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6926403449442704
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19264034494427043
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6926403449442704
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19264034494427043
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6926403449442704
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22606543065071721
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22606543065071721
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22606543065071721
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22606543065071721
Path matching:True
Request matching:True



======================================= 41 given SQL query ===========================================
Given individual SQL query: update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, '%')
Pre-processed SQL query: update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+, length(parent_ids)+)) where parent_ids like concat(?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy70.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
sql|update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.350616579156198
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.350616579156198

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.04273543479267233
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5427354347926723
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.04273543479267233
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5427354347926723
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.04273543479267233
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5427354347926723
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.03970217356161871
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.03970217356161871
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.03970217356161871
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.03970217356161871
Path matching:True
Request matching:True



======================================= 42 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_user this_ where this_.realname like ?
Pre-processed SQL query: select count(*) from sysuser where this_.realname like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_ where this_.realname like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ where this_.realname like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.36267399996581884

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.1717549057755698
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1717549057755698
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09488607659583419
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0948860765958341
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.09488607659583419
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0948860765958341
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09488607659583419
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0948860765958341
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09488607659583419
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0948860765958341
Path matching:False
Request matching:False



======================================= 43 given SQL query ===========================================
Given individual SQL query: select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ where this_.realname like ? order by this_.id asc limit ?
Pre-processed SQL query: select from sysuser where this_.realname like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_ where this_.realname like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ where this_.realname like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3969242192521312

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.26221396622436527
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2622139662243652
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08337286036831121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0833728603683113
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.08337286036831121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0833728603683113
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08337286036831121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0833728603683113
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.08337286036831121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0833728603683113
Path matching:False
Request matching:False



======================================= 44 given SQL query ===========================================
Given individual SQL query: select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , from sysrole 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showcreate(model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showcreate(model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.showcreate(user, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.211254724173973

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.6284916564818539
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.628491656481854
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5351116018375186
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5351116018375186
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:True



======================================= 45 given SQL query ===========================================
Given individual SQL query: insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.22476493641192924

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuser (null, null, null, null, username, realname, null, password, salt, email, phone, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25968534338212845
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2596853433821285
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuser (null, null, null, null, username, realname, null, password, salt, email, phone, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25968534338212845
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2596853433821285
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuser (null, null, null, null, username, realname, null, password, salt, email, phone, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25968534338212845
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2596853433821285
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17862633811049988
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.17862633811049988
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17862633811049988
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.17862633811049988
Path matching:False
Request matching:True



======================================= 46 given SQL query ===========================================
Given individual SQL query: select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
Pre-processed SQL query: select as create , role.createdate as create , as update , role.updatedate as update , from sysuserrole inner join sysrole role inner join sysuser user where this_.user_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.1467948717948718
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.18108065788442412

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, roleid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, id, name, code, issys, usable from sysuserrole  left outer join sysuser on sysuserrole=sysuser  left outer join sysrole on sysuserrole=sysrole  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29564677292899477
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2956467729289947
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, roleid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, id, name, code, issys, usable from sysuserrole  left outer join sysuser on sysuserrole=sysuser  left outer join sysrole on sysuserrole=sysrole  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29564677292899477
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2956467729289947
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, roleid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, id, name, code, issys, usable from sysuserrole  left outer join sysuser on sysuserrole=sysuser  left outer join sysrole on sysuserrole=sysrole  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29564677292899477
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2956467729289947
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.18711801638425032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1871180163842503
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, roleid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, id, name, code, issys, usable from sysuserrole  left outer join sysuser on sysuserrole=sysuser  left outer join sysrole on sysuserrole=sysrole  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuserrole set id=?, userid=?, null=?, roleid=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2757097203950681
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.775709720395068
Path matching:False
Request matching:False



======================================= 47 given SQL query ===========================================
Given individual SQL query: insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
Pre-processed SQL query: insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3411445982907374

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19746581092630414
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.197465810926304
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19746581092630414
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.197465810926304
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19746581092630414
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.197465810926304
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:True



======================================= 48 given SQL query ===========================================
Given individual SQL query: select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
Pre-processed SQL query: select from sysuserorganization inner join sysorganization inner join sysuser user where this_.user_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.13294871794871796
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.19606375279587696

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, organizationid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, remarks, null from sysuserorganization  left outer join sysuser on sysuserorganization=sysuser  left outer join sysorganization on sysuserorganization=sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29388446634967735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2938844663496774
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, organizationid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, remarks, null from sysuserorganization  left outer join sysuser on sysuserorganization=sysuser  left outer join sysorganization on sysuserorganization=sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29388446634967735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2938844663496774
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, organizationid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, remarks, null from sysuserorganization  left outer join sysuser on sysuserorganization=sysuser  left outer join sysorganization on sysuserorganization=sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29388446634967735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2938844663496774
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, organizationid, null from sysuserorganization order by desc limit ?]

Syntactic Similarity:0.18398831965139859
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1839883196513985
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, organizationid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, remarks, null from sysuserorganization  left outer join sysuser on sysuserorganization=sysuser  left outer join sysorganization on sysuserorganization=sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuserorganization set id=?, userid=?, null=?, organizationid=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2717168424445356
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7717168424445355
Path matching:False
Request matching:False



======================================= 49 given SQL query ===========================================
Given individual SQL query: insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)
Pre-processed SQL query: insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3411445982907374

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserorganization (id, userid, null, organizationid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19022985995428124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1902298599542813
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserorganization (id, userid, null, organizationid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19022985995428124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1902298599542813
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserorganization (id, userid, null, organizationid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19022985995428124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1902298599542813
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24005136304807118
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24005136304807118
Path matching:False
Request matching:True



======================================= 50 given SQL query ===========================================
Given individual SQL query: select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
Pre-processed SQL query: select as create , role.createdate as create , as update , role.updatedate as update , from sysrole role where role.id in (select userrole.role_id from sys_user_role userrole where userrole.user_id=?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.3269160907318802

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14316382854374646
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1431638285437464
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14316382854374646
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1431638285437464
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14316382854374646
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1431638285437464
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.13860720909923346
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1386072090992334
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.12203703005515917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1220370300551592
Path matching:False
Request matching:False



======================================= 51 given SQL query ===========================================
Given individual SQL query: select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
Pre-processed SQL query: select from sysorganization where organizati.id in (select userorgani.organization_id from sys_user_organization userorgani where userorgani.user_id=?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.3489749270016987

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2000334538647111
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.200033453864711
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2000334538647111
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.200033453864711
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2000334538647111
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.200033453864711
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.1542615926549741
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1542615926549742
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1716487439724313
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6716487439724312
Path matching:False
Request matching:False



======================================= 52 given SQL query ===========================================
Given individual SQL query: delete from sys_user_role where id=?
Pre-processed SQL query: delete from sys_user_role where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, True, False, True]
path_matching_number_k:[1, 1, 2, 2, 3]
path_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
path_ap:0.5783828070725512
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, True, False, True]
request_matching_number_k:[1, 1, 2, 2, 3]
request_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.5362473651203034

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserrole where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserrole where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True



======================================= 53 given SQL query ===========================================
Given individual SQL query: delete from sys_user_organization where id=?
Pre-processed SQL query: delete from sys_user_organization where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.04176853630057808

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserorganization where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserorganization where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 54 given SQL query ===========================================
Given individual SQL query: delete from sys_user where id=?
Pre-processed SQL query: delete from sys_user where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, True, False, True]
path_matching_number_k:[1, 1, 2, 2, 3]
path_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
path_ap:0.5871290133245973
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, True, False, True]
request_matching_number_k:[1, 1, 2, 2, 3]
request_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.5871290133245973

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.370046801679564
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.370046801679564
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.3431743809700083
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3431743809700083
Path matching:True
Request matching:True



======================================= 55 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_user_online this_
Pre-processed SQL query: select count(*) from sysuseronline 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5445564870450442
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5445564870450442

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.5613092810638882
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5613092810638882
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2846597600827867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2846597600827867
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2846597600827867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2846597600827867
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2846597600827867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2846597600827867
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2846597600827867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2846597600827867
Path matching:False
Request matching:False



======================================= 56 given SQL query ===========================================
Given individual SQL query: select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ order by this_.start_timestsamp desc limit ?
Pre-processed SQL query: select from sysuseronline order by this.starttimestsamp limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5561716137302487
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5561716137302487

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.5438740878456276
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5438740878456276
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2884792092780274
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2884792092780275
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2884792092780274
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2884792092780275
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2884792092780274
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2884792092780275
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2884792092780274
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2884792092780275
Path matching:False
Request matching:False



======================================= 57 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_user_online this_ where this_.username=?
Pre-processed SQL query: select count(*) from sysuseronline where this_.username=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5119186729917906
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5119186729917906

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.39494903661711084
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.394949036617111
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2381171181738292
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2381171181738293
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2381171181738292
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2381171181738293
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2381171181738292
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2381171181738293
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2381171181738292
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2381171181738293
Path matching:False
Request matching:False



======================================= 58 given SQL query ===========================================
Given individual SQL query: select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?
Pre-processed SQL query: select from sysuseronline where this_.username=?  order by this.starttimestsamp limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5369840633334901
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5369840633334901

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.4806796669566193
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4806796669566193
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False



======================================= 59 given SQL query ===========================================
Given individual SQL query: select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
Pre-processed SQL query: select from sysuseronline where this_.username=?  order by this.starttimestsamp limit 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5369840633334901
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5369840633334901

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.4806796669566193
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4806796669566193
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.281012727580718
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.281012727580718
Path matching:False
Request matching:False



======================================= 60 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_user_last_online this_
Pre-processed SQL query: select count(*) from sysuserlastonline 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy73.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_last_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id18_0_, this_.create_by as create16_18_0_, this_.create_date as create2_18_0_, this_.del_flag as del3_18_0_, this_.remarks as remarks18_0_, this_.update_by as update17_18_0_, this_.update_date as update5_18_0_, this_.host as host18_0_, this_.last_login_timestamp as last7_18_0_, this_.last_stop_timestamp as last8_18_0_, this_.login_count as login9_18_0_, this_.system_host as system10_18_0_, this_.total_online_time as total11_18_0_, this_.uid as uid18_0_, this_.user_agent as user13_18_0_, this_.user_id as user14_18_0_, this_.username as username18_0_ from sys_user_last_online this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5735051717894898
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5735051717894898

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserlastonline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline order by desc limit ?]

Syntactic Similarity:0.5480121364736551
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.548012136473655
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27520962832934415
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752096283293441
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27520962832934415
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752096283293441
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27520962832934415
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752096283293441
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuserlastonline set id=?, logincount=?, totalonlinetime=?, host=?, useragent=?, systemhost=?, username=?, laststoptimestamp=?, lastlogintimestamp=?, uid=?, userid=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25037312392305106
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7503731239230511
Path matching:False
Request matching:False



======================================= 61 given SQL query ===========================================
Given individual SQL query: select this_.id as id18_0_, this_.create_by as create16_18_0_, this_.create_date as create2_18_0_, this_.del_flag as del3_18_0_, this_.remarks as remarks18_0_, this_.update_by as update17_18_0_, this_.update_date as update5_18_0_, this_.host as host18_0_, this_.last_login_timestamp as last7_18_0_, this_.last_stop_timestamp as last8_18_0_, this_.login_count as login9_18_0_, this_.system_host as system10_18_0_, this_.total_online_time as total11_18_0_, this_.uid as uid18_0_, this_.user_agent as user13_18_0_, this_.user_id as user14_18_0_, this_.username as username18_0_ from sys_user_last_online this_ order by this_.id asc limit ?
Pre-processed SQL query: select from sysuserlastonline order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy73.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_last_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id18_0_, this_.create_by as create16_18_0_, this_.create_date as create2_18_0_, this_.del_flag as del3_18_0_, this_.remarks as remarks18_0_, this_.update_by as update17_18_0_, this_.update_date as update5_18_0_, this_.host as host18_0_, this_.last_login_timestamp as last7_18_0_, this_.last_stop_timestamp as last8_18_0_, this_.login_count as login9_18_0_, this_.system_host as system10_18_0_, this_.total_online_time as total11_18_0_, this_.uid as uid18_0_, this_.user_agent as user13_18_0_, this_.user_id as user14_18_0_, this_.username as username18_0_ from sys_user_last_online this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserlastonline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline order by desc limit ?]

Syntactic Similarity:0.47428562465529805
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.474285624655298
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.18417967074720726
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841796707472072
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18417967074720726
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841796707472072
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.18417967074720726
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841796707472072
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuserlastonline set id=?, logincount=?, totalonlinetime=?, host=?, useragent=?, systemhost=?, username=?, laststoptimestamp=?, lastlogintimestamp=?, uid=?, userid=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16956370759127104
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.669563707591271
Path matching:False
Request matching:False



======================================= 62 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_attachment this_
Pre-processed SQL query: select count(*) from sysattachment 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy64.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_attachment this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id8_1_, this_.create_by as create13_8_1_, this_.create_date as create2_8_1_, this_.del_flag as del3_8_1_, this_.remarks as remarks8_1_, this_.update_by as update14_8_1_, this_.update_date as update5_8_1_, this_.fileext as fileext8_1_, this_.filename as filename8_1_, this_.filepath as filepath8_1_, this_.filesize as filesize8_1_, this_.status as status8_1_, this_.uploadip as uploadip8_1_, this_.uploadtime as uploadtime8_1_, this_.userid as userid8_1_, user2_.id as id17_0_, user2_.create_by as create14_17_0_, user2_.create_date as create2_17_0_, user2_.del_flag as del3_17_0_, user2_.remarks as remarks17_0_, user2_.update_by as update15_17_0_, user2_.update_date as update5_17_0_, user2_.email as email17_0_, user2_.password as password17_0_, user2_.phone as phone17_0_, user2_.portrait as portrait17_0_, user2_.realname as realname17_0_, user2_.salt as salt17_0_, user2_.status as status17_0_, user2_.username as username17_0_ from sys_attachment this_ inner join sys_user user2_ on this_.userid=user2_.id order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.5499635962922761
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.549963596292276
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.5499635962922761
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.549963596292276
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.uploadsimditor(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.27958144283476355
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2795814428347636
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27958144283476355
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2795814428347636
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.27958144283476355
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2795814428347636
Path matching:False
Request matching:False



======================================= 63 given SQL query ===========================================
Given individual SQL query: select this_.id as id8_1_, this_.create_by as create13_8_1_, this_.create_date as create2_8_1_, this_.del_flag as del3_8_1_, this_.remarks as remarks8_1_, this_.update_by as update14_8_1_, this_.update_date as update5_8_1_, this_.fileext as fileext8_1_, this_.filename as filename8_1_, this_.filepath as filepath8_1_, this_.filesize as filesize8_1_, this_.status as status8_1_, this_.uploadip as uploadip8_1_, this_.uploadtime as uploadtime8_1_, this_.userid as userid8_1_, user2_.id as id17_0_, user2_.create_by as create14_17_0_, user2_.create_date as create2_17_0_, user2_.del_flag as del3_17_0_, user2_.remarks as remarks17_0_, user2_.update_by as update15_17_0_, user2_.update_date as update5_17_0_, user2_.email as email17_0_, user2_.password as password17_0_, user2_.phone as phone17_0_, user2_.portrait as portrait17_0_, user2_.realname as realname17_0_, user2_.salt as salt17_0_, user2_.status as status17_0_, user2_.username as username17_0_ from sys_attachment this_ inner join sys_user user2_ on this_.userid=user2_.id order by this_.id asc limit ?
Pre-processed SQL query: select from sysattachment inner join sysuser user order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy64.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_attachment this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id8_1_, this_.create_by as create13_8_1_, this_.create_date as create2_8_1_, this_.del_flag as del3_8_1_, this_.remarks as remarks8_1_, this_.update_by as update14_8_1_, this_.update_date as update5_8_1_, this_.fileext as fileext8_1_, this_.filename as filename8_1_, this_.filepath as filepath8_1_, this_.filesize as filesize8_1_, this_.status as status8_1_, this_.uploadip as uploadip8_1_, this_.uploadtime as uploadtime8_1_, this_.userid as userid8_1_, user2_.id as id17_0_, user2_.create_by as create14_17_0_, user2_.create_date as create2_17_0_, user2_.del_flag as del3_17_0_, user2_.remarks as remarks17_0_, user2_.update_by as update15_17_0_, user2_.update_date as update5_17_0_, user2_.email as email17_0_, user2_.password as password17_0_, user2_.phone as phone17_0_, user2_.portrait as portrait17_0_, user2_.realname as realname17_0_, user2_.salt as salt17_0_, user2_.status as status17_0_, user2_.username as username17_0_ from sys_attachment this_ inner join sys_user user2_ on this_.userid=user2_.id order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.3908465975531409
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.390846597553141
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.3908465975531409
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.390846597553141
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.uploadsimditor(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.19662973380469362
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1966297338046936
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.19662973380469362
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1966297338046936
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.19662973380469362
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1966297338046936
Path matching:False
Request matching:False



======================================= 64 given SQL query ===========================================
Given individual SQL query: select attachment0_.id as id8_1_, attachment0_.create_by as create13_8_1_, attachment0_.create_date as create2_8_1_, attachment0_.del_flag as del3_8_1_, attachment0_.remarks as remarks8_1_, attachment0_.update_by as update14_8_1_, attachment0_.update_date as update5_8_1_, attachment0_.fileext as fileext8_1_, attachment0_.filename as filename8_1_, attachment0_.filepath as filepath8_1_, attachment0_.filesize as filesize8_1_, attachment0_.status as status8_1_, attachment0_.uploadip as uploadip8_1_, attachment0_.uploadtime as uploadtime8_1_, attachment0_.userid as userid8_1_, user1_.id as id17_0_, user1_.create_by as create14_17_0_, user1_.create_date as create2_17_0_, user1_.del_flag as del3_17_0_, user1_.remarks as remarks17_0_, user1_.update_by as update15_17_0_, user1_.update_date as update5_17_0_, user1_.email as email17_0_, user1_.password as password17_0_, user1_.phone as phone17_0_, user1_.portrait as portrait17_0_, user1_.realname as realname17_0_, user1_.salt as salt17_0_, user1_.status as status17_0_, user1_.username as username17_0_ from sys_attachment attachment0_ inner join sys_user user1_ on attachment0_.userid=user1_.id where attachment0_.id=?
Pre-processed SQL query: select from sysattachment inner join sysuser user where attachment.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy64.deletebyid(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select attachment0_.id as id8_1_, attachment0_.create_by as create13_8_1_, attachment0_.create_date as create2_8_1_, attachment0_.del_flag as del3_8_1_, attachment0_.remarks as remarks8_1_, attachment0_.update_by as update14_8_1_, attachment0_.update_date as update5_8_1_, attachment0_.fileext as fileext8_1_, attachment0_.filename as filename8_1_, attachment0_.filepath as filepath8_1_, attachment0_.filesize as filesize8_1_, attachment0_.status as status8_1_, attachment0_.uploadip as uploadip8_1_, attachment0_.uploadtime as uploadtime8_1_, attachment0_.userid as userid8_1_, user1_.id as id17_0_, user1_.create_by as create14_17_0_, user1_.create_date as create2_17_0_, user1_.del_flag as del3_17_0_, user1_.remarks as remarks17_0_, user1_.update_by as update15_17_0_, user1_.update_date as update5_17_0_, user1_.email as email17_0_, user1_.password as password17_0_, user1_.phone as phone17_0_, user1_.portrait as portrait17_0_, user1_.realname as realname17_0_, user1_.salt as salt17_0_, user1_.status as status17_0_, user1_.username as username17_0_ from sys_attachment attachment0_ inner join sys_user user1_ on attachment0_.userid=user1_.id where attachment0_.id=?
called| httpservletrequest cn.jeeweb.core.utils.servletutils.getrequest() 
called| boolean cn.jeeweb.core.utils.fileutil.delfile(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_attachment where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.08333333333333333
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.08333333333333333

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.uploadsimditor(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.23453575124389142
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2345357512438915
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.23453575124389142
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2345357512438915
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.23453575124389142
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2345357512438915
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23453575124389142
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2345357512438915
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.23453575124389142
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2345357512438915
Path matching:False
Request matching:False



======================================= 65 given SQL query ===========================================
Given individual SQL query: delete from sys_attachment where id=?
Pre-processed SQL query: delete from sys_attachment where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy64.deletebyid(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select attachment0_.id as id8_1_, attachment0_.create_by as create13_8_1_, attachment0_.create_date as create2_8_1_, attachment0_.del_flag as del3_8_1_, attachment0_.remarks as remarks8_1_, attachment0_.update_by as update14_8_1_, attachment0_.update_date as update5_8_1_, attachment0_.fileext as fileext8_1_, attachment0_.filename as filename8_1_, attachment0_.filepath as filepath8_1_, attachment0_.filesize as filesize8_1_, attachment0_.status as status8_1_, attachment0_.uploadip as uploadip8_1_, attachment0_.uploadtime as uploadtime8_1_, attachment0_.userid as userid8_1_, user1_.id as id17_0_, user1_.create_by as create14_17_0_, user1_.create_date as create2_17_0_, user1_.del_flag as del3_17_0_, user1_.remarks as remarks17_0_, user1_.update_by as update15_17_0_, user1_.update_date as update5_17_0_, user1_.email as email17_0_, user1_.password as password17_0_, user1_.phone as phone17_0_, user1_.portrait as portrait17_0_, user1_.realname as realname17_0_, user1_.salt as salt17_0_, user1_.status as status17_0_, user1_.username as username17_0_ from sys_attachment attachment0_ inner join sys_user user1_ on attachment0_.userid=user1_.id where attachment0_.id=?
called| httpservletrequest cn.jeeweb.core.utils.servletutils.getrequest() 
called| boolean cn.jeeweb.core.utils.fileutil.delfile(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_attachment where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.3314311741296579
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3314311741296578
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.3314311741296579
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3314311741296578
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.3314311741296579
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3314311741296578
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.batchdelete(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.3314311741296579
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3314311741296578
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False



======================================= 66 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_log this_
Pre-processed SQL query: select count(*) from syslog 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy85.annotationtype() 
called| string com.sun.proxy..proxy85.value() 
called| string[] com.sun.proxy..proxy90.value() 
called| subject cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.getsubject() 
called| authorizationinfo cn.jeeweb.modules.sys.security.shiro.realm.userrealm.dogetauthorizationinfo(principalcollection) 
called| set cn.jeeweb.modules.sys.utils.userutils.getrolestringlist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getrolelist() 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string) 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string, object) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| int cn.jeeweb.core.common.entity.abstractentity.hashcode() 
called| set cn.jeeweb.modules.sys.utils.userutils.getpermissionslist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getmenulist() 
called| class com.sun.proxy..proxy90.annotationtype() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.564340309731013
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.564340309731013

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from syslog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null from syslog order by desc limit ?]

Syntactic Similarity:0.5146473254815765
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5146473254815764
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3130332492293765
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3130332492293766
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]

Syntactic Similarity:0.3130332492293765
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3130332492293766
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3130332492293765
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3130332492293766
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3130332492293765
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3130332492293766
Path matching:False
Request matching:False



======================================= 67 given SQL query ===========================================
Given individual SQL query: select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
Pre-processed SQL query: select as create , this.createdate as create , from syslog order by this.createdate limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy85.annotationtype() 
called| string com.sun.proxy..proxy85.value() 
called| string[] com.sun.proxy..proxy90.value() 
called| subject cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.getsubject() 
called| authorizationinfo cn.jeeweb.modules.sys.security.shiro.realm.userrealm.dogetauthorizationinfo(principalcollection) 
called| set cn.jeeweb.modules.sys.utils.userutils.getrolestringlist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getrolelist() 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string) 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string, object) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| int cn.jeeweb.core.common.entity.abstractentity.hashcode() 
called| set cn.jeeweb.modules.sys.utils.userutils.getpermissionslist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getmenulist() 
called| class com.sun.proxy..proxy90.annotationtype() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5782119037550572
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5782119037550572

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from syslog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null from syslog order by desc limit ?]

Syntactic Similarity:0.45624154052628435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4562415405262843
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.20224109380961028
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2022410938096102
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]

Syntactic Similarity:0.20224109380961028
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2022410938096102
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.20224109380961028
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2022410938096102
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.20224109380961028
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2022410938096102
Path matching:False
Request matching:False



======================================= 68 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from task_schedule_job this_
Pre-processed SQL query: select count(*) from taskschedulejob 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5219076401558291
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5219076401558291

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.5164742536850707
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5164742536850708
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.30862493950823544
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3086249395082354
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.30862493950823544
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3086249395082354
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.30862493950823544
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3086249395082354
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30862493950823544
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3086249395082354
Path matching:False
Request matching:False



======================================= 69 given SQL query ===========================================
Given individual SQL query: select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update from taskschedulejob order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5264821197303087
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5264821197303087

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.4485296710858551
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.448529671085855
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.18875770585650453
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1887577058565046
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.18875770585650453
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1887577058565046
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.18875770585650453
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1887577058565046
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18875770585650453
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1887577058565046
Path matching:False
Request matching:False



======================================= 70 given SQL query ===========================================
Given individual SQL query: select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
Pre-processed SQL query: select as create , schedulejo.createdate as create , as update , schedulejo.updatedate as update from taskschedulejob where schedulejo.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy74.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.addjob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobstatus() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getisconcurrent() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getcronexpression() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy74.deletebyid(serializable) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.delete(schedulejob) 
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.delete(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from task_schedule_job where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, True]
path_matching_number_k:[0, 0, 0, 1, 2]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
path_ap:0.3933883560967656
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.3933883560967656

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.2967658887336072
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2967658887336073
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:True
Request matching:True



======================================= 71 given SQL query ===========================================
Given individual SQL query: insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy74.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.010638297872340425

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12067779965805606
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.12067779965805606
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12067779965805606
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.12067779965805606
Path matching:False
Request matching:False



======================================= 72 given SQL query ===========================================
Given individual SQL query: update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?
Pre-processed SQL query: update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.addjob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobstatus() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getisconcurrent() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getcronexpression() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.05226392767387821
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5522639276738782
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.05226392767387821
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5522639276738782
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.05226392767387821
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5522639276738782
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.07995333445066792
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.07995333445066792
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.07995333445066792
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.07995333445066792
Path matching:False
Request matching:False



======================================= 73 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from task_schedule_job this_ where this_.job_name=?
Pre-processed SQL query: select count(*) from taskschedulejob where this_.job_name=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_ where this_.job_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ where this_.job_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5219076401558291
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5219076401558291

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.2794143928337659
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.279414392833766
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17304771976653513
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1730477197665352
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.17304771976653513
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1730477197665352
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.17304771976653513
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1730477197665352
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17304771976653513
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1730477197665352
Path matching:False
Request matching:False



======================================= 74 given SQL query ===========================================
Given individual SQL query: select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ where this_.job_name=? order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update from taskschedulejob where this_.job_name=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_ where this_.job_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ where this_.job_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5239346671828562
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5239346671828562

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.3335039502053548
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3335039502053547
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1451853565829801
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1451853565829802
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.1451853565829801
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1451853565829802
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.1451853565829801
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1451853565829802
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1451853565829801
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1451853565829802
Path matching:False
Request matching:False



======================================= 75 given SQL query ===========================================
Given individual SQL query: delete from task_schedule_job where id=?
Pre-processed SQL query: delete from task_schedule_job where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy74.deletebyid(serializable) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.delete(schedulejob) 
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.delete(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from task_schedule_job where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.440767882536381
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.440767882536381

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from taskschedulejob where id=?]

Syntactic Similarity:0.3259577571669247
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3259577571669248
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from taskschedulejob where id=?]

Syntactic Similarity:0.3259577571669247
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3259577571669248
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 76 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_data_source this_
Pre-processed SQL query: select count(*) from sysdatasource 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_data_source this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5677261645897931
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5677261645897931

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.5542053955550577
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5542053955550577
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28045329016863224
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2804532901686323
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.28045329016863224
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2804532901686323
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28045329016863224
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2804532901686323
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25513734266987437
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7551373426698744
Path matching:False
Request matching:False



======================================= 77 given SQL query ===========================================
Given individual SQL query: select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ order by this_.id asc limit ?
Pre-processed SQL query: select from sysdatasource order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_data_source this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.4796551855744549
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4796551855744549
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1876896342042112
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1876896342042111
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1876896342042112
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1876896342042111
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1876896342042112
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1876896342042111
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17279091310128067
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6727909131012807
Path matching:False
Request matching:False



======================================= 78 given SQL query ===========================================
Given individual SQL query: select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
Pre-processed SQL query: select from sysdatasource where datasource.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy65.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy65.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy65.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy65.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_data_source where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.4492798272786401
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.4718864000442967

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.3269640432930159
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3269640432930159
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23364550700626982
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7336455070062698
Path matching:False
Request matching:False



======================================= 79 given SQL query ===========================================
Given individual SQL query: insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy65.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.31641269673013206
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3222407752763401

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1417755658823919
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1417755658823919
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1417755658823919
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1417755658823919
Path matching:True
Request matching:True



======================================= 80 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sys_data_source this_ where this_.db_key=?
Pre-processed SQL query: select count(*) from sysdatasource where this_.db_key=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sys_data_source this_ where this_.db_key=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ where this_.db_key=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5677261645897931
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5677261645897931

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.3049901305018885
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3049901305018885
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16793098234072096
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.167930982340721
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16793098234072096
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.167930982340721
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16793098234072096
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.167930982340721
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1539896811172633
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6539896811172633
Path matching:False
Request matching:False



======================================= 81 given SQL query ===========================================
Given individual SQL query: select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ where this_.db_key=? order by this_.id asc limit ?
Pre-processed SQL query: select from sysdatasource where this_.db_key=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sys_data_source this_ where this_.db_key=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ where this_.db_key=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.3579623238071045
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3579623238071046
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15090826271585198
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150908262715852
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15090826271585198
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150908262715852
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15090826271585198
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150908262715852
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.13978195509532104
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.639781955095321
Path matching:False
Request matching:False



======================================= 82 given SQL query ===========================================
Given individual SQL query: update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?
Pre-processed SQL query: update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy65.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy65.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.22898721036299596
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.26528371425989244

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12417126877254911
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6241712687725491
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12417126877254911
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6241712687725491
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12417126877254911
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6241712687725491
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.10449071204091845
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10449071204091845
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.10449071204091845
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10449071204091845
Path matching:True
Request matching:True



======================================= 83 given SQL query ===========================================
Given individual SQL query: delete from sys_data_source where id=?
Pre-processed SQL query: delete from sys_data_source where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy65.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_data_source where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44625644802494646
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.44625644802494646

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdatasource where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdatasource where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 84 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from oa_notification this_
Pre-processed SQL query: select count(*) from oanotification 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.663813860564162
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.663813860564162
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3470232294253351
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.347023229425335
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3470232294253351
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.347023229425335
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3470232294253351
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.347023229425335
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3678697843049713
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8678697843049713
Path matching:False
Request matching:False



======================================= 85 given SQL query ===========================================
Given individual SQL query: select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , as update , this.updatedate from oanotification order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.5747422943905928
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5747422943905929
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21468728471031745
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2146872847103174
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21468728471031745
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2146872847103174
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21468728471031745
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2146872847103174
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23354849421005416
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7335484942100542
Path matching:False
Request matching:False



======================================= 86 given SQL query ===========================================
Given individual SQL query: insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy60.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.32364073433153756
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3362694273234131

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19061694593968853
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.19061694593968853
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19061694593968853
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.19061694593968853
Path matching:True
Request matching:True



======================================= 87 given SQL query ===========================================
Given individual SQL query: select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
Pre-processed SQL query: select as create , as update , oanotifica.updatedate from oanotification where oanotifica.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy60.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy60.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy60.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.6485609893828264
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.6690243549768911

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.3915578815733697
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3915578815733696
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3050596314771312
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8050596314771312
Path matching:False
Request matching:False



======================================= 88 given SQL query ===========================================
Given individual SQL query: delete from oa_notification where id=?
Pre-processed SQL query: delete from oa_notification where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9641583910284123
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9641583910284123

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True



======================================= 89 given SQL query ===========================================
Given individual SQL query: update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?
Pre-processed SQL query: update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy60.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy60.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.22915771910310248
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.28650863604162846

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16039343781370508
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6603934378137051
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16039343781370508
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6603934378137051
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16039343781370508
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6603934378137051
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21024695550996506
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.21024695550996506
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21024695550996506
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.21024695550996506
Path matching:False
Request matching:True



======================================= 90 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from oa_notification this_ where this_.title like ?
Pre-processed SQL query: select count(*) from oanotification where this_.title like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5239346671828562
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5239346671828562

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.31163501560798945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3116350156079895
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1663022872154095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663022872154094
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1663022872154095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663022872154094
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1663022872154095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663022872154094
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19633174319677524
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6963317431967753
Path matching:False
Request matching:False



======================================= 91 given SQL query ===========================================
Given individual SQL query: select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.title like ? order by this_.id asc limit ?
Pre-processed SQL query: select as create , as update , this.updatedate from oanotification where this_.title like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5307851500333389
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5307851500333389

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.38174834730340207
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.381748347303402
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15378074944523876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1537807494452388
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15378074944523876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1537807494452388
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15378074944523876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1537807494452388
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18421160810812134
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6842116081081213
Path matching:False
Request matching:False



======================================= 92 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from oa_notification this_ where this_.status=? and this_.title like ?
Pre-processed SQL query: select count(*) from oanotification where this_.status=? and this_.title like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.status=? and this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.status=? and this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5255365733412138
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5255365733412138

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.2547168580517596
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2547168580517596
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1478677782403799
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1478677782403799
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1478677782403799
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1478677782403799
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1478677782403799
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1478677782403799
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1727047614732353
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6727047614732353
Path matching:False
Request matching:False



======================================= 93 given SQL query ===========================================
Given individual SQL query: select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.status=? and this_.title like ? order by this_.id asc limit ?
Pre-processed SQL query: select as create , as update , this.updatedate from oanotification where this_.status=? and this_.title like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.status=? and this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.status=? and this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5255365733412138
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5255365733412138

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.3216412474451609
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3216412474451609
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14209641070068904
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.142096410700689
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14209641070068904
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.142096410700689
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14209641070068904
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.142096410700689
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16819260454611418
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6681926045461142
Path matching:False
Request matching:False



======================================= 94 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from email_template this_
Pre-processed SQL query: select count(*) from emailtemplate 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy58.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id4_0_, this_.business_type as business2_4_0_, this_.code as code4_0_, this_.create_by as create11_4_0_, this_.create_date as create4_4_0_, this_.del_flag as del5_4_0_, this_.name as name4_0_, this_.remarks as remarks4_0_, this_.template_content as template8_4_0_, this_.template_subject as template9_4_0_, this_.update_by as update12_4_0_, this_.update_date as update10_4_0_ from email_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.6268631332988996
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6268631332988996
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3446104793717491
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.344610479371749
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3446104793717491
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.344610479371749
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3446104793717491
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.344610479371749
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.35739286439125817
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8573928643912582
Path matching:False
Request matching:False



======================================= 95 given SQL query ===========================================
Given individual SQL query: select this_.id as id4_0_, this_.business_type as business2_4_0_, this_.code as code4_0_, this_.create_by as create11_4_0_, this_.create_date as create4_4_0_, this_.del_flag as del5_4_0_, this_.name as name4_0_, this_.remarks as remarks4_0_, this_.template_content as template8_4_0_, this_.template_subject as template9_4_0_, this_.update_by as update12_4_0_, this_.update_date as update10_4_0_ from email_template this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update from emailtemplate order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy58.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id4_0_, this_.business_type as business2_4_0_, this_.code as code4_0_, this_.create_by as create11_4_0_, this_.create_date as create4_4_0_, this_.del_flag as del5_4_0_, this_.name as name4_0_, this_.remarks as remarks4_0_, this_.template_content as template8_4_0_, this_.template_subject as template9_4_0_, this_.update_by as update12_4_0_, this_.update_date as update10_4_0_ from email_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.5426744587196171
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.542674458719617
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21319455971233728
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2131945597123373
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21319455971233728
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2131945597123373
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21319455971233728
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2131945597123373
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22689627653011726
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7268962765301172
Path matching:False
Request matching:False



======================================= 96 given SQL query ===========================================
Given individual SQL query: insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy58.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy58.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:True
Request matching:True



======================================= 97 given SQL query ===========================================
Given individual SQL query: select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
Pre-processed SQL query: select as create , emailtempl.createdate as create , as update , emailtempl.updatedate as update from emailtemplate where emailtempl.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy58.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy58.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy58.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy58.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44948883929126354
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.47209569248343236

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.3697862954615834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3697862954615834
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2963702160450741
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7963702160450741
Path matching:False
Request matching:False



======================================= 98 given SQL query ===========================================
Given individual SQL query: update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?
Pre-processed SQL query: update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy58.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy58.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.22495087656309762
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.27761574763345864

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.07872238765482129
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5787223876548213
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.07872238765482129
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5787223876548213
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.07872238765482129
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5787223876548213
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1940996914827574
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1940996914827574
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1940996914827574
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1940996914827574
Path matching:True
Request matching:True



======================================= 99 given SQL query ===========================================
Given individual SQL query: delete from email_template where id=?
Pre-processed SQL query: delete from email_template where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy58.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44625644802494646
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.44625644802494646

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailtemplate where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailtemplate where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 100 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from email_send_log this_
Pre-processed SQL query: select count(*) from emailsendlog 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5328525611168792
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5328525611168792

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.5949941934528333
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5949941934528333
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3183867747172405
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3183867747172404
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3183867747172405
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3183867747172404
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3183867747172405
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3183867747172404
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.28959157214044123
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7895915721404412
Path matching:False
Request matching:False



======================================= 101 given SQL query ===========================================
Given individual SQL query: select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ order by this_.id asc limit ?
Pre-processed SQL query: select from emailsendlog order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.5150272992167808
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5150272992167808
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2130825410051493
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2130825410051493
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2130825410051493
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2130825410051493
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2130825410051493
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2130825410051493
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19613082263374337
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6961308226337434
Path matching:False
Request matching:False



======================================= 102 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from email_send_log this_ where this_.subject=?
Pre-processed SQL query: select count(*) from emailsendlog where this_.subject=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_ where this_.subject=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ where this_.subject=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.48348861528998466
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4834886152899847
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3800491915276012
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3800491915276012
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3800491915276012
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3800491915276012
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3800491915276012
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3800491915276012
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3624444458209844
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8624444458209843
Path matching:False
Request matching:False



======================================= 103 given SQL query ===========================================
Given individual SQL query: select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ where this_.subject=? order by this_.id asc limit ?
Pre-processed SQL query: select from emailsendlog where this_.subject=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_ where this_.subject=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ where this_.subject=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5484978508117044
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5484978508117044

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.5026889004058567
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5026889004058566
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.31282122973628507
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3128212297362851
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31282122973628507
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3128212297362851
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.31282122973628507
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3128212297362851
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2992635351343021
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.799263535134302
Path matching:False
Request matching:False



======================================= 104 given SQL query ===========================================
Given individual SQL query: select emailsendl0_.id as id3_0_, emailsendl0_.business_type as business2_3_0_, emailsendl0_.content as content3_0_, emailsendl0_.del_flag as del4_3_0_, emailsendl0_.email as email3_0_, emailsendl0_.msg as msg3_0_, emailsendl0_.remarks as remarks3_0_, emailsendl0_.response_date as response8_3_0_, emailsendl0_.senddata as senddata3_0_, emailsendl0_.status as status3_0_, emailsendl0_.subject as subject3_0_ from email_send_log emailsendl0_ where emailsendl0_.id=?
Pre-processed SQL query: select from emailsendlog where emailsendl.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy57.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailsendl0_.id as id3_0_, emailsendl0_.business_type as business2_3_0_, emailsendl0_.content as content3_0_, emailsendl0_.del_flag as del4_3_0_, emailsendl0_.email as email3_0_, emailsendl0_.msg as msg3_0_, emailsendl0_.remarks as remarks3_0_, emailsendl0_.response_date as response8_3_0_, emailsendl0_.senddata as senddata3_0_, emailsendl0_.status as status3_0_, emailsendl0_.subject as subject3_0_ from email_send_log emailsendl0_ where emailsendl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.23033807855170785
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.23033807855170785

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.35100558331413334
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3510055833141332
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28637245371625863
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2863724537162586
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.28637245371625863
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2863724537162586
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28637245371625863
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2863724537162586
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2652080423850743
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7652080423850742
Path matching:False
Request matching:False



======================================= 105 given SQL query ===========================================
Given individual SQL query: delete from email_send_log where id=?
Pre-processed SQL query: delete from email_send_log where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy57.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailsendl0_.id as id3_0_, emailsendl0_.business_type as business2_3_0_, emailsendl0_.content as content3_0_, emailsendl0_.del_flag as del4_3_0_, emailsendl0_.email as email3_0_, emailsendl0_.msg as msg3_0_, emailsendl0_.remarks as remarks3_0_, emailsendl0_.response_date as response8_3_0_, emailsendl0_.senddata as senddata3_0_, emailsendl0_.status as status3_0_, emailsendl0_.subject as subject3_0_ from email_send_log emailsendl0_ where emailsendl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, True, False, True]
path_matching_number_k:[1, 1, 2, 2, 3]
path_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
path_ap:0.5783828070725512
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, True, False, True]
request_matching_number_k:[1, 1, 2, 2, 3]
request_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.5783828070725512

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailsendlog where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailsendlog where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True



======================================= 106 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sms_template this_
Pre-processed SQL query: select count(*) from smstemplate 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.6342880334328653
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6342880334328653
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.34576435877164013
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3457643587716401
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.34576435877164013
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3457643587716401
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.34576435877164013
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3457643587716401
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3604125757623408
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8604125757623409
Path matching:False
Request matching:False



======================================= 107 given SQL query ===========================================
Given individual SQL query: select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ order by this_.id asc limit ?
Pre-processed SQL query: select from smstemplate order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.5491171236492556
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5491171236492556
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21390844393515457
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2139084439351546
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21390844393515457
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2139084439351546
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21390844393515457
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2139084439351546
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22881360580993326
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7288136058099333
Path matching:False
Request matching:False



======================================= 108 given SQL query ===========================================
Given individual SQL query: insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query: insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy62.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:True
Request matching:True



======================================= 109 given SQL query ===========================================
Given individual SQL query: select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
Pre-processed SQL query: select from smstemplate where smstemplat.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy62.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy62.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy62.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy62.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44948883929126354
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.47209569248343236

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.37416143164279203
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3741614316427921
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2988747117987666
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7988747117987667
Path matching:False
Request matching:False



======================================= 110 given SQL query ===========================================
Given individual SQL query: update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?
Pre-processed SQL query: update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy62.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy62.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.2244969913052908
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.27702751233934103

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.0793827705869653
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5793827705869653
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.0793827705869653
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5793827705869653
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.0793827705869653
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5793827705869653
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1940996914827574
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1940996914827574
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1940996914827574
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1940996914827574
Path matching:True
Request matching:True



======================================= 111 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sms_template this_ where this_.name like ?
Pre-processed SQL query: select count(*) from smstemplate where this_.name like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sms_template this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.41188417589142945
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.41188417589142945

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.26776852123682826
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2677685212368281
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14999278583107867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1499927858310786
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14999278583107867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1499927858310786
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14999278583107867
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1499927858310786
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1661109058457047
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6661109058457046
Path matching:False
Request matching:False



======================================= 112 given SQL query ===========================================
Given individual SQL query: select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ where this_.name like ? order by this_.id asc limit ?
Pre-processed SQL query: select from smstemplate where this_.name like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sms_template this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5922243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5922243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.33845396249139964
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3384539624913996
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13887109453916993
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.13887109453917
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.13887109453916993
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.13887109453917
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13887109453916993
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.13887109453917
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15676001778609688
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6567600177860968
Path matching:False
Request matching:False



======================================= 113 given SQL query ===========================================
Given individual SQL query: delete from sms_template where id=?
Pre-processed SQL query: delete from sms_template where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy62.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, False]
path_matching_number_k:[0, 1, 1, 2, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
path_ap:0.44625644802494646
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, False]
request_matching_number_k:[0, 1, 1, 2, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.4]
request_ap:0.44625644802494646

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smstemplate where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smstemplate where id=?]

Syntactic Similarity:0.31658246548241664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3165824654824165
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:False
Request matching:False



======================================= 114 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sms_send_log this_
Pre-processed SQL query: select count(*) from smssendlog 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5493150551127797
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5493150551127797

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.5763543882078453
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5763543882078452
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29880231804413754
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2988023180441375
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29880231804413754
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2988023180441375
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.29880231804413754
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2988023180441375
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2718058524772603
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7718058524772603
Path matching:False
Request matching:False



======================================= 115 given SQL query ===========================================
Given individual SQL query: select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ order by this_.id asc limit ?
Pre-processed SQL query: select from smssendlog order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5983205667876206
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5983205667876206

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.4897293214394808
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.489729321439481
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17565257928695244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1756525792869525
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17565257928695244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1756525792869525
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17565257928695244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1756525792869525
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15978255913619532
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6597825591361953
Path matching:False
Request matching:False



======================================= 116 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from sms_send_log this_ where this_.phone like ?
Pre-processed SQL query: select count(*) from smssendlog where this_.phone like ? like 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_ where this_.phone like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ where this_.phone like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.52578082102901
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.52578082102901

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.23730266971799727
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2373026697179972
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14624785986042485
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1462478598604249
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14624785986042485
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1462478598604249
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14624785986042485
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1462478598604249
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.13586239295606245
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6358623929560625
Path matching:False
Request matching:False



======================================= 117 given SQL query ===========================================
Given individual SQL query: select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ where this_.phone like ? order by this_.id asc limit ?
Pre-processed SQL query: select from smssendlog where this_.phone like ?  like order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_ where this_.phone like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ where this_.phone like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.2969757208932307
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2969757208932307
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.12932151896630278
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1293215189663028
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12932151896630278
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1293215189663028
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.12932151896630278
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1293215189663028
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12013803856167875
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6201380385616787
Path matching:False
Request matching:False



======================================= 118 given SQL query ===========================================
Given individual SQL query: select smssendlog0_.id as id6_0_, smssendlog0_.business_type as business2_6_0_, smssendlog0_.code as code6_0_, smssendlog0_.del_flag as del4_6_0_, smssendlog0_.msg as msg6_0_, smssendlog0_.phone as phone6_0_, smssendlog0_.remarks as remarks6_0_, smssendlog0_.response_date as response8_6_0_, smssendlog0_.senddata as senddata6_0_, smssendlog0_.smsid as smsid6_0_, smssendlog0_.status as status6_0_, smssendlog0_.template_content as template12_6_0_, smssendlog0_.template_id as template13_6_0_ from sms_send_log smssendlog0_ where smssendlog0_.id=?
Pre-processed SQL query: select from smssendlog where smssendlog.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy61.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smssendlog0_.id as id6_0_, smssendlog0_.business_type as business2_6_0_, smssendlog0_.code as code6_0_, smssendlog0_.del_flag as del4_6_0_, smssendlog0_.msg as msg6_0_, smssendlog0_.phone as phone6_0_, smssendlog0_.remarks as remarks6_0_, smssendlog0_.response_date as response8_6_0_, smssendlog0_.senddata as senddata6_0_, smssendlog0_.smsid as smsid6_0_, smssendlog0_.status as status6_0_, smssendlog0_.template_content as template12_6_0_, smssendlog0_.template_id as template13_6_0_ from sms_send_log smssendlog0_ where smssendlog0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.2359282921590619
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.2359282921590619

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.3286493293714293
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3286493293714292
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.23841100703229945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2384110070322993
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23841100703229945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2384110070322993
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.23841100703229945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2384110070322993
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21859913567065134
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7185991356706514
Path matching:False
Request matching:False



======================================= 119 given SQL query ===========================================
Given individual SQL query: delete from sms_send_log where id=?
Pre-processed SQL query: delete from sms_send_log where id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy61.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smssendlog0_.id as id6_0_, smssendlog0_.business_type as business2_6_0_, smssendlog0_.code as code6_0_, smssendlog0_.del_flag as del4_6_0_, smssendlog0_.msg as msg6_0_, smssendlog0_.phone as phone6_0_, smssendlog0_.remarks as remarks6_0_, smssendlog0_.response_date as response8_6_0_, smssendlog0_.senddata as senddata6_0_, smssendlog0_.smsid as smsid6_0_, smssendlog0_.status as status6_0_, smssendlog0_.template_content as template12_6_0_, smssendlog0_.template_id as template13_6_0_ from sms_send_log smssendlog0_ where smssendlog0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, True, False, True]
path_matching_number_k:[1, 1, 2, 2, 3]
path_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
path_ap:0.5840541282325941
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, True, False, True]
request_matching_number_k:[1, 1, 2, 2, 3]
request_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.5840541282325941

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smssendlog where null=?]

Syntactic Similarity:0.2765367075409124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2765367075409124
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smssendlog where null=?]

Syntactic Similarity:0.2765367075409124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2765367075409124
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.3700468016795639
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3700468016795639
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from testordermain where id=?]

Syntactic Similarity:0.34727422350640746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.34727422350640746
Path matching:True
Request matching:True



======================================= 120 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from codegen_table this_
Pre-processed SQL query: select count(*) from codegentable 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.22179591520639952
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22179591520639952
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.22000408815915995
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22000408815915995
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.205625098851276
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.205625098851276
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.2051360632895644
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2051360632895644
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.20019436534474444
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.20019436534474444
Path matching:True
Request matching:True



======================================= 121 given SQL query ===========================================
Given individual SQL query: select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , from codegentable order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.3434413074056815
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3434413074056815
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.3350492626601462
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3350492626601462
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.3201592410623323
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3201592410623323
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.31242437348215846
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.31242437348215846
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrolemenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select menuid, roleid, id from sysrolemenu order by desc limit ?]

Syntactic Similarity:0.3105737223918088
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3105737223918088
Path matching:True
Request matching:True



======================================= 122 given SQL query ===========================================
Given individual SQL query: select count(*) as y0_ from codegen_table this_ where this_.table_name=?
Pre-processed SQL query: select count(*) from codegentable where this_.table_name=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_ where this_.table_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ where this_.table_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.14204073365217784
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.14204073365217784
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.14089322636769575
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.14089322636769575
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.1316847511414138
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1316847511414138
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.13137156696981675
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.13137156696981675
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.12820684501848373
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.12820684501848373
Path matching:True
Request matching:True



======================================= 123 given SQL query ===========================================
Given individual SQL query: select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ where this_.table_name=? order by this_.id asc limit ?
Pre-processed SQL query: select as create , this.createdate as create , as update , this.updatedate as update , from codegentable where this_.table_name=?  order by this.id limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_ where this_.table_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ where this_.table_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.26665984945938287
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.26665984945938287
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.26014397224762553
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.26014397224762553
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.2485828384174718
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2485828384174718
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.2425772165541674
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2425772165541674
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrolemenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select menuid, roleid, id from sysrolemenu order by desc limit ?]

Syntactic Similarity:0.24114030628591143
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24114030628591143
Path matching:True
Request matching:True

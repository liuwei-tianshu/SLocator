======================================= 1 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and item0_.i_subject=? order by item0_.i_pub_date desc, item0_.i_title limit ?
Pre-processed SQL query : select from item cross join author where item.i_a_id=author.a_id and item.i_subject=?  order by limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string, model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl1(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getnewproducts(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and item0_.i_subject=? order by item0_.i_pub_date desc, item0_.i_title limit ?
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.2
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, True]
request_matching_number_k:[0, 0, 0, 0, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
request_ap:0.2

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.14291849936363982
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1429184993636399
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.14291849936363982
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1429184993636399
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.10046858254290707
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.100468582542907
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.08503546098867103
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.085035460988671
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.07108495529710976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0710849552971098
Path matching:True
Request matching:True



======================================= 2 given SQL query ===========================================
Given individual SQL query: select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = 3 limit ?
Pre-processed SQL query : select from item left join item left join item left join item left join item left join item where i.i_id = ?  limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string, model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl1(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getnewproducts(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and item0_.i_subject=? order by item0_.i_pub_date desc, item0_.i_title limit ?
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl1(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| list eu.cloudscale.showcase.servlets.homecontroller.preparecategories(string) 
called| string eu.cloudscale.showcase.servlets.homecontroller.getproducturl(integer, integer) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.getbestsellers(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item1_.i_id as col_0_0_, author2_.a_fname as col_1_0_, author2_.a_lname as col_2_0_, item1_.i_title as col_3_0_, sum(orderline0_.ol_qty) as col_4_0_ from order_line orderline0_ cross join item item1_ cross join author author2_ where item1_.i_a_id=author2_.a_id and item1_.i_id=orderline0_.ol_i_id and item1_.i_subject=? group by orderline0_.ol_i_id order by col_4_0_ desc limit ?
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
path_ap:0.8095238095238094
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.8095238095238094

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.43094755142260904
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.430947551422609
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.42947459213728834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4294745921372884
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09951777116310984
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.09951777116311
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09951777116310984
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.09951777116311
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.08118148587656264
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0811814858765627
Path matching:False
Request matching:False



======================================= 3 given SQL query ===========================================
Given individual SQL query: select author0_.a_id as a1_1_, author0_.a_bio as a2_1_, author0_.a_dob as a3_1_, author0_.a_fname as a4_1_, author0_.a_lname as a5_1_, author0_.a_mname as a6_1_ from author author0_ cross join item item1_ where substring(soundex(author0_.a_lname), 1, 4)=substring(soundex(?), 1, 4) and item1_.i_a_id=author0_.a_id order by item1_.i_title limit ?
Pre-processed SQL query : select from author cross join item where substring(soundex(author.a_lname), ?, ?)=substring(soundex(?), ?, ?) and item.i_a_id=author.a_id  order by item.ititle limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select author0_.a_id as a1_1_, author0_.a_bio as a2_1_, author0_.a_dob as a3_1_, author0_.a_fname as a4_1_, author0_.a_lname as a5_1_, author0_.a_mname as a6_1_ from author author0_ cross join item item1_ where substring(soundex(author0_.a_lname), ?, ?)=substring(soundex(?), ?, ?) and item1_.i_a_id=author0_.a_id order by item1_.i_title limit ?
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor) 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_a_id=? order by item0_.i_title limit ?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, False, False]
request_matching_number_k:[1, 2, 3, 3, 3]
request_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.5065473411543189
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0065473411543189
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.543569487304211
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.543569487304211
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.15054594047640363
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.15054594047640363
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.11207792536171785
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.11207792536171785
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.11139570977474031
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.11139570977474031
Path matching:False
Request matching:False



======================================= 4 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_a_id=? order by item0_.i_title limit ?
Pre-processed SQL query : select from item where item.i_a_id=?  order by item.ititle limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select author0_.a_id as a1_1_, author0_.a_bio as a2_1_, author0_.a_dob as a3_1_, author0_.a_fname as a4_1_, author0_.a_lname as a5_1_, author0_.a_mname as a6_1_ from author author0_ cross join item item1_ where substring(soundex(author0_.a_lname), ?, ?)=substring(soundex(?), ?, ?) and item1_.i_a_id=author0_.a_id order by item1_.i_title limit ?
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor) 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_a_id=? order by item0_.i_title limit ?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.14285714285714285
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.8095238095238094

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.2865361874021938
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2865361874021937
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.20695130672036405
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.206951306720364
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.0780785639807194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0780785639807193
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.0780785639807194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0780785639807193
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.05273177690291624
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0527317769029163
Path matching:False
Request matching:False



======================================= 5 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and substring(soundex(item0_.i_title), 1, 4)=substring(soundex(?), 1, 4) order by item0_.i_title limit ?
Pre-processed SQL query : select from item cross join author where item.i_a_id=author.a_id and substring(soundex(item.i_title), ?, ?)=substring(soundex(?), ?, ?)  order by item.ititle limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbytitle(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and substring(soundex(item0_.i_title), ?, ?)=substring(soundex(?), ?, ?) order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.8095238095238094

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.5435694873042111
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.543569487304211
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.15054594047640363
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1505459404764036
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.11139570977474031
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1113957097747402
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.11139570977474031
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1113957097747402
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.06330429067026837
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0633042906702683
Path matching:False
Request matching:False



======================================= 6 given SQL query ===========================================
Given individual SQL query: select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
Pre-processed SQL query : select from author where author.a_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbytitle(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and substring(soundex(item0_.i_title), ?, ?)=substring(soundex(?), ?, ?) order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbysubject(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_subject=? order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.030555555555555555
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3685185185185185

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.15210752309631212
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6521075230963121
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.22588920496476736
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22588920496476736
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.22588920496476736
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22588920496476736
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.1977869432270555
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1977869432270555
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.1225019079060508
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1225019079060508
Path matching:False
Request matching:False



======================================= 7 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_subject=? order by item0_.i_title limit ?
Pre-processed SQL query : select from item where item.i_subject=?  order by item.ititle limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbysubject(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_subject=? order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.8095238095238094

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.2865361874021938
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2865361874021937
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.20695130672036405
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.206951306720364
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.0780785639807194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0780785639807193
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.0780785639807194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0780785639807193
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.05273177690291624
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0527317769029163
Path matching:False
Request matching:False



======================================= 8 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
Pre-processed SQL query : select from item cross join author where item.i_id=? and author.a_id=item.i_a_id 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 
called| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| string eu.cloudscale.showcase.servlets.productdetailservlet.buildaddtoshoppingcarturl(integer, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.productdetailservlet.buildadminurl(integer, integer, int) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.saveitem(iitem) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.3143305209837976
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.6488912023961121

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.22216293017796096
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2221629301779608
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2131252003150407
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2131252003150408
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1551192795891196
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1551192795891196
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.06169322197639379
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0616932219763937
Path matching:False
Request matching:False



======================================= 9 given SQL query ===========================================
Given individual SQL query: update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?
Pre-processed SQL query : update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.saveitem(iitem) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, False]
path_matching_number_k:[0, 0, 0, 1, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2]
path_ap:0.25
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, False]
request_matching_number_k:[0, 0, 0, 1, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2]
request_ap:0.25

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.20112782285457836
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.20112782285457836
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.19816582095420374
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.19816582095420374
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.18795226634735296
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.18795226634735296
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.03239563417812441
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.03239563417812441
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.02219623376323937
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.02219623376323937
Path matching:False
Request matching:False



======================================= 10 given SQL query ===========================================
Given individual SQL query: select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
Pre-processed SQL query : select from shoppingcart where shoppingca.sc_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, True, True]
path_matching_number_k:[1, 2, 2, 3, 4]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.75, 0.8]
path_ap:0.5689614097653625
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9995748299319728

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.13083160569269156
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1308316056926915
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.13083160569269156
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1308316056926915
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.14623790340866966
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6462379034086696
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.142039163939708
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6420391639397081
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.11477627215383066
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6147762721538307
Path matching:True
Request matching:True



======================================= 11 given SQL query ===========================================
Given individual SQL query: insert into shopping_cart (sc_time) values (?)
Pre-processed SQL query : insert into shoppingcart values (?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, False, False]
path_matching_number_k:[1, 2, 3, 3, 3]
path_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6]
path_ap:0.6812629399585921
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9845688282515359

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.443432032919712
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.943432032919712
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.5512627659083259
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8012627659083259
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.4447921377547242
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6947921377547241
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.45671909729049365
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6567190972904937
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.45671909729049365
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6567190972904937
Path matching:False
Request matching:True



======================================= 12 given SQL query ===========================================
Given individual SQL query: select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
Pre-processed SQL query : select from shoppingcartline where shoppingca.scl_sc_id=? and shoppingca.scl_i_id=?  limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.34169852442878756
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9763673890608876

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.08003466694203853
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.33003466694203853
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.07583434095764559
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3258343409576456
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.06904173920219167
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3190417392021917
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.06170577024179206
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3117057702417921
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.08219374532609637
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.28219374532609637
Path matching:False
Request matching:True



======================================= 13 given SQL query ===========================================
Given individual SQL query: insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
Pre-processed SQL query : insert into shoppingcartline values (?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, True]
path_matching_number_k:[1, 2, 2, 2, 3]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.6]
path_ap:0.5615732784164986
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.978887059311846

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.5002401678701865
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7502401678701865
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.3957979022646919
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6457979022646919
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.4316317466350044
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6316317466350044
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.4316317466350044
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6316317466350044
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.4114201663989863
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6114201663989863
Path matching:True
Request matching:True



======================================= 14 given SQL query ===========================================
Given individual SQL query: update shopping_cart set sc_time=? where sc_id=?
Pre-processed SQL query : update shopping_cart set sc_time=? where sc_id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
path_ap:0.55418795878035
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9631080282142177

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.06569166256071661
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.06569166256071661
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.05889141942692097
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.05889141942692097
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.057374909730167914
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.057374909730167914
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.04392720230314047
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.04392720230314047
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.04392720230314047
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.04392720230314047
Path matching:False
Request matching:True



======================================= 15 given SQL query ===========================================
Given individual SQL query: select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
Pre-processed SQL query : select from country where country.co_name=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| future eu.cloudscale.showcase.servlets.helpers.paymentservice.callpaymentservice(string, string, string, string) 
called| string eu.cloudscale.showcase.servlets.helpers.paymentservice.geturl(string, string, string, string) 
called| response eu.cloudscale.showcase.servlets.helpers.request.call() 
called| inputstream eu.cloudscale.showcase.servlets.helpers.response.getbody() 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9323671497584543
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.8812604205170498

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]

Syntactic Similarity:0.23854943900440032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2385494390044003
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]

Syntactic Similarity:0.23854943900440032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2385494390044003
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.20988007196731004
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7098800719673101
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1685609592279741
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4185609592279741
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1920704137854663
Semantic Similarity:0.16666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.35873708045213293
Path matching:True
Request matching:True



======================================= 16 given SQL query ===========================================
Given individual SQL query: insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
Pre-processed SQL query : insert into address values (?, ?, ?, ?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.6722981388562684
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.5335620566266998

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.5110930156448276
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7610930156448276
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.33678983715979793
Semantic Similarity:0.16666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5034565038264646
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.33678983715979793
Semantic Similarity:0.16666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5034565038264646
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.30949690146161923
Semantic Similarity:0.14285714285714285
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4523540443187621
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.30949690146161923
Semantic Similarity:0.14285714285714285
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4523540443187621
Path matching:True
Request matching:True



======================================= 17 given SQL query ===========================================
Given individual SQL query: insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query : insert into customer values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5188679245283019
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.36527315328647186

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.4965591232578428
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7465591232578428
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]

Syntactic Similarity:0.35274819456008
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6860815278934134
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.3788538754778724
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3788538754778724
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3558582495720133
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3558582495720133
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3558582495720133
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3558582495720133
Path matching:False
Request matching:False



======================================= 18 given SQL query ===========================================
Given individual SQL query: select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
Pre-processed SQL query : select from shoppingcartline inner join item where shoppingca.scl_sc_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.08345648161352846
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.14275286604389792

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.122297602680279
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.372297602680279
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.1158790746138859
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3658790746138859
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.1060585984932653
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.35605859849326527
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.09478897652105162
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3447889765210516
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.13476996518491044
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3347699651849104
Path matching:False
Request matching:False



======================================= 19 given SQL query ===========================================
Given individual SQL query: update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?
Pre-processed SQL query : update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.0754985754985755
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.10712250712250711

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.customerregistrationcontroller.get(integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findcustomerbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]

Syntactic Similarity:0.14076630996424924
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.14076630996424924
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.09481296735167882
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.09481296735167882
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.05669870945510717
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.05669870945510717
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.05669870945510717
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.05669870945510717
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.05285157860675179
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.05285157860675179
Path matching:False
Request matching:False



======================================= 20 given SQL query ===========================================
Given individual SQL query: select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
Pre-processed SQL query : select from customer inner join address left outer join country where customer.c_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, True, True]
path_matching_number_k:[0, 1, 1, 2, 3]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.6]
path_ap:0.4571220245133289
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, True, True]
request_matching_number_k:[0, 1, 1, 2, 3]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.5, 0.6]
request_ap:0.6316373240286285

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.customerregistrationcontroller.get(integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findcustomerbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]

Syntactic Similarity:0.29462653146731427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2946265314673142
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.6619517672834019
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8619517672834018
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3602714869565361
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8602714869565361
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3602714869565361
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8602714869565361
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]

Syntactic Similarity:0.4531021543689486
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7864354877022819
Path matching:True
Request matching:True



======================================= 21 given SQL query ===========================================
Given individual SQL query: insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query : insert into orders values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.27665945165945166
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.7768103109012199

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3685741523475422
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6185741523475422
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3685741523475422
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6185741523475422
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.3223850397697418
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5223850397697418
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.3223850397697418
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5223850397697418
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.33718065995583013
Semantic Similarity:0.16666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5038473266224968
Path matching:True
Request matching:True



======================================= 22 given SQL query ===========================================
Given individual SQL query: insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
Pre-processed SQL query : insert into orderline values (?, ?, ?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.13218769534559008
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.2155615207050614

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.2756287807297065
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2756287807297065
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.24823075097677985
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.24823075097677985
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.2236797557752057
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2236797557752057
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.2236797557752057
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2236797557752057
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.21321233385736277
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.21321233385736277
Path matching:False
Request matching:False



======================================= 23 given SQL query ===========================================
Given individual SQL query: insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL query : insert into ccxacts values (?, ?, ?, ?, ?, ?, ?, ?, ?) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.27789258260956373
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.7786781701876042

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.15688328293602988
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4068832829360299
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.15688328293602988
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4068832829360299
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.1372625350210518
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3372625350210518
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.1372625350210518
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3372625350210518
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.16550944201611195
Semantic Similarity:0.16666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3321761086827786
Path matching:True
Request matching:True



======================================= 24 given SQL query ===========================================
Given individual SQL query: delete from shopping_cart_line where scl_id=?
Pre-processed SQL query : delete from shopping_cart_line where scl_id=?

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.16171326448786402
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, True]
request_matching_number_k:[0, 0, 1, 2, 3]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.6]
request_ap:0.31538681086038345

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.26639789467465375
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5163978946746537
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.25242389814955174
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5024238981495517
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.2842744945264564
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.48427449452645643
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.2842744945264564
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.48427449452645643
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.25993294968304037
Semantic Similarity:0.14285714285714285
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4027900925401832
Path matching:True
Request matching:True



======================================= 25 given SQL query ===========================================
Given individual SQL query: select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
Pre-processed SQL query : select from customer where customer.c_uname=? and customer.c_passwd=?  limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, False]
path_matching_number_k:[0, 0, 0, 1, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2]
path_ap:0.27777777777777773
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, False]
request_matching_number_k:[0, 0, 0, 1, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2]
request_ap:0.27777777777777773

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.customerregistrationcontroller.get(integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findcustomerbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]

Syntactic Similarity:0.13264057894349504
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.132640578943495
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1148999556666494
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6148999556666495
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.08137578533460595
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.581375785334606
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.08137578533460595
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.581375785334606
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]

Syntactic Similarity:0.10676274434741367
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.440096077680747
Path matching:False
Request matching:False



======================================= 26 given SQL query ===========================================
Given individual SQL query: select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
Pre-processed SQL query : select from address inner join country where address.addr_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.4666666666666666
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.4666666666666666

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.33088760108074955
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8308876010807495
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.33088760108074955
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8308876010807495
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3153953750505617
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6487287083838951
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]

Syntactic Similarity:0.31087604966626703
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6442093829996003
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]

Syntactic Similarity:0.3030155058882059
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6363488392215393
Path matching:True
Request matching:True



======================================= 27 given SQL query ===========================================
Given individual SQL query: select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
Pre-processed SQL query : select from orders cross join customer where orders.o_c_id=customer.c_id and customer.c_id=?  order by limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
path_ap:0.7291666666666666
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.7291666666666666

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]

Syntactic Similarity:0.15872938076191082
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.49206271409524416
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.19484146044367626
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3948414604436763
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.customerregistrationcontroller.get(integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findcustomerbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]

Syntactic Similarity:0.31148355844738945
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.31148355844738945
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.2211761880624423
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2211761880624423
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.173447178780737
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.173447178780737
Path matching:False
Request matching:False



======================================= 28 given SQL query ===========================================
Given individual SQL query: select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
Pre-processed SQL query : select from orderline where orderline.ol_o_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.19545454545454546
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.19545454545454546

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.03650661039225483
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5365066103922548
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.09322700766733066
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2932270076673307
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.10363979417936234
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10363979417936234
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.10363979417936234
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10363979417936234
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.10075203739361983
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10075203739361983
Path matching:False
Request matching:False



======================================= 29 given SQL query ===========================================
Given individual SQL query: select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
Pre-processed SQL query : select from item where item.i_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.03514961799660441
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.03514961799660441

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.38548775048633716
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3854877504863372
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.38303071924241333
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3830307192424134
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1285343879535664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1285343879535663
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1285343879535664
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1285343879535663
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.10485175138420978
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1048517513842098
Path matching:False
Request matching:False



======================================= 30 given SQL query ===========================================
Given individual SQL query: select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
Pre-processed SQL query : select from orders inner join address left outer join country inner join address inner join customer left outer join address where orders.o_id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, True, False]
path_matching_number_k:[1, 2, 2, 3, 3]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.75, 0.6]
path_ap:0.9166666666666666
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, True, False]
request_matching_number_k:[1, 2, 2, 3, 3]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.75, 0.6]
request_ap:0.9166666666666666

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.7236799779684
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9236799779684
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]

Syntactic Similarity:0.45965067924761477
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7929840125809481
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3684857887471794
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3684857887471794
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3684857887471794
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3684857887471794
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]

Syntactic Similarity:0.3634331286273616
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3634331286273616
Path matching:False
Request matching:False



======================================= 31 given SQL query ===========================================
Given individual SQL query: select item1_.i_id as col_0_0_, author2_.a_fname as col_1_0_, author2_.a_lname as col_2_0_, item1_.i_title as col_3_0_, sum(orderline0_.ol_qty) as col_4_0_ from order_line orderline0_ cross join item item1_ cross join author author2_ where item1_.i_a_id=author2_.a_id and item1_.i_id=orderline0_.ol_i_id and item1_.i_subject=? group by orderline0_.ol_i_id order by col_4_0_ desc limit ?
Pre-processed SQL query : select from orderline cross join item cross join author where item.i_a_id=author.a_id and item.i_id=orderline.ol_i_id and item.i_subject=?  group by orderline.oliid order by col limit ? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.getbestsellers(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item1_.i_id as col_0_0_, author2_.a_fname as col_1_0_, author2_.a_lname as col_2_0_, item1_.i_title as col_3_0_, sum(orderline0_.ol_qty) as col_4_0_ from order_line orderline0_ cross join item item1_ cross join author author2_ where item1_.i_a_id=author2_.a_id and item1_.i_id=orderline0_.ol_i_id and item1_.i_subject=? group by orderline0_.ol_i_id order by col_4_0_ desc limit ?
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.17634272886045288
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6763427288604529
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.15377923199818938
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3537792319981894
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.16021954059399107
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.16021954059399107
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.14831140877187343
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.14831140877187343
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.10560870876061987
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.10560870876061987
Path matching:False
Request matching:False

======================================= 1 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.avatar(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.avatar(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.14285714285714285
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.44156260406260406

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.17827200328817194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.178272003288172
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False



======================================= 2 given SQL query ===========================================
Given SQL session queries: 
insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest, httpservletresponse) 
called| attachment com.sun.proxy..proxy64.upload(httpservletrequest, multipartfile) 
called| attachment cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest, multipartfile) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.upload(httpservletrequest, string, multipartfile, string[], long, boolean) 
called| void cn.jeeweb.core.utils.upload.fileuploadutils.assertallowed(multipartfile, string[], long) 
called| boolean cn.jeeweb.core.utils.upload.fileuploadutils.isallowedextension(string, string[]) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.extractfilename(multipartfile, string, boolean) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.datepath() 
called| string cn.jeeweb.core.utils.stringutils.getextensionname(string) 
called| string cn.jeeweb.core.utils.upload.fileuploadutils.extractuploaddir(httpservletrequest) 
called| file cn.jeeweb.core.utils.upload.fileuploadutils.getabsolutefile(string, string) 
called| string cn.jeeweb.core.utils.stringutils.getfilenamenoex(string) 
called| string cn.jeeweb.core.utils.iputils.getipaddr(httpservletrequest) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getheader(string) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_attachment (create_by, create_date, del_flag, remarks, update_by, update_date, fileext, filename, filepath, filesize, status, uploadip, uploadtime, userid, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.model.ajaxjson.setdata(object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysattachment (id, null, null, null, null, null, null, null, null) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.067091892726449
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.067091892726449
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15408920818541805
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.15408920818541805
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15408920818541805
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.15408920818541805
Path matching:False
Request matching:False



======================================= 3 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.avatar(user, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.3338601757719405
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.3781992517286635

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:False
Request matching:False



======================================= 4 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.2
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.325

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:True
Request matching:True



======================================= 5 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user this_
select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuser 
select from sysorganization 
select from sysuser order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basetreecontroller.bootstraptreedata(queryable, serializable, httpservletrequest, httpservletresponse, propertyprefilterable) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy70.listwithnopage(queryable, detachedcriteria) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listwithnopage(queryable, detachedcriteria) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(detachedcriteria) 
sql|select count(*) as y0_ from sys_user this_
sql|select this_.id as id14_0_, this_.name as name14_0_, this_.parent_id as parent3_14_0_, this_.parent_ids as parent4_14_0_, this_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = this_.id) as formula1_0_ from sys_organization this_
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| bootstraptreehelper cn.jeeweb.core.common.entity.tree.bootstraptreehelper.create() 
called| list cn.jeeweb.core.common.entity.tree.bootstraptreehelper.sort(list) 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| void cn.jeeweb.core.common.entity.tree.bootstraptreehelper.parsesubnode(bootstraptreenode) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.38314949567843615

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.6705476671728186
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1705476671728186
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.5470469979169379
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.047046997916938
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3836478780848849
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8836478780848849
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3836478780848849
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8836478780848849
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3836478780848849
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8836478780848849
Path matching:False
Request matching:False



======================================= 6 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_dict_group this_
select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdictgroup 
select from sysdictgroup order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5282714021091492
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5282714021091492

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.79902619712281
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.79902619712281
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5032191640299121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.503219164029912
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5032191640299121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.503219164029912
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5032191640299121
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.503219164029912
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4536287377785342
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9536287377785342
Path matching:False
Request matching:False



======================================= 7 given SQL query ===========================================
Given SQL session queries: 
insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy66.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_dict_group (create_by, create_date, del_flag, remarks, update_by, update_date, code, name, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2843302366974639
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2843302366974638
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22580067372189677
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22580067372189677
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22580067372189677
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22580067372189677
Path matching:True
Request matching:True



======================================= 8 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_dict this_ where this_.gid=?
select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.gid=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdict where this_.gid=? 
select from sysdict inner join sysdictgroup where this_.gid=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.46006019618200256
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.46006019618200256

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.5412004593380684
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5412004593380684
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.460331830661479
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.460331830661479
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.460331830661479
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.460331830661479
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.460331830661479
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.460331830661479
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.44951093965588773
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9495109396558877
Path matching:False
Request matching:False



======================================= 9 given SQL query ===========================================
Given SQL session queries: 
insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy67.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_dict (create_by, create_date, del_flag, remarks, update_by, update_date, gid, label, sort, value, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.26392582767483364
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.29615927864148656

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdict (id, gid, label, value, sort, null) values (?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4741674231965501
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.47416742319655
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3324063938135682
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3324063938135682
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3324063938135682
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3324063938135682
Path matching:False
Request matching:True



======================================= 10 given SQL query ===========================================
Given SQL session queries: 
select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
Pre-processed SQL session queries : 
select from sysdict inner join sysdictgroup where dictentity.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy67.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preedit(dictentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.27633697671694424

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.45601927208092435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4560192720809244
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.27034534402750826
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2703453440275083
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.379131116359328
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8791311163593281
Path matching:False
Request matching:False



======================================= 11 given SQL query ===========================================
Given SQL session queries: 
select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?
Pre-processed SQL session queries : 
select from sysdict inner join sysdictgroup where dictentity.id=? 
update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy67.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy67.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_dict set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, gid=?, label=?, sort=?, value=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.17233145528990337
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.21056620449100288

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5145768375118954
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5145768375118953
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5145768375118954
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5145768375118953
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5145768375118954
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5145768375118953
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.46462445155316523
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9646244515531652
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.46462445155316523
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9646244515531652
Path matching:False
Request matching:False



======================================= 12 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_dict this_ where this_.label=? and this_.gid=?
select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.label=? and this_.gid=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdict where this_.label=? and this_.gid=? 
select from sysdict inner join sysdictgroup where this_.label=? and this_.gid=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.dictcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| condition cn.jeeweb.core.query.data.condition.and(condition.operator, string, object) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy67.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict this_ where this_.label=? and this_.gid=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id10_1_, this_.create_by as create10_10_1_, this_.create_date as create2_10_1_, this_.del_flag as del3_10_1_, this_.remarks as remarks10_1_, this_.update_by as update11_10_1_, this_.update_date as update5_10_1_, this_.gid as gid10_1_, this_.gid as gid10_1_, this_.label as label10_1_, this_.sort as sort10_1_, this_.value as value10_1_, dictgroup2_.id as id11_0_, dictgroup2_.create_by as create8_11_0_, dictgroup2_.create_date as create2_11_0_, dictgroup2_.del_flag as del3_11_0_, dictgroup2_.remarks as remarks11_0_, dictgroup2_.update_by as update9_11_0_, dictgroup2_.update_date as update5_11_0_, dictgroup2_.code as code11_0_, dictgroup2_.name as name11_0_ from sys_dict this_ inner join sys_dict_group dictgroup2_ on this_.gid=dictgroup2_.id where this_.label=? and this_.gid=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.4582140423358487
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.4582140423358487

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdict]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, gid, label, value, sort, null from sysdict order by desc limit ?]

Syntactic Similarity:0.42082472345063876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4208247234506388
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.36396057640875945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3639605764087595
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.36396057640875945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3639605764087595
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.36396057640875945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3639605764087595
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdict set id=?, gid=?, label=?, value=?, sort=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3784599225506765
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8784599225506765
Path matching:False
Request matching:False



======================================= 13 given SQL query ===========================================
Given SQL session queries: 
select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
delete from sys_dict where id=?
Pre-processed SQL session queries : 
select from sysdict inner join sysdictgroup where dictentity.id=? 
delete from sys_dict where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy67.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictentity0_.id as id10_1_, dictentity0_.create_by as create10_10_1_, dictentity0_.create_date as create2_10_1_, dictentity0_.del_flag as del3_10_1_, dictentity0_.remarks as remarks10_1_, dictentity0_.update_by as update11_10_1_, dictentity0_.update_date as update5_10_1_, dictentity0_.gid as gid10_1_, dictentity0_.gid as gid10_1_, dictentity0_.label as label10_1_, dictentity0_.sort as sort10_1_, dictentity0_.value as value10_1_, dictgroup1_.id as id11_0_, dictgroup1_.create_by as create8_11_0_, dictgroup1_.create_date as create2_11_0_, dictgroup1_.del_flag as del3_11_0_, dictgroup1_.remarks as remarks11_0_, dictgroup1_.update_by as update9_11_0_, dictgroup1_.update_date as update5_11_0_, dictgroup1_.code as code11_0_, dictgroup1_.name as name11_0_ from sys_dict dictentity0_ inner join sys_dict_group dictgroup1_ on dictentity0_.gid=dictgroup1_.id where dictentity0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.2908762213139005
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.2908762213139005

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdict where id=?]

Syntactic Similarity:0.47497239486275766
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9749723948627577
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdict where id=?]

Syntactic Similarity:0.47497239486275766
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9749723948627577
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4092483429220646
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9092483429220646
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4092483429220646
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9092483429220646
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, gid, label, value, sort, null, code, id, name from sysdict  left outer join sysdictgroup on sysdict=sysdictgroup  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4092483429220646
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9092483429220646
Path matching:False
Request matching:False



======================================= 14 given SQL query ===========================================
Given SQL session queries: 
select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
Pre-processed SQL session queries : 
select from sysdictgroup where dictgroup.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy66.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, True, False, False]
path_matching_number_k:[0, 1, 2, 2, 2]
path_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.276954069449552
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.276954069449552

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4847747677999289
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4847747677999288
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.4066254823356935
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4066254823356936
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.44367393826692286
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9436739382669228
Path matching:False
Request matching:False



======================================= 15 given SQL query ===========================================
Given SQL session queries: 
select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
delete from sys_dict_group where id=?
Pre-processed SQL session queries : 
select from sysdictgroup where dictgroup.id=? 
delete from sys_dict_group where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.42444522976226184
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.42444522976226184

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False



======================================= 16 given SQL query ===========================================
Given SQL session queries: 
select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
delete from sys_dict_group where id=?
Pre-processed SQL session queries : 
select from sysdictgroup where dictgroup.id=? 
delete from sys_dict_group where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?
called| void cn.jeeweb.core.model.ajaxjson.fail(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.3372218364640585
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3372218364640585

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False



======================================= 17 given SQL query ===========================================
Given SQL session queries: 
select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
delete from sys_dict_group where id=?
Pre-processed SQL session queries : 
select from sysdictgroup where dictgroup.id=? 
delete from sys_dict_group where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy66.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select dictgroup0_.id as id11_0_, dictgroup0_.create_by as create8_11_0_, dictgroup0_.create_date as create2_11_0_, dictgroup0_.del_flag as del3_11_0_, dictgroup0_.remarks as remarks11_0_, dictgroup0_.update_by as update9_11_0_, dictgroup0_.update_date as update5_11_0_, dictgroup0_.code as code11_0_, dictgroup0_.name as name11_0_ from sys_dict_group dictgroup0_ where dictgroup0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_dict_group where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.3372218364640585
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3372218364640585

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdictgroup where id=?]

Syntactic Similarity:0.562637652683009
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.062637652683009
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.4363147709156078
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9363147709156078
Path matching:False
Request matching:False



======================================= 18 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_dict_group this_ where this_.name like ?
select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ where this_.name like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdictgroup where this_.name like ? like 
select from sysdictgroup where this_.name like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy66.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_dict_group this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id11_0_, this_.create_by as create8_11_0_, this_.create_date as create2_11_0_, this_.del_flag as del3_11_0_, this_.remarks as remarks11_0_, this_.update_by as update9_11_0_, this_.update_date as update5_11_0_, this_.code as code11_0_, this_.name as name11_0_ from sys_dict_group this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.47254584001457695
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.47254584001457695

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.36105162962873016
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3610516296287303
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28760587929093434
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2876058792909344
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.28760587929093434
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2876058792909344
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28760587929093434
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2876058792909344
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select code, id, name from sysdictgroup where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdictgroup set code=?, id=?, name=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2668381567992881
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7668381567992881
Path matching:False
Request matching:False



======================================= 19 given SQL query ===========================================
Given SQL session queries: 
insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy69.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.24541503327889827
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.26753508082124805

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5016689625560723
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5016689625560722
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.4228664738469845
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9228664738469845
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.4228664738469845
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9228664738469845
Path matching:False
Request matching:False



======================================= 20 given SQL query ===========================================
Given SQL session queries: 
select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
select from sysmenu where menu.id=? 
insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy69.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_menu (name, parent_id, parent_ids, isshow, menu_icon, permission, remarks, sort, type, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, False, False]
path_matching_number_k:[0, 0, 1, 1, 1]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.25, 0.2]
path_ap:0.20483660483022834
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, False, False]
request_matching_number_k:[0, 0, 1, 1, 1]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.25, 0.2]
request_ap:0.23332302873026814

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]

Syntactic Similarity:0.5294722613577014
Semantic Similarity:0.6666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.196138928024368
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5238816313574939
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0238816313574939
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5238816313574939
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0238816313574939
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5238816313574939
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0238816313574939
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5007599099614779
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.000759909961478
Path matching:False
Request matching:False



======================================= 21 given SQL query ===========================================
Given SQL session queries: 
select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
Pre-processed SQL session queries : 
select from sysmenu where menu.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, True]
path_matching_number_k:[0, 0, 0, 1, 2]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
path_ap:0.23406105599129517
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.23406105599129517

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.3172643159499739
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.317264315949974
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2611873360734033
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2611873360734034
Path matching:True
Request matching:True



======================================= 22 given SQL query ===========================================
Given SQL session queries: 
select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, '%')
Pre-processed SQL session queries : 
select from sysmenu where menu.id=? 
update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+, length(parent_ids)+)) where parent_ids like concat(?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy69.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy69.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_menu set name=?, parent_id=?, parent_ids=?, isshow=?, menu_icon=?, permission=?, remarks=?, sort=?, type=?, url=? where id=?
sql|update sys_menu set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.1866701582058229
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.20591226084456987

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24161515500054537
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2416151550005454
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24161515500054537
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2416151550005454
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysmenu set null=?, null=?, menuicon=?, type=?, url=?, permission=?, isshow=?, sort=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24161515500054537
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2416151550005454
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21915073857519396
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.719150738575194
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21915073857519396
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.719150738575194
Path matching:False
Request matching:False



======================================= 23 given SQL query ===========================================
Given SQL session queries: 
select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
delete from sys_menu where id=? or parent_ids like concat(?, '%')
Pre-processed SQL session queries : 
select from sysmenu where menu.id=? 
delete from sys_menu where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy69.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select menu0_.id as id13_0_, menu0_.name as name13_0_, menu0_.parent_id as parent3_13_0_, menu0_.parent_ids as parent4_13_0_, menu0_.isshow as isshow13_0_, menu0_.menu_icon as menu6_13_0_, menu0_.permission as permission13_0_, menu0_.remarks as remarks13_0_, menu0_.sort as sort13_0_, menu0_.type as type13_0_, menu0_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_0_ from sys_menu menu0_ where menu0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
sql|delete from sys_menu where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.2982166879208253
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.2982166879208253

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysmenu where id=?]

Syntactic Similarity:0.3757432600074543
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8757432600074543
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysmenu where id=?]

Syntactic Similarity:0.3757432600074543
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8757432600074543
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysmenu where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysmenu (null, null, menuicon, type, url, permission, isshow, sort, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]

Syntactic Similarity:0.18872555769828717
Semantic Similarity:0.6666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8553922243649538
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.16179884827288785
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6617988482728878
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15020004217115643
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6502000421711565
Path matching:False
Request matching:False



======================================= 24 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_role this_
select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysrole 
select from sysrole order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy72.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_role this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5067119845189731
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5067119845189731

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.7231270966734282
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7231270966734282
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.36941794803240535
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3694179480324054
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3658340995464958
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.365834099546496
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3658340995464958
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.365834099546496
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3658340995464958
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.365834099546496
Path matching:False
Request matching:False



======================================= 25 given SQL query ===========================================
Given SQL session queries: 
select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
delete from sys_role where id=?
Pre-processed SQL session queries : 
select from sysrole where role.id=? 
delete from sys_role where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.30455291799352424
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.30455291799352424

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.5559294461386708
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0559294461386708
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.5559294461386708
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0559294461386708
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]

Syntactic Similarity:0.37054369982928054
Semantic Similarity:0.6666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0372103664959471
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3211425159984366
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8211425159984366
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3211425159984366
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8211425159984366
Path matching:False
Request matching:False



======================================= 26 given SQL query ===========================================
Given SQL session queries: 
insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy72.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_role (create_by, create_date, del_flag, remarks, update_by, update_date, code, is_sys, name, usable, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.24728577104436184
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.2754381331670547

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.29901495758622254
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2990149575862224
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()

Syntactic Similarity:0.23211693733733293
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.732116937337333
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)

Syntactic Similarity:0.23211693733733293
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.732116937337333
Path matching:False
Request matching:False



======================================= 27 given SQL query ===========================================
Given SQL session queries: 
select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
Pre-processed SQL session queries : 
select from sysrole where role.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy72.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.23002724312771514
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.23002724312771514

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.3557639943210805
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3557639943210806
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.35415404330143074
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3541540433014307
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3154445566600019
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.315444556660002
Path matching:False
Request matching:False



======================================= 28 given SQL query ===========================================
Given SQL session queries: 
select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?
Pre-processed SQL session queries : 
select from sysrole where role.id=? 
update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy72.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy72.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_role set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, code=?, is_sys=?, name=?, usable=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.17879544093624555
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.21397060893289344

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.36589380175284214
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3658938017528421
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.36589380175284214
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3658938017528421
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysrole set id=?, name=?, code=?, issys=?, usable=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.36589380175284214
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3658938017528421
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3395063449681866
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8395063449681865
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3395063449681866
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8395063449681865
Path matching:False
Request matching:False



======================================= 29 given SQL query ===========================================
Given SQL session queries: 
select this_.id as id13_0_, this_.name as name13_0_, this_.parent_id as parent3_13_0_, this_.parent_ids as parent4_13_0_, this_.isshow as isshow13_0_, this_.menu_icon as menu6_13_0_, this_.permission as permission13_0_, this_.remarks as remarks13_0_, this_.sort as sort13_0_, this_.type as type13_0_, this_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = this_.id) as formula0_0_ from sys_menu this_
select menu0_.id as id13_, menu0_.name as name13_, menu0_.parent_id as parent3_13_, menu0_.parent_ids as parent4_13_, menu0_.isshow as isshow13_, menu0_.menu_icon as menu6_13_, menu0_.permission as permission13_, menu0_.remarks as remarks13_, menu0_.sort as sort13_, menu0_.type as type13_, menu0_.url as url13_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_ from sys_menu menu0_ where menu0_.id in (select rolemenu1_.menu_id from sys_role_menu rolemenu1_ where rolemenu1_.role_id=?)
Pre-processed SQL session queries : 
select from sysmenu 
select from sysmenu where menu.id in (select rolemenu.menu_id from sys_role_menu rolemenu where rolemenu.role_id=?) 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy69.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id13_0_, this_.name as name13_0_, this_.parent_id as parent3_13_0_, this_.parent_ids as parent4_13_0_, this_.isshow as isshow13_0_, this_.menu_icon as menu6_13_0_, this_.permission as permission13_0_, this_.remarks as remarks13_0_, this_.sort as sort13_0_, this_.type as type13_0_, this_.url as url13_0_, (select count(*) from sys_menu f_t where f_t.parent_id = this_.id) as formula0_0_ from sys_menu this_
called| boolean cn.jeeweb.modules.sys.entity.menu.ishaschildren() 
called| list com.sun.proxy..proxy69.findmenubyroleid(string) 
called| list cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select menu0_.id as id13_, menu0_.name as name13_, menu0_.parent_id as parent3_13_, menu0_.parent_ids as parent4_13_, menu0_.isshow as isshow13_, menu0_.menu_icon as menu6_13_, menu0_.permission as permission13_, menu0_.remarks as remarks13_, menu0_.sort as sort13_, menu0_.type as type13_, menu0_.url as url13_, (select count(*) from sys_menu f_t where f_t.parent_id = menu0_.id) as formula0_ from sys_menu menu0_ where menu0_.id in (select rolemenu1_.menu_id from sys_role_menu rolemenu1_ where rolemenu1_.role_id=?)
called| boolean cn.jeeweb.core.common.entity.treeentity.isleaf() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| boolean cn.jeeweb.core.common.entity.abstractentity.isnew() 
called| boolean cn.jeeweb.core.common.entity.treeentity.isroot() 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.09408602150537634
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.09408602150537634

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysmenu]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu order by desc limit ?]

Syntactic Similarity:0.21533540899641312
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2153354089964132
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16946763774829532
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1694676377482953
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.codegen.controller.tablecontroller.createmenu(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(string,object,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16946763774829532
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1694676377482953
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16946763774829532
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1694676377482953
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, menuicon, type, url, permission, isshow, sort, remarks from sysmenu  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.16946763774829532
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1694676377482953
Path matching:False
Request matching:False



======================================= 30 given SQL query ===========================================
Given SQL session queries: 
select this_.id as id16_0_, this_.menu_id as menu2_16_0_, this_.role_id as role3_16_0_ from sys_role_menu this_ where this_.role_id=?
insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)
Pre-processed SQL session queries : 
select from sysrolemenu where this_.role_id=? 
insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy71.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id16_0_, this_.menu_id as menu2_16_0_, this_.role_id as role3_16_0_ from sys_role_menu this_ where this_.role_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy71.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_role_menu (menu_id, role_id, id) values (?, ?, ?)
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache() 
called| void cn.jeeweb.modules.sys.utils.userutils.removecache(string) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| object cn.jeeweb.modules.sys.security.shiro.web.session.mgt.onlinewebsessionmanager.removeattribute(sessionkey, object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| object cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.removeattribute(object) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.markattributechanged() 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| void cn.jeeweb.modules.sys.utils.userutils.clearcache(user) 
called| void cn.jeeweb.core.utils.cacheutils.remove(string, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.05459406496419389
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.06100505228085989

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24784075432616992
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7478407543261699
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24784075432616992
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7478407543261699
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysrolemenu (menuid, roleid, id) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24784075432616992
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7478407543261699
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1886551013194309
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6886551013194309
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select menuid, roleid, id from sysrolemenu where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1886551013194309
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6886551013194309
Path matching:False
Request matching:False



======================================= 31 given SQL query ===========================================
Given SQL session queries: 
select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
delete from sys_role where id=?
Pre-processed SQL session queries : 
select from sysrole where role.id=? 
delete from sys_role where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy72.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select role0_.id as id15_0_, role0_.create_by as create10_15_0_, role0_.create_date as create2_15_0_, role0_.del_flag as del3_15_0_, role0_.remarks as remarks15_0_, role0_.update_by as update11_15_0_, role0_.update_date as update5_15_0_, role0_.code as code15_0_, role0_.is_sys as is7_15_0_, role0_.name as name15_0_, role0_.usable as usable15_0_ from sys_role role0_ where role0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_role where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.3816389322902928
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3816389322902928

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.5559294461386708
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0559294461386708
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysrole where id=?]

Syntactic Similarity:0.5559294461386708
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0559294461386708
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.doauthmenu(role,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string,object)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string,object,class)
[delete from sysrole where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list)
[insert into sysrole (id, name, code, issys, usable) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.modules.sys.utils.userutils.clearcache()
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]

Syntactic Similarity:0.37054369982928054
Semantic Similarity:0.6666666666666666
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0372103664959471
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3211425159984366
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8211425159984366
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3211425159984366
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8211425159984366
Path matching:False
Request matching:False



======================================= 32 given SQL query ===========================================
Given SQL session queries: 
insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy70.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.33570565239585726
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.33286048810808905

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26676239103013444
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2667623910301344
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30259423376567746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30259423376567746
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30259423376567746
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30259423376567746
Path matching:True
Request matching:True



======================================= 33 given SQL query ===========================================
Given SQL session queries: 
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
delete from sys_organization where id=? or parent_ids like concat(?, '%')
Pre-processed SQL session queries : 
select from sysorganization where organizati.id=? 
delete from sys_organization where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy70.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.delete(serializable) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_organization where id=? or parent_ids like concat(?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.33962847888497394
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.33962847888497394

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysorganization where id=?]

Syntactic Similarity:0.37412646165426694
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.874126461654267
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysorganization where id=?]

Syntactic Similarity:0.37412646165426694
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.874126461654267
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28152256170514883
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7815225617051489
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.28152256170514883
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7815225617051489
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.28152256170514883
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7815225617051489
Path matching:False
Request matching:False



======================================= 34 given SQL query ===========================================
Given SQL session queries: 
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
Pre-processed SQL session queries : 
select from sysorganization where organizati.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, True, False, False]
path_matching_number_k:[0, 1, 2, 2, 2]
path_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.2708739363499369
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.2708739363499369

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.48920321455990057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4892032145599006
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.39420954759506077
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3942095475950609
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.44481110680584207
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.944811106805842
Path matching:False
Request matching:False



======================================= 35 given SQL query ===========================================
Given SQL session queries: 
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, '%')
Pre-processed SQL session queries : 
select from sysorganization where organizati.id=? 
update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+, length(parent_ids)+)) where parent_ids like concat(?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy70.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy70.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.updateselftandchild(serializable, serializable, string) 
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| class cn.jeeweb.core.utils.reflectionutils.getsupergenerictype(class) 
called| class cn.jeeweb.core.utils.reflectionutils.getsuperclassgenrictype(class, int) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyindexhql(string, object[]) 
called| int cn.jeeweb.core.common.service.impl.commonserviceimpl.updatebyaliashql(string, map) 
called| int cn.jeeweb.core.common.dao.impl.commondaoimpl.updatebyaliashql(string, map) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setaliasparameter(query, map) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_organization set name=?, parent_id=?, parent_ids=?, remarks=? where id=?
sql|update sys_organization set parent_ids=concat(?, substring(parent_ids, length(?)+1, length(parent_ids)+1)) where parent_ids like concat(?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.2220309290058996
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.23550572363108713

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17492262498215735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1749226249821574
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17492262498215735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1749226249821574
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysorganization set null=?, remarks=?, null=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17492262498215735
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1749226249821574
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1312917619191041
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6312917619191041
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1312917619191041
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6312917619191041
Path matching:False
Request matching:False



======================================= 36 given SQL query ===========================================
Given SQL session queries: 
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
select from sysorganization where organizati.id=? 
insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy70.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.treecommonserviceimpl.save(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| string cn.jeeweb.core.common.entity.treeentity.makeselfasnewparentids() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_organization (name, parent_id, parent_ids, remarks, id) values (?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.2254000560335226
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.2614023848073391

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3786891594010929
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8786891594010928
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3786891594010929
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8786891594010928
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3786891594010929
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8786891594010928
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3274950433084025
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8274950433084025
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3274950433084025
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8274950433084025
Path matching:False
Request matching:False



======================================= 37 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user this_
select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuser 
select from sysuser order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3969242192521312

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.5658123245187491
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.565812324518749
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14278087945040857
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1427808794504086
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.14278087945040857
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1427808794504086
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14278087945040857
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1427808794504086
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14278087945040857
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1427808794504086
Path matching:False
Request matching:False



======================================= 38 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user this_ where this_.realname like ?
select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ where this_.realname like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuser where this_.realname like ? like 
select from sysuser where this_.realname like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy41.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user this_ where this_.realname like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id17_0_, this_.create_by as create14_17_0_, this_.create_date as create2_17_0_, this_.del_flag as del3_17_0_, this_.remarks as remarks17_0_, this_.update_by as update15_17_0_, this_.update_date as update5_17_0_, this_.email as email17_0_, this_.password as password17_0_, this_.phone as phone17_0_, this_.portrait as portrait17_0_, this_.realname as realname17_0_, this_.salt as salt17_0_, this_.status as status17_0_, this_.username as username17_0_ from sys_user this_ where this_.realname like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3951106207322423

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.23021324048947783
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2302132404894779
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09279899368190944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0927989936819094
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.09279899368190944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0927989936819094
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09279899368190944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0927989936819094
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.09279899368190944
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0927989936819094
Path matching:False
Request matching:False



======================================= 39 given SQL query ===========================================
Given SQL session queries: 
select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
Pre-processed SQL session queries : 
select from sysrole 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showcreate(model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showcreate(model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.showcreate(user, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.6284916564818539
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.628491656481854
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.rolecontroller.authmenu(role,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list()
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class)
[select id, name, code, issys, usable from sysrole]
method:cn.jeeweb.modules.sys.service.impl.menuserviceimpl.findmenubyroleid(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string,object[])
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5351116018375186
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5351116018375186
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.5087800595449192
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5087800595449192
Path matching:False
Request matching:False



======================================= 40 given SQL query ===========================================
Given SQL session queries: 
insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
select from sysuserrole inner join sysrole inner join sysuser where this_.user_id=? 
insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
select from sysuserorganization inner join sysorganization inner join sysuser where this_.user_id=? 
insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy41.save(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.save(user) 
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_user (create_by, create_date, del_flag, remarks, update_by, update_date, email, password, phone, portrait, realname, salt, status, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.2690508789350507

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19272228999473248
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.39272228999473247
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19272228999473248
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.39272228999473247
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuserrole (id, userid, null, roleid, null) values (?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19272228999473248
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.39272228999473247
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuser (null, null, null, null, username, realname, null, password, salt, email, phone, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.192682050710895
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.392682050710895
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysuser (null, null, null, null, username, realname, null, password, salt, email, phone, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.192682050710895
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.392682050710895
Path matching:False
Request matching:True



======================================= 41 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
select from sysrole 
select from sysrole where role.id in (select userrole.role_id from sys_user_role userrole where userrole.user_id=?) 
select from sysorganization where organizati.id in (select userorgani.organization_id from sys_user_organization userorgani where userorgani.user_id=?) 
select from sysorganization where organizati.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, True]
request_matching_number_k:[0, 1, 2, 2, 3]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.3167281228887761

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.30265232344258836
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6359856567759217
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.30265232344258836
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6359856567759217
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.30265232344258836
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6359856567759217
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.22481406807735016
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5581474014106835
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22481406807735016
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5581474014106835
Path matching:False
Request matching:True



======================================= 42 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
delete from sys_user_role where id=?
insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
delete from sys_user_organization where id=?
insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
select from sysuserrole inner join sysrole inner join sysuser where this_.user_id=? 
delete from sys_user_role where id=?
insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
select from sysuserorganization inner join sysorganization inner join sysuser where this_.user_id=? 
select from sysorganization where organizati.id=? 
delete from sys_user_organization where id=?
insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.modules.sys.controller.usercontroller.presave(user, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy41.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.aftersave(user, httpservletrequest, httpservletresponse) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy40.batchsave(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchsave(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchsave(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
sql|insert into sys_user_role (role_id, user_id, id) values (?, ?, ?)
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
sql|select organizati0_.id as id14_0_, organizati0_.name as name14_0_, organizati0_.parent_id as parent3_14_0_, organizati0_.parent_ids as parent4_14_0_, organizati0_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_0_ from sys_organization organizati0_ where organizati0_.id=?
called| boolean cn.jeeweb.modules.sys.entity.organization.ishaschildren() 
sql|delete from sys_user_organization where id=?
called| void com.sun.proxy..proxy39.batchsave(list) 
sql|insert into sys_user_organization (organization_id, user_id, id) values (?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, True]
request_matching_number_k:[0, 0, 0, 0, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
request_ap:0.16591258204161427

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2493218314184235
Semantic Similarity:0.1111111111111111
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3604329425295346
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2493218314184235
Semantic Similarity:0.1111111111111111
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3604329425295346
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2493218314184235
Semantic Similarity:0.1111111111111111
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3604329425295346
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1291962324522494
Semantic Similarity:0.2222222222222222
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.35141845467447164
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1291962324522494
Semantic Similarity:0.2222222222222222
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.35141845467447164
Path matching:False
Request matching:True



======================================= 43 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.5833333333333333

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.17827200328817194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.178272003288172
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False



======================================= 44 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
select from sysrole 
select from sysrole where role.id in (select userrole.role_id from sys_user_role userrole where userrole.user_id=?) 
select from sysorganization where organizati.id in (select userorgani.organization_id from sys_user_organization userorgani where userorgani.user_id=?) 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.controller.usercontroller.preedit(user, model, httpservletrequest, httpservletresponse) 
called| list com.sun.proxy..proxy72.list() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list() 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id15_0_, this_.create_by as create10_15_0_, this_.create_date as create2_15_0_, this_.del_flag as del3_15_0_, this_.remarks as remarks15_0_, this_.update_by as update11_15_0_, this_.update_date as update5_15_0_, this_.code as code15_0_, this_.is_sys as is7_15_0_, this_.name as name15_0_, this_.usable as usable15_0_ from sys_role this_
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| list com.sun.proxy..proxy72.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.roleserviceimpl.findlistbyuserid(string) 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.listbyhql(string, object[]) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.listbyhql(string, object[]) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.setparameters(query, object[]) 
sql|select role0_.id as id15_, role0_.create_by as create10_15_, role0_.create_date as create2_15_, role0_.del_flag as del3_15_, role0_.remarks as remarks15_, role0_.update_by as update11_15_, role0_.update_date as update5_15_, role0_.code as code15_, role0_.is_sys as is7_15_, role0_.name as name15_, role0_.usable as usable15_ from sys_role role0_ where role0_.id in (select userrole1_.role_id from sys_user_role userrole1_ where userrole1_.user_id=?)
called| list com.sun.proxy..proxy70.findlistbyuserid(string) 
called| list cn.jeeweb.modules.sys.service.impl.organizationserviceimpl.findlistbyuserid(string) 
sql|select organizati0_.id as id14_, organizati0_.name as name14_, organizati0_.parent_id as parent3_14_, organizati0_.parent_ids as parent4_14_, organizati0_.remarks as remarks14_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati0_.id) as formula1_ from sys_organization organizati0_ where organizati0_.id in (select userorgani1_.organization_id from sys_user_organization userorgani1_ where userorgani1_.user_id=?)
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, True]
request_matching_number_k:[0, 1, 2, 2, 3]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.6]
request_ap:0.3236586193979938

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.22855163321246558
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5618849665457989
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.22855163321246558
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5618849665457989
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, null from sysorganization  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.22855163321246558
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5618849665457989
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2144395476885844
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5477728810219177
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, issys, usable from sysrole where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2144395476885844
Semantic Similarity:0.3333333333333333
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5477728810219177
Path matching:False
Request matching:True



======================================= 45 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void com.sun.proxy..proxy41.changepassword(string, string) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.modules.sys.service.impl.passwordservice.encryptpassword(user) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.saveorupdate(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.saveorupdate(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_user set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, email=?, password=?, phone=?, portrait=?, realname=?, salt=?, status=?, username=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.2
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, True]
request_matching_number_k:[0, 0, 0, 1, 2]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.4]
request_ap:0.325

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuser set null=?, null=?, null=?, null=?, username=?, realname=?, null=?, password=?, salt=?, email=?, phone=?, status=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2234366546290597
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2234366546290598
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.20266032636999165
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7026603263699917
Path matching:True
Request matching:True



======================================= 46 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
delete from sys_user where id=?
delete from sys_user_role where id=?
select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 
select from sysuserrole inner join sysrole inner join sysuser where this_.user_id=? 
delete from sys_user where id=?
delete from sys_user_role where id=?
select from sysuserorganization inner join sysorganization inner join sysuser where this_.user_id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy41.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.modules.sys.service.impl.userserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
called| void com.sun.proxy..proxy40.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyproperty(string, object) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdeletebyproperty(string, object, class) 
called| criteria cn.jeeweb.core.common.dao.impl.commondaoimpl.createcriteria(class, criterion[]) 
sql|select this_.id as id21_2_, this_.role_id as role2_21_2_, this_.user_id as user3_21_2_, role2_.id as id15_0_, role2_.create_by as create10_15_0_, role2_.create_date as create2_15_0_, role2_.del_flag as del3_15_0_, role2_.remarks as remarks15_0_, role2_.update_by as update11_15_0_, role2_.update_date as update5_15_0_, role2_.code as code15_0_, role2_.is_sys as is7_15_0_, role2_.name as name15_0_, role2_.usable as usable15_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_role this_ inner join sys_role role2_ on this_.role_id=role2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.batchdelete(list) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|delete from sys_user where id=?
sql|delete from sys_user_role where id=?
called| void com.sun.proxy..proxy39.batchdeletebyproperty(string, object) 
sql|select this_.id as id20_2_, this_.organization_id as organiza2_20_2_, this_.user_id as user3_20_2_, organizati2_.id as id14_0_, organizati2_.name as name14_0_, organizati2_.parent_id as parent3_14_0_, organizati2_.parent_ids as parent4_14_0_, organizati2_.remarks as remarks14_0_, (select count(*) from sys_organization f_t where f_t.parent_id = organizati2_.id) as formula1_0_, user3_.id as id17_1_, user3_.create_by as create14_17_1_, user3_.create_date as create2_17_1_, user3_.del_flag as del3_17_1_, user3_.remarks as remarks17_1_, user3_.update_by as update15_17_1_, user3_.update_date as update5_17_1_, user3_.email as email17_1_, user3_.password as password17_1_, user3_.phone as phone17_1_, user3_.portrait as portrait17_1_, user3_.realname as realname17_1_, user3_.salt as salt17_1_, user3_.status as status17_1_, user3_.username as username17_1_ from sys_user_organization this_ inner join sys_organization organizati2_ on this_.organization_id=organizati2_.id inner join sys_user user3_ on this_.user_id=user3_.id where this_.user_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, True, False, False]
path_matching_number_k:[1, 1, 2, 2, 2]
path_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.4]
path_ap:0.2563133108272464
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, True, False, False]
request_matching_number_k:[1, 1, 2, 2, 2]
request_precision_k:[1.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.2563133108272464

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.29683001392486974
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.49683001392486975
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuser where null=?]

Syntactic Similarity:0.29683001392486974
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.49683001392486975
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserrole where id=?]

Syntactic Similarity:0.26900868497887026
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.46900868497887027
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysuserrole where id=?]

Syntactic Similarity:0.26900868497887026
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.46900868497887027
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, userid, null, roleid, null, null, null, null, null, username, realname, null, password, salt, email, phone, status, id, name, code, issys, usable from sysuserrole  left outer join sysuser on sysuserrole=sysuser  left outer join sysrole on sysuserrole=sysrole  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2200142583792461
Semantic Similarity:0.2
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.4200142583792461
Path matching:False
Request matching:False



======================================= 47 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_online this_
select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ order by this_.start_timestsamp desc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuseronline 
select from sysuseronline order by this.starttimestsamp limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.549928724003488
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.549928724003488

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.6583724676192131
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.658372467619213
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3435578911837571
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3435578911837571
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.3435578911837571
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3435578911837571
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3435578911837571
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3435578911837571
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3435578911837571
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3435578911837571
Path matching:False
Request matching:False



======================================= 48 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_online this_ where this_.username=?
select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuseronline where this_.username=? 
select from sysuseronline where this_.username=?  order by this.starttimestsamp limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5226930353683202
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5226930353683202

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.49867238943741404
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.498672389437414
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False



======================================= 49 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_online this_ where this_.username=?
select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
Pre-processed SQL session queries : 
select count(*) from sysuseronline where this_.username=? 
select from sysuseronline where this_.username=?  order by this.starttimestsamp limit 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.deepcopy(object) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5226930353683202
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5226930353683202

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.49867238943741404
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.498672389437414
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False



======================================= 50 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_online this_ where this_.username=?
select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
Pre-processed SQL session queries : 
select count(*) from sysuseronline where this_.username=? 
select from sysuseronline where this_.username=?  order by this.starttimestsamp limit 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5226930353683202
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5226930353683202

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.49867238943741404
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.498672389437414
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False



======================================= 51 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_online this_ where this_.username=?
select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
Pre-processed SQL session queries : 
select count(*) from sysuseronline where this_.username=? 
select from sysuseronline where this_.username=?  order by this.starttimestsamp limit 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy42.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_online this_ where this_.username=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id19_0_, this_.create_by as create16_19_0_, this_.create_date as create2_19_0_, this_.del_flag as del3_19_0_, this_.remarks as remarks19_0_, this_.update_by as update17_19_0_, this_.update_date as update5_19_0_, this_.host as host19_0_, this_.last_access_time as last7_19_0_, this_.online_session as online8_19_0_, this_.start_timestsamp as start9_19_0_, this_.status as status19_0_, this_.system_host as system11_19_0_, this_.online_timeout as online12_19_0_, this_.user_agent as user13_19_0_, this_.user_id as user14_19_0_, this_.username as username19_0_ from sys_user_online this_ where this_.username=? order by this_.start_timestsamp desc limit ?, ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.readobject(objectinputstream) 
called| boolean cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.isfieldpresent(short, int) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| string[] cn.jeeweb.core.query.resolver.querymethodargumentresolver.filterqueryvalues(string[]) 
called| queryable cn.jeeweb.core.query.data.queryrequest.addcondition(string, object) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.fromstring(string) 
called| condition.operator cn.jeeweb.core.query.data.condition.operator.valueof(string) 
called| boolean cn.jeeweb.core.query.data.condition.operator.isallowblankvalue(condition.operator) 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5226930353683202
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5226930353683202

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuseronline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline order by desc limit ?]

Syntactic Similarity:0.49867238943741404
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.498672389437414
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, userid, username, host, systemhost, useragent, status, starttimestsamp, lastaccesstime, onlinetimeout, onlinesession from sysuseronline where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2947221125568976
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2947221125568977
Path matching:False
Request matching:False



======================================= 52 given SQL query ===========================================
Given SQL session queries: 
select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
Pre-processed SQL session queries : 
select from sysuser where user.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string, model, httpservletrequest, httpservletresponse) 
called| serializable com.sun.proxy..proxy41.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select user0_.id as id17_0_, user0_.create_by as create14_17_0_, user0_.create_date as create2_17_0_, user0_.del_flag as del3_17_0_, user0_.remarks as remarks17_0_, user0_.update_by as update15_17_0_, user0_.update_date as update5_17_0_, user0_.email as email17_0_, user0_.password as password17_0_, user0_.phone as phone17_0_, user0_.portrait as portrait17_0_, user0_.realname as realname17_0_, user0_.salt as salt17_0_, user0_.status as status17_0_, user0_.username as username17_0_ from sys_user user0_ where user0_.id=?
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, True, False, False]
request_matching_number_k:[0, 1, 2, 2, 2]
request_precision_k:[0.0, 0.5, 0.6666666666666666, 0.5, 0.4]
request_ap:0.5833333333333333

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.17827200328817194
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.178272003288172
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.changepassword(string,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.userserviceimpl.changepassword(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.usercontroller.info(string,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser where null=?]
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13732497301024427
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1373249730102444
Path matching:False
Request matching:False



======================================= 53 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_user_last_online this_
select this_.id as id18_0_, this_.create_by as create16_18_0_, this_.create_date as create2_18_0_, this_.del_flag as del3_18_0_, this_.remarks as remarks18_0_, this_.update_by as update17_18_0_, this_.update_date as update5_18_0_, this_.host as host18_0_, this_.last_login_timestamp as last7_18_0_, this_.last_stop_timestamp as last8_18_0_, this_.login_count as login9_18_0_, this_.system_host as system10_18_0_, this_.total_online_time as total11_18_0_, this_.uid as uid18_0_, this_.user_agent as user13_18_0_, this_.user_id as user14_18_0_, this_.username as username18_0_ from sys_user_last_online this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysuserlastonline 
select from sysuserlastonline order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy73.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_user_last_online this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id18_0_, this_.create_by as create16_18_0_, this_.create_date as create2_18_0_, this_.del_flag as del3_18_0_, this_.remarks as remarks18_0_, this_.update_by as update17_18_0_, this_.update_date as update5_18_0_, this_.host as host18_0_, this_.last_login_timestamp as last7_18_0_, this_.last_stop_timestamp as last8_18_0_, this_.login_count as login9_18_0_, this_.system_host as system10_18_0_, this_.total_online_time as total11_18_0_, this_.uid as uid18_0_, this_.user_agent as user13_18_0_, this_.user_id as user14_18_0_, this_.username as username18_0_ from sys_user_last_online this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserlastonline]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline order by desc limit ?]

Syntactic Similarity:0.5964884384889061
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.596488438488906
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25891742823540687
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.258917428235407
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25891742823540687
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.258917428235407
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25891742823540687
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.258917428235407
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, logincount, totalonlinetime, host, useragent, systemhost, username, laststoptimestamp, lastlogintimestamp, uid, userid from sysuserlastonline where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysuserlastonline set id=?, logincount=?, totalonlinetime=?, host=?, useragent=?, systemhost=?, username=?, laststoptimestamp=?, lastlogintimestamp=?, uid=?, userid=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23705202903346725
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7370520290334672
Path matching:False
Request matching:False



======================================= 54 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_attachment this_
select this_.id as id8_1_, this_.create_by as create13_8_1_, this_.create_date as create2_8_1_, this_.del_flag as del3_8_1_, this_.remarks as remarks8_1_, this_.update_by as update14_8_1_, this_.update_date as update5_8_1_, this_.fileext as fileext8_1_, this_.filename as filename8_1_, this_.filepath as filepath8_1_, this_.filesize as filesize8_1_, this_.status as status8_1_, this_.uploadip as uploadip8_1_, this_.uploadtime as uploadtime8_1_, this_.userid as userid8_1_, user2_.id as id17_0_, user2_.create_by as create14_17_0_, user2_.create_date as create2_17_0_, user2_.del_flag as del3_17_0_, user2_.remarks as remarks17_0_, user2_.update_by as update15_17_0_, user2_.update_date as update5_17_0_, user2_.email as email17_0_, user2_.password as password17_0_, user2_.phone as phone17_0_, user2_.portrait as portrait17_0_, user2_.realname as realname17_0_, user2_.salt as salt17_0_, user2_.status as status17_0_, user2_.username as username17_0_ from sys_attachment this_ inner join sys_user user2_ on this_.userid=user2_.id order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysattachment 
select from sysattachment inner join sysuser order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy64.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_attachment this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id8_1_, this_.create_by as create13_8_1_, this_.create_date as create2_8_1_, this_.del_flag as del3_8_1_, this_.remarks as remarks8_1_, this_.update_by as update14_8_1_, this_.update_date as update5_8_1_, this_.fileext as fileext8_1_, this_.filename as filename8_1_, this_.filepath as filepath8_1_, this_.filesize as filesize8_1_, this_.status as status8_1_, this_.uploadip as uploadip8_1_, this_.uploadtime as uploadtime8_1_, this_.userid as userid8_1_, user2_.id as id17_0_, user2_.create_by as create14_17_0_, user2_.create_date as create2_17_0_, user2_.del_flag as del3_17_0_, user2_.remarks as remarks17_0_, user2_.update_by as update15_17_0_, user2_.update_date as update5_17_0_, user2_.email as email17_0_, user2_.password as password17_0_, user2_.phone as phone17_0_, user2_.portrait as portrait17_0_, user2_.realname as realname17_0_, user2_.salt as salt17_0_, user2_.status as status17_0_, user2_.username as username17_0_ from sys_attachment this_ inner join sys_user user2_ on this_.userid=user2_.id order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.5323528779520057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5323528779520057
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysattachment]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, null, null, null, null, null, null, null, null from sysattachment order by desc limit ?]

Syntactic Similarity:0.5323528779520057
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5323528779520057
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.uploadsimditor(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.2687271206486406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2687271206486406
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2687271206486406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2687271206486406
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.upload(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.2687271206486406
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2687271206486406
Path matching:False
Request matching:False



======================================= 55 given SQL query ===========================================
Given SQL session queries: 
select attachment0_.id as id8_1_, attachment0_.create_by as create13_8_1_, attachment0_.create_date as create2_8_1_, attachment0_.del_flag as del3_8_1_, attachment0_.remarks as remarks8_1_, attachment0_.update_by as update14_8_1_, attachment0_.update_date as update5_8_1_, attachment0_.fileext as fileext8_1_, attachment0_.filename as filename8_1_, attachment0_.filepath as filepath8_1_, attachment0_.filesize as filesize8_1_, attachment0_.status as status8_1_, attachment0_.uploadip as uploadip8_1_, attachment0_.uploadtime as uploadtime8_1_, attachment0_.userid as userid8_1_, user1_.id as id17_0_, user1_.create_by as create14_17_0_, user1_.create_date as create2_17_0_, user1_.del_flag as del3_17_0_, user1_.remarks as remarks17_0_, user1_.update_by as update15_17_0_, user1_.update_date as update5_17_0_, user1_.email as email17_0_, user1_.password as password17_0_, user1_.phone as phone17_0_, user1_.portrait as portrait17_0_, user1_.realname as realname17_0_, user1_.salt as salt17_0_, user1_.status as status17_0_, user1_.username as username17_0_ from sys_attachment attachment0_ inner join sys_user user1_ on attachment0_.userid=user1_.id where attachment0_.id=?
delete from sys_attachment where id=?
Pre-processed SQL session queries : 
select from sysattachment inner join sysuser where attachment.id=? 
delete from sys_attachment where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| ajaxjson cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy64.deletebyid(serializable) 
called| void cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select attachment0_.id as id8_1_, attachment0_.create_by as create13_8_1_, attachment0_.create_date as create2_8_1_, attachment0_.del_flag as del3_8_1_, attachment0_.remarks as remarks8_1_, attachment0_.update_by as update14_8_1_, attachment0_.update_date as update5_8_1_, attachment0_.fileext as fileext8_1_, attachment0_.filename as filename8_1_, attachment0_.filepath as filepath8_1_, attachment0_.filesize as filesize8_1_, attachment0_.status as status8_1_, attachment0_.uploadip as uploadip8_1_, attachment0_.uploadtime as uploadtime8_1_, attachment0_.userid as userid8_1_, user1_.id as id17_0_, user1_.create_by as create14_17_0_, user1_.create_date as create2_17_0_, user1_.del_flag as del3_17_0_, user1_.remarks as remarks17_0_, user1_.update_by as update15_17_0_, user1_.update_date as update5_17_0_, user1_.email as email17_0_, user1_.password as password17_0_, user1_.phone as phone17_0_, user1_.portrait as portrait17_0_, user1_.realname as realname17_0_, user1_.salt as salt17_0_, user1_.status as status17_0_, user1_.username as username17_0_ from sys_attachment attachment0_ inner join sys_user user1_ on attachment0_.userid=user1_.id where attachment0_.id=?
called| httpservletrequest cn.jeeweb.core.utils.servletutils.getrequest() 
called| boolean cn.jeeweb.core.utils.fileutil.delfile(string) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_attachment where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.4779321935315333
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9779321935315333
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.delete(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.4779321935315333
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9779321935315333
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.4779321935315333
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9779321935315333
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.batchdelete(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysattachment where id=?]

Syntactic Similarity:0.4779321935315333
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.9779321935315333
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.attachmentcontroller.uploadsimditor(httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.sys.service.impl.attachmentserviceimpl.upload(httpservletrequest,multipartfile)
method:cn.jeeweb.modules.sys.utils.userutils.getuser()
method:cn.jeeweb.modules.sys.utils.userutils.get(string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, null, null, null, null, null, null, null, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from sysattachment  left outer join sysuser on sysattachment=sysuser  where id=?]

Syntactic Similarity:0.21065029771378654
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7106502977137865
Path matching:False
Request matching:False



======================================= 56 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_log this_
select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
Pre-processed SQL session queries : 
select count(*) from syslog 
select from syslog order by this.createdate limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| class com.sun.proxy..proxy90.annotationtype() 
called| class com.sun.proxy..proxy91.annotationtype() 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5665959488287574
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5665959488287574

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from syslog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null from syslog order by desc limit ?]

Syntactic Similarity:0.5694072285370979
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.569407228537098
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False



======================================= 57 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_log this_
select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
Pre-processed SQL session queries : 
select count(*) from syslog 
select from syslog order by this.createdate limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy91.annotationtype() 
called| object cn.jeeweb.core.query.resolver.querymethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryprefix(methodparameter) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.getprefixparametermap(string, nativewebrequest, boolean) 
called| map cn.jeeweb.core.common.form.basemethodargumentresolver.geturitemplatevariables(nativewebrequest) 
called| boolean cn.jeeweb.core.common.form.basemethodargumentresolver.illegalchar(char) 
called| queryabledefaults cn.jeeweb.core.query.resolver.querymethodargumentresolver.getqueryabledefaults(methodparameter) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.getdefaultfromannotation(queryabledefaults) 
called| queryable cn.jeeweb.core.query.resolver.querymethodargumentresolver.defaultqueryable(queryabledefaults) 
called| queryable cn.jeeweb.core.query.data.queryrequest.newqueryable() 
called| object cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| pageabledefaults cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageabledefaults(methodparameter) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getdefaultfromannotationorfallback(pageabledefaults) 
called| pageable cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.defaultpageable(pageabledefaults) 
called| int com.sun.proxy..proxy91.pagenumber() 
called| int com.sun.proxy..proxy91.value() 
called| string[] com.sun.proxy..proxy91.sort() 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.fromstring(string) 
called| sort.direction cn.jeeweb.core.query.data.sort.direction.valueof(string) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpageprefix(methodparameter) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsortprefix(methodparameter) 
called| string[] cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparametervalues(string) 
called| sort cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getsort(string, map, pageable, nativewebrequest) 
called| void cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.assertsortproperty(string) 
called| sort.direction cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$1(pageablemethodargumentresolver.orderedsort) 
called| string cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.orderedsort.access$2(pageablemethodargumentresolver.orderedsort) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagenumber(map, pageable) 
called| int cn.jeeweb.core.query.resolver.pageablemethodargumentresolver.getpagesize(map, pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.setpageable(pageable) 
called| void cn.jeeweb.core.query.data.queryrequest.addsort(sort) 
called| object cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 
called| string cn.jeeweb.core.query.resolver.propertyprefiltermethodargumentresolver.getfiltername(methodparameter) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.init(string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5665959488287574
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5665959488287574

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from syslog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null from syslog order by desc limit ?]

Syntactic Similarity:0.5694072285370979
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.569407228537098
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False



======================================= 58 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_log this_
select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
Pre-processed SQL session queries : 
select count(*) from syslog 
select from syslog order by this.createdate limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.constructsubclass(class, string) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| class cn.jeeweb.core.query.data.querypropertyprefilter.getsubclass(class, string) 
called| page com.sun.proxy..proxy68.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id12_0_, this_.content as content12_0_, this_.create_by as create13_12_0_, this_.create_date as create3_12_0_, this_.exception as exception12_0_, this_.logtype as logtype12_0_, this_.method as method12_0_, this_.params as params12_0_, this_.remote_addr as remote8_12_0_, this_.request_uri as request9_12_0_, this_.title as title12_0_, this_.type as type12_0_, this_.user_agent as user12_12_0_ from sys_log this_ order by this_.create_date desc limit ?
called| object cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.nullsafeget(resultset, string[], sessionimplementor, object) 
called| void cn.jeeweb.core.interceptor.encodinginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.core.interceptor.reloadconfiginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| void cn.jeeweb.modules.common.interceptor.loginterceptor.aftercompletion(httpservletrequest, httpservletresponse, object, exception) 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.tostring() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.put(object, object) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.user.sysuserfilter.prehandle(servletrequest, servletresponse) 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.online.onlinesessionfilter.isaccessallowed(servletrequest, servletresponse, object) 
called| string cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getuserid() 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| onlinesession.onlinestatus cn.jeeweb.modules.sys.security.shiro.session.mgt.onlinesession.getstatus() 
called| boolean cn.jeeweb.modules.sys.security.shiro.web.filter.sync.synconlinesessionfilter.prehandle(servletrequest, servletresponse) 
called| void cn.jeeweb.modules.sys.security.shiro.session.mgt.eis.onlinesessiondao.synctodb(onlinesession) 
called| void cn.jeeweb.core.filter.xss.xssfilter.dofilter(servletrequest, servletresponse, filterchain) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getquerystring() 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| boolean cn.jeeweb.modules.common.interceptor.loginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.reloadconfiginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.interceptor.encodinginterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.prehandle(httpservletrequest, httpservletresponse, object) 
called| class com.sun.proxy..proxy85.annotationtype() 
called| string com.sun.proxy..proxy85.value() 
called| string[] com.sun.proxy..proxy90.value() 
called| subject cn.jeeweb.core.security.shiro.interceptor.permissioninterceptoradapter.getsubject() 
called| authorizationinfo cn.jeeweb.modules.sys.security.shiro.realm.userrealm.dogetauthorizationinfo(principalcollection) 
called| set cn.jeeweb.modules.sys.utils.userutils.getrolestringlist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getrolelist() 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string) 
called| object cn.jeeweb.modules.sys.utils.userutils.getcache(string, object) 
called| session cn.jeeweb.modules.sys.utils.userutils.getsession() 
called| int cn.jeeweb.core.common.entity.abstractentity.hashcode() 
called| set cn.jeeweb.modules.sys.utils.userutils.getpermissionslist() 
called| list cn.jeeweb.modules.sys.utils.userutils.getmenulist() 
called| class com.sun.proxy..proxy90.annotationtype() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5665959488287574
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5665959488287574

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from syslog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null from syslog order by desc limit ?]

Syntactic Similarity:0.5694072285370979
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.569407228537098
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.sys.controller.useronlinecontroller.forcelogout(string[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, null, id, useragent, requesturi, title, type, method, exception, content, logtype, createdate, params, remoteaddr, null, null, null, null, null, username, realname, null, password, salt, email, phone, status from syslog  left outer join sysuser on syslog=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2891667360573
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2891667360573
Path matching:False
Request matching:False



======================================= 59 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from task_schedule_job this_
select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from taskschedulejob 
select from taskschedulejob order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5239346671828562
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5239346671828562

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.5655501104941876
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.5655501104941876
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2777604872095519
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2777604872095518
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.2777604872095519
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2777604872095518
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.2777604872095519
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2777604872095518
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2777604872095519
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2777604872095518
Path matching:False
Request matching:False



======================================= 60 given SQL query ===========================================
Given SQL session queries: 
select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
Pre-processed SQL session queries : 
select from taskschedulejob where schedulejo.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy74.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, True]
path_matching_number_k:[0, 0, 0, 0, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
path_ap:0.24712894550755019
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, True]
request_matching_number_k:[0, 0, 0, 0, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.2]
request_ap:0.24712894550755019

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.2967658887336072
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2967658887336073
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24470926348839184
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2447092634883918
Path matching:True
Request matching:True



======================================= 61 given SQL query ===========================================
Given SQL session queries: 
insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy74.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into task_schedule_job (bean_class, create_by, create_date, cron_expression, description, is_concurrent, job_group, job_name, job_status, method_name, spring_bean, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.010638297872340425

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into taskschedulejob (cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.09691136127852318
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.096911361278523
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12067779965805606
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.12067779965805606
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12067779965805606
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.12067779965805606
Path matching:False
Request matching:False



======================================= 62 given SQL query ===========================================
Given SQL session queries: 
select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?
Pre-processed SQL session queries : 
select from taskschedulejob where schedulejo.id=? 
update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.addjob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobstatus() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getisconcurrent() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getcronexpression() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.14285714285714285
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.14285714285714285

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.12940007924082975
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6294000792408297
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.10373674541678167
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6037367454167817
Path matching:False
Request matching:False



======================================= 63 given SQL query ===========================================
Given SQL session queries: 
select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?
Pre-processed SQL session queries : 
select from taskschedulejob where schedulejo.id=? 
update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| ajaxjson cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.filter.xss.xsshttpservletrequestwrapper.getparameter(string) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| void com.sun.proxy..proxy74.changestatus(string, string) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string, string) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update task_schedule_job set bean_class=?, create_by=?, create_date=?, cron_expression=?, description=?, is_concurrent=?, job_group=?, job_name=?, job_status=?, method_name=?, spring_bean=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.14285714285714285
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.14285714285714285

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update taskschedulejob set cronexpression=?, methodname=?, isconcurrent=?, description=?, id=?, null=?, beanclass=?, createdate=?, jobstatus=?, jobgroup=?, updatedate=?, null=?, springbean=?, jobname=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.12868624636459472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1286862463645948
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.12940007924082975
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6294000792408297
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.10373674541678167
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6037367454167817
Path matching:False
Request matching:False



======================================= 64 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from task_schedule_job this_ where this_.job_name=?
select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ where this_.job_name=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from taskschedulejob where this_.job_name=? 
select from taskschedulejob where this_.job_name=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy74.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from task_schedule_job this_ where this_.job_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id22_0_, this_.bean_class as bean2_22_0_, this_.create_by as create13_22_0_, this_.create_date as create3_22_0_, this_.cron_expression as cron4_22_0_, this_.description as descript5_22_0_, this_.is_concurrent as is6_22_0_, this_.job_group as job7_22_0_, this_.job_name as job8_22_0_, this_.job_status as job9_22_0_, this_.method_name as method10_22_0_, this_.spring_bean as spring11_22_0_, this_.update_by as update14_22_0_, this_.update_date as update12_22_0_ from task_schedule_job this_ where this_.job_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5239346671828562
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5239346671828562

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.33500193836668407
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.335001938366684
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17035580694328042
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1703558069432805
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.17035580694328042
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1703558069432805
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.changejobstatus(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.changestatus(string,string)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.17035580694328042
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1703558069432805
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17035580694328042
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1703558069432805
Path matching:False
Request matching:False



======================================= 65 given SQL query ===========================================
Given SQL session queries: 
select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
delete from task_schedule_job where id=?
Pre-processed SQL session queries : 
select from taskschedulejob where schedulejo.id=? 
delete from task_schedule_job where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy74.deletebyid(serializable) 
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.deletebyid(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select schedulejo0_.id as id22_0_, schedulejo0_.bean_class as bean2_22_0_, schedulejo0_.create_by as create13_22_0_, schedulejo0_.create_date as create3_22_0_, schedulejo0_.cron_expression as cron4_22_0_, schedulejo0_.description as descript5_22_0_, schedulejo0_.is_concurrent as is6_22_0_, schedulejo0_.job_group as job7_22_0_, schedulejo0_.job_name as job8_22_0_, schedulejo0_.job_status as job9_22_0_, schedulejo0_.method_name as method10_22_0_, schedulejo0_.spring_bean as spring11_22_0_, schedulejo0_.update_by as update14_22_0_, schedulejo0_.update_date as update12_22_0_ from task_schedule_job schedulejo0_ where schedulejo0_.id=?
called| void cn.jeeweb.modules.task.service.impl.schedulejobserviceimpl.delete(schedulejob) 
called| schedulejob cn.jeeweb.modules.task.utils.schedulejobutils.entitytodata(schedulejob) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setbeanclass(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setcronexpression(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setdescription(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setisconcurrent(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobgroup(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setjobstatus(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setmethodname(string) 
called| void cn.jeeweb.core.quartz.data.schedulejob.setspringbean(string) 
called| void cn.jeeweb.core.quartz.quartzmanager.deletejob(schedulejob) 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobname() 
called| string cn.jeeweb.core.quartz.data.schedulejob.getjobgroup() 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.delete(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from task_schedule_job where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.3128856667606534
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.3128856667606534

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from taskschedulejob where id=?]

Syntactic Similarity:0.5687183958684972
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0687183958684972
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from taskschedulejob where id=?]

Syntactic Similarity:0.5687183958684972
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0687183958684972
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from taskschedulejob]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname from taskschedulejob order by desc limit ?]

Syntactic Similarity:0.23441562927973267
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7344156292797327
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1933854839367675
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6933854839367675
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.modules.task.controller.schedulejobcontroller.saveschedulejob(schedulejob,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select cronexpression, methodname, isconcurrent, description, id, null, beanclass, createdate, jobstatus, jobgroup, updatedate, null, springbean, jobname, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from taskschedulejob  left outer join sysuser on taskschedulejob=sysuser  left outer join sysuser on taskschedulejob=sysuser  where id=?]

Syntactic Similarity:0.1933854839367675
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6933854839367675
Path matching:False
Request matching:False



======================================= 66 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_data_source this_
select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdatasource 
select from sysdatasource order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sys_data_source this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.6032473933637595
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6032473933637594
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2638516900233708
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2638516900233707
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2638516900233708
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2638516900233707
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2638516900233708
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2638516900233707
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.24156369975076372
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7415636997507637
Path matching:False
Request matching:False



======================================= 67 given SQL query ===========================================
Given SQL session queries: 
select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
Pre-processed SQL session queries : 
select from sysdatasource where datasource.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy65.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.26596954783023313
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.26596954783023313

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.3269640432930159
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3269640432930159
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.25224312773159113
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.252243127731591
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23364550700626982
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7336455070062698
Path matching:False
Request matching:False



======================================= 68 given SQL query ===========================================
Given SQL session queries: 
insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy65.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sys_data_source (create_by, create_date, del_flag, remarks, update_by, update_date, db_key, db_name, db_password, db_type, db_user, description, driver_class, url, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.31641269673013206
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3222407752763401

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdatasource (id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.147403570829651
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.147403570829651
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1417755658823919
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1417755658823919
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1417755658823919
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.1417755658823919
Path matching:True
Request matching:True



======================================= 69 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sys_data_source this_ where this_.db_key=?
select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ where this_.db_key=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from sysdatasource where this_.db_key=? 
select from sysdatasource where this_.db_key=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy65.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sys_data_source this_ where this_.db_key=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id9_0_, this_.create_by as create14_9_0_, this_.create_date as create2_9_0_, this_.del_flag as del3_9_0_, this_.remarks as remarks9_0_, this_.update_by as update15_9_0_, this_.update_date as update5_9_0_, this_.db_key as db6_9_0_, this_.db_name as db7_9_0_, this_.db_password as db8_9_0_, this_.db_type as db9_9_0_, this_.db_user as db10_9_0_, this_.description as descrip11_9_0_, this_.driver_class as driver12_9_0_, this_.url as url9_0_ from sys_data_source this_ where this_.db_key=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.36167086097264933
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3616708609726493
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17121994653793005
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.17121994653793
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17121994653793005
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.17121994653793
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.17121994653793005
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.17121994653793
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1578483581573771
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6578483581573771
Path matching:False
Request matching:False



======================================= 70 given SQL query ===========================================
Given SQL session queries: 
select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?
Pre-processed SQL session queries : 
select from sysdatasource where datasource.id=? 
update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy65.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy65.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sys_data_source set create_by=?, create_date=?, del_flag=?, remarks=?, update_by=?, update_date=?, db_key=?, db_name=?, db_password=?, db_type=?, db_user=?, description=?, driver_class=?, url=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.19727992738828654
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.22536696018120167

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19426501075342525
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1942650107534252
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19426501075342525
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1942650107534252
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update sysdatasource set id=?, dbkey=?, driverclass=?, dbname=?, dbpassword=?, dbtype=?, description=?, url=?, dbuser=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19426501075342525
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1942650107534252
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.18085633820963454
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6808563382096345
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18085633820963454
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6808563382096345
Path matching:False
Request matching:False



======================================= 71 given SQL query ===========================================
Given SQL session queries: 
select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
delete from sys_data_source where id=?
Pre-processed SQL session queries : 
select from sysdatasource where datasource.id=? 
delete from sys_data_source where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy65.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select datasource0_.id as id9_0_, datasource0_.create_by as create14_9_0_, datasource0_.create_date as create2_9_0_, datasource0_.del_flag as del3_9_0_, datasource0_.remarks as remarks9_0_, datasource0_.update_by as update15_9_0_, datasource0_.update_date as update5_9_0_, datasource0_.db_key as db6_9_0_, datasource0_.db_name as db7_9_0_, datasource0_.db_password as db8_9_0_, datasource0_.db_type as db9_9_0_, datasource0_.db_user as db10_9_0_, datasource0_.description as descrip11_9_0_, datasource0_.driver_class as driver12_9_0_, datasource0_.url as url9_0_ from sys_data_source datasource0_ where datasource0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
called| boolean cn.jeeweb.core.common.entity.dataentity.markstatus() 
sql|delete from sys_data_source where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.34265387135725356
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.34265387135725356

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdatasource where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from sysdatasource where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdatasource]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource order by desc limit ?]

Syntactic Similarity:0.2580181962835371
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7580181962835371
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2242686029386689
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7242686029386689
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, dbkey, driverclass, dbname, dbpassword, dbtype, description, url, dbuser from sysdatasource where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2242686029386689
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7242686029386689
Path matching:False
Request matching:False



======================================= 72 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from oa_notification this_
select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from oanotification 
select from oanotification order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.582951100874037
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.582951100874037

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.7229737020462135
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7229737020462135
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.31333226522752244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3133322652275226
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31333226522752244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3133322652275226
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.31333226522752244
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3133322652275226
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3366244423505773
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8366244423505773
Path matching:False
Request matching:False



======================================= 73 given SQL query ===========================================
Given SQL session queries: 
insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy60.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into oa_notification (content, create_by, create_date, del_flag, remarks, status, title, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.32364073433153756
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3362694273234131

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into oanotification (id, title, content, status, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.31810405241872197
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.318104052418722
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19061694593968853
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.19061694593968853
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysorganization (null, remarks, null) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19061694593968853
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.19061694593968853
Path matching:True
Request matching:True



======================================= 74 given SQL query ===========================================
Given SQL session queries: 
select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
delete from oa_notification where id=?
Pre-processed SQL session queries : 
select from oanotification where oanotifica.id=? 
delete from oa_notification where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.34265387135725356
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.34265387135725356

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.30899134145348295
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.808991341453483
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21799061792695432
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7179906179269543
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21799061792695432
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7179906179269543
Path matching:False
Request matching:False



======================================= 75 given SQL query ===========================================
Given SQL session queries: 
select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
Pre-processed SQL session queries : 
select from oanotification where oanotifica.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy60.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.2661564762550185
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.2661564762550185

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.3915578815733697
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3915578815733696
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.276289564021283
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.276289564021283
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3050596314771312
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8050596314771312
Path matching:False
Request matching:False



======================================= 76 given SQL query ===========================================
Given SQL session queries: 
select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?
Pre-processed SQL session queries : 
select from oanotification where oanotifica.id=? 
update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy60.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy60.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
sql|update oa_notification set content=?, create_by=?, create_date=?, del_flag=?, remarks=?, status=?, title=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.19721396250808015
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.23037804886983523

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27424353752683056
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2742435375268306
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27424353752683056
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2742435375268306
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27424353752683056
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2742435375268306
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.29331704842038686
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7933170484203869
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2015887550741505
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7015887550741505
Path matching:False
Request matching:False



======================================= 77 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from oa_notification this_ where this_.title like ?
select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.title like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from oanotification where this_.title like ? like 
select from oanotification where this_.title like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5239346671828562
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5239346671828562

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.3637310718860894
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3637310718860893
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1663285684258047
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663285684258047
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1663285684258047
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663285684258047
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.1663285684258047
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1663285684258047
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19783516279642427
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6978351627964243
Path matching:False
Request matching:False



======================================= 78 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from oa_notification this_ where this_.status=? and this_.title like ?
select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.status=? and this_.title like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from oanotification where this_.status=? and this_.title like ? like 
select from oanotification where this_.status=? and this_.title like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy60.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from oa_notification this_ where this_.status=? and this_.title like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id5_0_, this_.content as content5_0_, this_.create_by as create9_5_0_, this_.create_date as create3_5_0_, this_.del_flag as del4_5_0_, this_.remarks as remarks5_0_, this_.status as status5_0_, this_.title as title5_0_, this_.update_by as update10_5_0_, this_.update_date as update8_5_0_ from oa_notification this_ where this_.status=? and this_.title like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5255365733412138
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5255365733412138

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.29739635399135034
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2973963539913504
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14868492948611645
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1486849294861163
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14868492948611645
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1486849294861163
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14868492948611645
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1486849294861163
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update oanotification set id=?, title=?, content=?, status=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.17484891691744656
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6748489169174465
Path matching:False
Request matching:False



======================================= 79 given SQL query ===========================================
Given SQL session queries: 
select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
delete from oa_notification where id=?
Pre-processed SQL session queries : 
select from oanotification where oanotifica.id=? 
delete from oa_notification where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy60.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select oanotifica0_.id as id5_0_, oanotifica0_.content as content5_0_, oanotifica0_.create_by as create9_5_0_, oanotifica0_.create_date as create3_5_0_, oanotifica0_.del_flag as del4_5_0_, oanotifica0_.remarks as remarks5_0_, oanotifica0_.status as status5_0_, oanotifica0_.title as title5_0_, oanotifica0_.update_by as update10_5_0_, oanotifica0_.update_date as update8_5_0_ from oa_notification oanotifica0_ where oanotifica0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from oa_notification where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.42499554165075554
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.42499554165075554

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from oanotification where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from oanotification]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks from oanotification order by desc limit ?]

Syntactic Similarity:0.30899134145348295
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.808991341453483
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21799061792695432
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7179906179269543
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, title, content, status, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from oanotification  left outer join sysuser on oanotification=sysuser  left outer join sysuser on oanotification=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21799061792695432
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7179906179269543
Path matching:False
Request matching:False



======================================= 80 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from email_template this_
select this_.id as id4_0_, this_.business_type as business2_4_0_, this_.code as code4_0_, this_.create_by as create11_4_0_, this_.create_date as create4_4_0_, this_.del_flag as del5_4_0_, this_.name as name4_0_, this_.remarks as remarks4_0_, this_.template_content as template8_4_0_, this_.template_subject as template9_4_0_, this_.update_by as update12_4_0_, this_.update_date as update10_4_0_ from email_template this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from emailtemplate 
select from emailtemplate order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy58.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id4_0_, this_.business_type as business2_4_0_, this_.code as code4_0_, this_.create_by as create11_4_0_, this_.create_date as create4_4_0_, this_.del_flag as del5_4_0_, this_.name as name4_0_, this_.remarks as remarks4_0_, this_.template_content as template8_4_0_, this_.template_subject as template9_4_0_, this_.update_by as update12_4_0_, this_.update_date as update10_4_0_ from email_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.6825886219067917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6825886219067918
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3111536597008376
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3111536597008375
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3111536597008376
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3111536597008375
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.3111536597008376
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3111536597008375
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3270362877599106
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8270362877599107
Path matching:False
Request matching:False



======================================= 81 given SQL query ===========================================
Given SQL session queries: 
insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy58.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:True
Request matching:True



======================================= 82 given SQL query ===========================================
Given SQL session queries: 
insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy58.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|insert into email_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_subject, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into emailtemplate (id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16755836495088963
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1675583649508896
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:True
Request matching:True



======================================= 83 given SQL query ===========================================
Given SQL session queries: 
select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
Pre-processed SQL session queries : 
select from emailtemplate where emailtempl.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy58.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.2661564762550185
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.2661564762550185

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.3697862954615834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3697862954615834
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27436848842435435
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2743684884243542
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2963702160450741
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7963702160450741
Path matching:False
Request matching:False



======================================= 84 given SQL query ===========================================
Given SQL session queries: 
select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?
Pre-processed SQL session queries : 
select from emailtemplate where emailtempl.id=? 
update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy58.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy58.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update email_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_subject=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.18929259445095525
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.22070786927257977

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18419553161471472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841955316147148
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18419553161471472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841955316147148
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailtemplate set id=?, name=?, code=?, businesstype=?, templatesubject=?, templatecontent=?, remarks=?, null=?, createdate=?, delflag=?, null=?, updatedate=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18419553161471472
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1841955316147148
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.1950196238790997
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6950196238790998
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13881432339275127
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6388143233927512
Path matching:False
Request matching:False



======================================= 85 given SQL query ===========================================
Given SQL session queries: 
select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
delete from email_template where id=?
Pre-processed SQL session queries : 
select from emailtemplate where emailtempl.id=? 
delete from email_template where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy58.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailtempl0_.id as id4_0_, emailtempl0_.business_type as business2_4_0_, emailtempl0_.code as code4_0_, emailtempl0_.create_by as create11_4_0_, emailtempl0_.create_date as create4_4_0_, emailtempl0_.del_flag as del5_4_0_, emailtempl0_.name as name4_0_, emailtempl0_.remarks as remarks4_0_, emailtempl0_.template_content as template8_4_0_, emailtempl0_.template_subject as template9_4_0_, emailtempl0_.update_by as update12_4_0_, emailtempl0_.update_date as update10_4_0_ from email_template emailtempl0_ where emailtempl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.34265387135725356
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.34265387135725356

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailtemplate where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailtemplate where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailtemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate from emailtemplate order by desc limit ?]

Syntactic Similarity:0.2918106590695164
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7918106590695164
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21647490213094764
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7164749021309477
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templatesubject, templatecontent, remarks, null, createdate, delflag, null, updatedate, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from emailtemplate  left outer join sysuser on emailtemplate=sysuser  left outer join sysuser on emailtemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21647490213094764
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7164749021309477
Path matching:False
Request matching:False



======================================= 86 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from email_send_log this_
select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from emailsendlog 
select from emailsendlog order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.6477772547047043
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6477772547047043
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2995487140089561
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.299548714008956
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2995487140089561
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.299548714008956
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.2995487140089561
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.299548714008956
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2741931638661891
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7741931638661891
Path matching:False
Request matching:False



======================================= 87 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from email_send_log this_ where this_.subject=?
select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ where this_.subject=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from emailsendlog where this_.subject=? 
select from emailsendlog where this_.subject=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy57.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from email_send_log this_ where this_.subject=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id3_0_, this_.business_type as business2_3_0_, this_.content as content3_0_, this_.del_flag as del4_3_0_, this_.email as email3_0_, this_.msg as msg3_0_, this_.remarks as remarks3_0_, this_.response_date as response8_3_0_, this_.senddata as senddata3_0_, this_.status as status3_0_, this_.subject as subject3_0_ from email_send_log this_ where this_.subject=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.523117462881781
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.523117462881781

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.5410535958367412
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.541053595836741
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.37403738755837834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3740373875583782
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.37403738755837834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3740373875583782
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.37403738755837834
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3740373875583782
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update emailsendlog set id=?, email=?, subject=?, content=?, senddata=?, responsedate=?, businesstype=?, delflag=?, status=?, msg=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3572877233783912
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8572877233783912
Path matching:False
Request matching:False



======================================= 88 given SQL query ===========================================
Given SQL session queries: 
select emailsendl0_.id as id3_0_, emailsendl0_.business_type as business2_3_0_, emailsendl0_.content as content3_0_, emailsendl0_.del_flag as del4_3_0_, emailsendl0_.email as email3_0_, emailsendl0_.msg as msg3_0_, emailsendl0_.remarks as remarks3_0_, emailsendl0_.response_date as response8_3_0_, emailsendl0_.senddata as senddata3_0_, emailsendl0_.status as status3_0_, emailsendl0_.subject as subject3_0_ from email_send_log emailsendl0_ where emailsendl0_.id=?
delete from email_send_log where id=?
Pre-processed SQL session queries : 
select from emailsendlog where emailsendl.id=? 
delete from email_send_log where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy57.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select emailsendl0_.id as id3_0_, emailsendl0_.business_type as business2_3_0_, emailsendl0_.content as content3_0_, emailsendl0_.del_flag as del4_3_0_, emailsendl0_.email as email3_0_, emailsendl0_.msg as msg3_0_, emailsendl0_.remarks as remarks3_0_, emailsendl0_.response_date as response8_3_0_, emailsendl0_.senddata as senddata3_0_, emailsendl0_.status as status3_0_, emailsendl0_.subject as subject3_0_ from email_send_log emailsendl0_ where emailsendl0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from email_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.42499554165075554
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.42499554165075554

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailsendlog where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from emailsendlog where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from emailsendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog order by desc limit ?]

Syntactic Similarity:0.2769901747605958
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7769901747605958
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.254612883580338
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7546128835803381
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, email, subject, content, senddata, responsedate, businesstype, delflag, status, msg, remarks from emailsendlog where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.254612883580338
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7546128835803381
Path matching:False
Request matching:False



======================================= 89 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sms_template this_
select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from smstemplate 
select from smstemplate order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_template this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5902243666914205
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5902243666914205

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.6907016218434702
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6907016218434703
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.312195560999032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3121955609990321
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.312195560999032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3121955609990321
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.312195560999032
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3121955609990321
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.3297998247366894
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8297998247366893
Path matching:False
Request matching:False



======================================= 90 given SQL query ===========================================
Given SQL session queries: 
insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Pre-processed SQL session queries : 
insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| void com.sun.proxy..proxy62.save(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.save(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.save(object) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onsave(object, serializable, object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|insert into sms_template (business_type, code, create_by, create_date, del_flag, name, remarks, template_content, template_id, update_by, update_date, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, True]
path_matching_number_k:[0, 1, 1, 1, 2]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
path_ap:0.29960646248460365
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, True]
request_matching_number_k:[0, 1, 1, 1, 2]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.4]
request_ap:0.3140255217286921

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into smstemplate (id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.1715201876774563
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1715201876774564
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.save(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.save(t)
[insert into sysdictgroup (code, id, name) values (?, ?, ?)]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23752129879951
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.23752129879951
Path matching:True
Request matching:True



======================================= 91 given SQL query ===========================================
Given SQL session queries: 
select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
Pre-processed SQL session queries : 
select from smstemplate where smstemplat.id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| string cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(serializable, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy62.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preedit(abstractentity, model, httpservletrequest, httpservletresponse) 
called| serializable cn.jeeweb.core.common.controller.basebeancontroller.newmodel() 
called| string cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(abstractentity, model, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.stringutils.isempty(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.display(string) 
called| string cn.jeeweb.core.common.controller.basecontroller.getviewprefix() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, True, False]
path_matching_number_k:[0, 0, 1, 2, 2]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
path_ap:0.2661564762550185
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, True, False]
request_matching_number_k:[0, 0, 1, 2, 2]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.5, 0.4]
request_ap:0.2661564762550185

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.37416143164279203
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3741614316427921
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.27528722794370014
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2752872279437002
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.2988747117987666
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7988747117987667
Path matching:False
Request matching:False



======================================= 92 given SQL query ===========================================
Given SQL session queries: 
select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?
Pre-processed SQL session queries : 
select from smstemplate where smstemplat.id=? 
update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.dosave(abstractentity, httpservletrequest, httpservletresponse, bindingresult) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| boolean cn.jeeweb.core.common.controller.basebeancontroller.haserror(serializable, bindingresult) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.presave(abstractentity, httpservletrequest, httpservletresponse) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| serializable com.sun.proxy..proxy62.get(serializable) 
called| serializable cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.utils.mybeanutils.copybeannotnull2bean(object, object) 
called| void com.sun.proxy..proxy62.update(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.update(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.update(object) 
called| boolean cn.jeeweb.modules.common.interceptor.hiberaspect.onflushdirty(object, serializable, object[], object[], string[], type[]) 
called| user cn.jeeweb.modules.sys.utils.userutils.getuser() 
called| userrealm.principal cn.jeeweb.modules.sys.utils.userutils.getprincipal() 
called| object cn.jeeweb.modules.sys.security.shiro.cache.spring.springcachemanagerwrapper.springcachewrapper.get(object) 
called| string cn.jeeweb.modules.sys.security.shiro.realm.userrealm.principal.getid() 
called| user cn.jeeweb.modules.sys.utils.userutils.get(string) 
called| object cn.jeeweb.core.utils.cacheutils.get(string, string) 
called| cache cn.jeeweb.core.utils.cacheutils.getcache(string) 
sql|update sms_template set business_type=?, code=?, create_by=?, create_date=?, del_flag=?, name=?, remarks=?, template_content=?, template_id=?, update_by=?, update_date=? where id=?
called| void cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(abstractentity, httpservletrequest, httpservletresponse) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.19007930773766854
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.22001892071407214

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18575306168709016
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1857530616870902
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.dosave(entity,httpservletrequest,httpservletresponse,bindingresult)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18575306168709016
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1857530616870902
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.create(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.18575306168709016
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1857530616870902
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.19732869065150863
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6973286906515086
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.13927924770350367
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6392792477035036
Path matching:False
Request matching:False



======================================= 93 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sms_template this_ where this_.name like ?
select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ where this_.name like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from smstemplate where this_.name like ? like 
select from smstemplate where this_.name like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy62.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
called| boolean cn.jeeweb.core.repository.hibernate.type.objectserializeusertype.equals(object, object) 
sql|select count(*) as y0_ from sms_template this_ where this_.name like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id7_0_, this_.business_type as business2_7_0_, this_.code as code7_0_, this_.create_by as create11_7_0_, this_.create_date as create4_7_0_, this_.del_flag as del5_7_0_, this_.name as name7_0_, this_.remarks as remarks7_0_, this_.template_content as template8_7_0_, this_.template_id as template9_7_0_, this_.update_by as update12_7_0_, this_.update_date as update10_7_0_ from sms_template this_ where this_.name like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5408745088940136
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5408745088940136

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.31872299712678354
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3187229971267835
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15028666649461095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150286666494611
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.15028666649461095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150286666494611
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.15028666649461095
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.150286666494611
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smstemplate set id=?, name=?, code=?, businesstype=?, templateid=?, templatecontent=?, null=?, createdate=?, null=?, updatedate=?, delflag=?, remarks=? where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.16808027001949477
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6680802700194948
Path matching:False
Request matching:False



======================================= 94 given SQL query ===========================================
Given SQL session queries: 
select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
delete from sms_template where id=?
Pre-processed SQL session queries : 
select from smstemplate where smstemplat.id=? 
delete from sms_template where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.delete(serializable) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy62.deletebyid(serializable) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smstemplat0_.id as id7_0_, smstemplat0_.business_type as business2_7_0_, smstemplat0_.code as code7_0_, smstemplat0_.create_by as create11_7_0_, smstemplat0_.create_date as create4_7_0_, smstemplat0_.del_flag as del5_7_0_, smstemplat0_.name as name7_0_, smstemplat0_.remarks as remarks7_0_, smstemplat0_.template_content as template8_7_0_, smstemplat0_.template_id as template9_7_0_, smstemplat0_.update_by as update12_7_0_, smstemplat0_.update_date as update10_7_0_ from sms_template smstemplat0_ where smstemplat0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_template where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.34265387135725356
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.34265387135725356

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smstemplate where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smstemplate where id=?]

Syntactic Similarity:0.5760845961828859
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.076084596182886
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smstemplate]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks from smstemplate order by desc limit ?]

Syntactic Similarity:0.2952632244788529
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7952632244788529
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.21719978146631286
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7171997814663129
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select id, name, code, businesstype, templateid, templatecontent, null, createdate, null, updatedate, delflag, remarks, null, null, null, null, username, realname, null, password, salt, email, phone, status, null, null, null, null, username, realname, null, password, salt, email, phone, status from smstemplate  left outer join sysuser on smstemplate=sysuser  left outer join sysuser on smstemplate=sysuser  where id=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.21719978146631286
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7171997814663129
Path matching:False
Request matching:False



======================================= 95 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sms_send_log this_
select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from smssendlog 
select from smssendlog order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.6205831621916555
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.6205831621916555
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.26290299714766124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2629029971476613
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.26290299714766124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2629029971476613
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.26290299714766124
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2629029971476613
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.23914999631291783
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7391499963129178
Path matching:False
Request matching:False



======================================= 96 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from sms_send_log this_ where this_.phone like ?
select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ where this_.phone like ? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from smssendlog where this_.phone like ? like 
select from smssendlog where this_.phone like ?  like order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy61.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| object cn.jeeweb.core.query.parse.criteriaparse.parselike(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from sms_send_log this_ where this_.phone like ?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id6_0_, this_.business_type as business2_6_0_, this_.code as code6_0_, this_.del_flag as del4_6_0_, this_.msg as msg6_0_, this_.phone as phone6_0_, this_.remarks as remarks6_0_, this_.response_date as response8_6_0_, this_.senddata as senddata6_0_, this_.smsid as smsid6_0_, this_.status as status6_0_, this_.template_content as template12_6_0_, this_.template_id as template13_6_0_ from sms_send_log this_ where this_.phone like ? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5912296576967115
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5912296576967115

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.28085234645687407
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2808523464568742
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14320368708483183
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1432036870848319
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.14320368708483183
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1432036870848319
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.14320368708483183
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.1432036870848319
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.update(model,entity,bindingresult,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.haserror(entity,bindingresult)
method:cn.jeeweb.core.common.controller.basecrudcontroller.presave(entity,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.update(t)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.update(t)
[update smssendlog set null=?, remarks=?, businesstype=?, phone=?, templateid=?, templatecontent=?, senddata=?, status=?, smsid=?, code=?, msg=?, delflag=?, delflag=? where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.aftersave(entity,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.13303439534803943
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6330343953480394
Path matching:False
Request matching:False



======================================= 97 given SQL query ===========================================
Given SQL session queries: 
select smssendlog0_.id as id6_0_, smssendlog0_.business_type as business2_6_0_, smssendlog0_.code as code6_0_, smssendlog0_.del_flag as del4_6_0_, smssendlog0_.msg as msg6_0_, smssendlog0_.phone as phone6_0_, smssendlog0_.remarks as remarks6_0_, smssendlog0_.response_date as response8_6_0_, smssendlog0_.senddata as senddata6_0_, smssendlog0_.smsid as smsid6_0_, smssendlog0_.status as status6_0_, smssendlog0_.template_content as template12_6_0_, smssendlog0_.template_id as template13_6_0_ from sms_send_log smssendlog0_ where smssendlog0_.id=?
delete from sms_send_log where id=?
Pre-processed SQL session queries : 
select from smssendlog where smssendlog.id=? 
delete from sms_send_log where id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| ajaxjson cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(serializable[]) 
called| void cn.jeeweb.core.model.ajaxjson.success(string) 
called| jeewebpropertiesutil cn.jeeweb.core.utils.jeewebpropertiesutil.getproperties() 
called| void cn.jeeweb.core.utils.propertiesutil.load(string[]) 
called| string cn.jeeweb.core.utils.propertiesutil.getabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.fileutil.isabsolutepath(string) 
called| boolean cn.jeeweb.core.utils.objectswitchhelper.getboolean(string) 
called| string cn.jeeweb.core.utils.objectswitchhelper.getstring(string) 
called| object cn.jeeweb.core.utils.propertiesutil.get(string) 
called| void com.sun.proxy..proxy61.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list) 
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable, class) 
called| object cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable, class) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select smssendlog0_.id as id6_0_, smssendlog0_.business_type as business2_6_0_, smssendlog0_.code as code6_0_, smssendlog0_.del_flag as del4_6_0_, smssendlog0_.msg as msg6_0_, smssendlog0_.phone as phone6_0_, smssendlog0_.remarks as remarks6_0_, smssendlog0_.response_date as response8_6_0_, smssendlog0_.senddata as senddata6_0_, smssendlog0_.smsid as smsid6_0_, smssendlog0_.status as status6_0_, smssendlog0_.template_content as template12_6_0_, smssendlog0_.template_id as template13_6_0_ from sms_send_log smssendlog0_ where smssendlog0_.id=?
called| void cn.jeeweb.core.common.dao.impl.commondaoimpl.delete(object) 
sql|delete from sms_send_log where id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.42918601784123167
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.42918601784123167

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.batchdelete(id[])
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.batchdeletebyid(list<?>)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smssendlog where null=?]

Syntactic Similarity:0.5228765426809256
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0228765426809256
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.delete(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.deletebyid(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.deletebyid(serializable,class)
[delete from smssendlog where null=?]

Syntactic Similarity:0.5228765426809256
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.0228765426809256
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from smssendlog]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog order by desc limit ?]

Syntactic Similarity:0.25208313608809785
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.7520831360880978
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._view(model,id,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showview(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecontroller.display(string)
method:cn.jeeweb.core.common.controller.basecontroller.getviewprefix()

Syntactic Similarity:0.19562501863646053
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6956250186364605
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller._showupdate(id,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.get(id)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.get(serializable)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.get(serializable,class)
[select null, remarks, businesstype, phone, templateid, templatecontent, senddata, status, smsid, code, msg, delflag, delflag from smssendlog where null=?]
method:cn.jeeweb.core.common.controller.basecrudcontroller.preedit(entity,model,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basebeancontroller.newmodel()
method:cn.jeeweb.core.common.controller.basecrudcontroller.showupdate(entity,model,httpservletrequest,httpservletresponse)

Syntactic Similarity:0.19562501863646053
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.6956250186364605
Path matching:False
Request matching:False



======================================= 98 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from codegen_table this_
select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from codegentable 
select from codegentable order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.33497650039056687
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.33497650039056687
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.33010012756629487
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.33010012756629487
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.3122335689189988
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.3122335689189988
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.30592182950244906
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30592182950244906
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.30467945998861495
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.30467945998861495
Path matching:True
Request matching:True



======================================= 99 given SQL query ===========================================
Given SQL session queries: 
select count(*) as y0_ from codegen_table this_ where this_.table_name=?
select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ where this_.table_name=? order by this_.id asc limit ?
Pre-processed SQL session queries : 
select count(*) from codegentable where this_.table_name=? 
select from codegentable where this_.table_name=?  order by this.id limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable, propertyprefilterable, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable, detachedcriteria, httpservletrequest, httpservletresponse) 
called| void cn.jeeweb.core.query.data.querypropertyprefilter.addqueryproperty(string[]) 
called| serializefilter cn.jeeweb.core.query.data.querypropertyprefilter.constructfilter(class) 
called| void cn.jeeweb.core.utils.complexpropertyprefilter.addincludefilter(class, string[]) 
called| page com.sun.proxy..proxy56.list(queryable, detachedcriteria) 
called| page cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable, detachedcriteria) 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convertqueryvaluetoentityvalue(queryable, class) 
called| boolean cn.jeeweb.core.query.data.queryrequest.isconverted() 
called| condition cn.jeeweb.core.query.data.queryrequest.getcondition() 
called| conversionservice cn.jeeweb.core.query.utils.queryableconvertutils.getconversionservice() 
called| iterator cn.jeeweb.core.query.data.condition.iterator() 
called| void cn.jeeweb.core.query.utils.queryableconvertutils.convert(beanwrapperimpl, condition.filter) 
called| string cn.jeeweb.core.query.data.condition.filter.getproperty() 
called| condition.operator cn.jeeweb.core.query.data.condition.filter.getoperator() 
called| boolean cn.jeeweb.core.query.data.condition.filter.isunaryfilter() 
called| string cn.jeeweb.core.query.data.condition.operator.getsymbol() 
called| object cn.jeeweb.core.query.data.condition.filter.getvalue() 
called| object cn.jeeweb.core.query.utils.queryableconvertutils.getconvertedvalue(beanwrapperimpl, string, object) 
called| void cn.jeeweb.core.query.data.condition.filter.setvalue(object) 
called| void cn.jeeweb.core.query.parse.criteriaparse.parsecondition(detachedcriteria, queryable) 
called| boolean cn.jeeweb.core.utils.objectutils.isnullorempty(object) 
called| criterion cn.jeeweb.core.query.parse.criteriaparse.getcriterion(condition.filter) 
called| long cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria) 
called| session cn.jeeweb.core.common.dao.impl.basedaoimpl.getsession() 
sql|select count(*) as y0_ from codegen_table this_ where this_.table_name=?
called| void cn.jeeweb.core.query.parse.criteriaparse.parsesort(detachedcriteria, queryable) 
called| pageable cn.jeeweb.core.query.data.queryrequest.getpageable() 
called| sort cn.jeeweb.core.query.data.pagerequest.getsort() 
called| iterator cn.jeeweb.core.query.data.sort.iterator() 
called| sort.direction cn.jeeweb.core.query.data.sort.order.getdirection() 
called| string cn.jeeweb.core.query.data.sort.order.getproperty() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagenumber() 
called| int cn.jeeweb.core.query.data.pagerequest.getpagesize() 
called| list cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int, int, detachedcriteria) 
called| list cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int, int, detachedcriteria) 
sql|select this_.id as id2_0_, this_.create_by as create12_2_0_, this_.create_date as create2_2_0_, this_.del_flag as del3_2_0_, this_.remarks as remarks2_0_, this_.update_by as update13_2_0_, this_.update_date as update5_2_0_, this_.class_name as class6_2_0_, this_.sync_database as sync7_2_0_, this_.table_name as table8_2_0_, this_.table_pk_type as table9_2_0_, this_.table_type as table10_2_0_, this_.title as title2_0_ from codegen_table this_ where this_.table_name=? order by this_.id asc limit ?
called| int cn.jeeweb.core.query.data.pageimpl.getnumber() 
called| int cn.jeeweb.core.query.data.pageimpl.getsize() 
called| long cn.jeeweb.core.query.data.pageimpl.gettotalelements() 
called| list cn.jeeweb.core.query.data.pageimpl.getcontent() 
called| long cn.jeeweb.core.model.pagejson.getrows() 
called| boolean cn.jeeweb.core.utils.complexpropertyprefilter.apply(jsonserializer, object, string) 
called| set cn.jeeweb.core.utils.complexpropertyprefilter.getvalue(map, class) 
called| long cn.jeeweb.core.model.pagejson.getpage() 
called| list cn.jeeweb.core.model.pagejson.getresults() 
called| long cn.jeeweb.core.model.pagejson.gettotal() 
called| long cn.jeeweb.core.model.pagejson.gettotalpages() 
called| void cn.jeeweb.core.utils.stringutils.printjson(httpservletresponse, string) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, True]
path_matching_number_k:[1, 2, 3, 4, 5]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
path_ap:0.9877327976371453
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:0.9877327976371453

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysdictgroup]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select code, id, name from sysdictgroup order by desc limit ?]

Syntactic Similarity:0.22499813406262345
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22499813406262345
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysorganization]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, remarks, null from sysorganization order by desc limit ?]

Syntactic Similarity:0.22172275568481004
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.22172275568481004
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, name, code, issys, usable from sysrole order by desc limit ?]

Syntactic Similarity:0.20972208592715536
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.20972208592715536
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuser]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select null, null, null, null, username, realname, null, password, salt, email, phone, status from sysuser order by desc limit ?]

Syntactic Similarity:0.20548259572483557
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.20548259572483557
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:cn.jeeweb.core.common.controller.basecrudcontroller.ajaxlist(queryable,propertyprefilterable,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.controller.basecrudcontroller.preajaxlist(queryable,detachedcriteria,httpservletrequest,httpservletresponse)
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(queryable,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.count(detachedcriteria)
[select count(*)  from sysuserrole]
method:cn.jeeweb.core.common.service.impl.commonserviceimpl.list(int,int,detachedcriteria)
method:cn.jeeweb.core.common.dao.impl.commondaoimpl.list(int,int,detachedcriteria)
[select id, userid, null, roleid, null from sysuserrole order by desc limit ?]

Syntactic Similarity:0.2046481168222766
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.2046481168222766
Path matching:True
Request matching:True

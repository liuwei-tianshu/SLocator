======================================= 1 given SQL query ===========================================
Given individual SQL query: select this_.id as id1_13_11_, this_1_.created_at as created_2_13_11_, this_1_.created_by as created_3_13_11_, this_1_.updated_at as updated_4_13_11_, this_1_.updated_by as updated_5_13_11_, this_1_.author_id as author_17_13_11_, this_1_.body as body6_13_11_, this_1_.code as code7_13_11_, this_1_.cover_id as cover_i18_13_11_, this_1_.date as date8_13_11_, this_1_.drafted_id as drafted19_13_11_, this_1_.drafted_code as drafted_9_13_11_, this_1_.language as languag10_13_11_, this_1_.seo_description as seo_des11_13_11_, this_1_.seo_keywords as seo_key12_13_11_, this_1_.seo_title as seo_tit13_13_11_, this_1_.status as status14_13_11_, this_1_.title as title15_13_11_, this_1_.views as views16_13_11_, this_.lft as lft1_10_11_, this_.parent_id as parent_i4_10_11_, this_.rgt as rgt2_10_11_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_13_, category4_.id as category1_14_13_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_14_, customfiel7_.id as id1_1_14_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then 1 when post9_2_.id is not null then 2 when post9_.id is not null then 0 end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_15_, tag12_.id as tag_id1_17_15_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_, children13_.parent_id as parent_i4_10_16_, children13_.id as id3_10_16_, children13_.id as id1_13_9_, children13_1_.created_at as created_2_13_9_, children13_1_.created_by as created_3_13_9_, children13_1_.updated_at as updated_4_13_9_, children13_1_.updated_by as updated_5_13_9_, children13_1_.author_id as author_17_13_9_, children13_1_.body as body6_13_9_, children13_1_.code as code7_13_9_, children13_1_.cover_id as cover_i18_13_9_, children13_1_.date as date8_13_9_, children13_1_.drafted_id as drafted19_13_9_, children13_1_.drafted_code as drafted_9_13_9_, children13_1_.language as languag10_13_9_, children13_1_.seo_description as seo_des11_13_9_, children13_1_.seo_keywords as seo_key12_13_9_, children13_1_.seo_title as seo_tit13_13_9_, children13_1_.status as status14_13_9_, children13_1_.title as title15_13_9_, children13_1_.views as views16_13_9_, children13_.lft as lft1_10_9_, children13_.parent_id as parent_i4_10_9_, children13_.rgt as rgt2_10_9_, page14_.id as id1_13_10_, page14_1_.created_at as created_2_13_10_, page14_1_.created_by as created_3_13_10_, page14_1_.updated_at as updated_4_13_10_, page14_1_.updated_by as updated_5_13_10_, page14_1_.author_id as author_17_13_10_, page14_1_.body as body6_13_10_, page14_1_.code as code7_13_10_, page14_1_.cover_id as cover_i18_13_10_, page14_1_.date as date8_13_10_, page14_1_.drafted_id as drafted19_13_10_, page14_1_.drafted_code as drafted_9_13_10_, page14_1_.language as languag10_13_10_, page14_1_.seo_description as seo_des11_13_10_, page14_1_.seo_keywords as seo_key12_13_10_, page14_1_.seo_title as seo_tit13_13_10_, page14_1_.status as status14_13_10_, page14_1_.title as title15_13_10_, page14_1_.views as views16_13_10_, page14_.lft as lft1_10_10_, page14_.parent_id as parent_i4_10_10_, page14_.rgt as rgt2_10_10_ from page this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id left outer join page children13_ on this_.id=children13_.parent_id left outer join post children13_1_ on children13_.id=children13_1_.id left outer join page page14_ on this_.parent_id=page14_.id left outer join post page14_1_ on page14_.id=page14_1_.id where (this_.id in (?, ?))
Execution time of Given individual SQL query (slow) : 421700ns
Pre-processed SQL query : select from page inner join post left outer join user user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (this_.id in (?, ?)) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebycode(string, string) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebycode(string, string) 
called| article com.sun.proxy..proxy184.findonebycodeandlanguage(string, string) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_1_.code=? and article0_1_.language=?
called| page org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20.getcomments(commentsearchrequest, pageable) 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| int org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.getindex(signature) 
called| int org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20..fastclassbyspringcglib..f1421a15.getindex(signature) 
called| object org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.invoke(int, object, object[]) 
called| page org.wallride.service.commentservice.getcomments(commentsearchrequest, pageable) 
called| page com.sun.proxy..proxy189.search(commentsearchrequest, pageable) 
called| page org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest, pageable) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| locale org.wallride.web.support.bloglanguagelocaleresolver.resolvelocale(httpservletrequest) 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
after rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| iexpressionobjectfactory org.wallride.autoconfigure.wallridethymeleafdialect.getexpressionobjectfactory() 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.metadescription(post) 
called| string org.wallride.web.support.posts.metakeywords(post) 
called| string org.wallride.web.support.posts.title(post) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| pages org.wallride.autoconfigure.wallrideexpressionobjectfactory.createpages(iexpressioncontext) 
called| list org.wallride.web.support.pages.getnodes() 
called| list org.wallride.support.pageutils.getnodes() 
called| list org.wallride.support.pageutils.getnodes(boolean) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest, pageable) 
called| page com.sun.proxy..proxy192.search(pagesearchrequest, pageable) 
called| page org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
sql|select this_.id as id1_13_11_, this_1_.created_at as created_2_13_11_, this_1_.created_by as created_3_13_11_, this_1_.updated_at as updated_4_13_11_, this_1_.updated_by as updated_5_13_11_, this_1_.author_id as author_17_13_11_, this_1_.body as body6_13_11_, this_1_.code as code7_13_11_, this_1_.cover_id as cover_i18_13_11_, this_1_.date as date8_13_11_, this_1_.drafted_id as drafted19_13_11_, this_1_.drafted_code as drafted_9_13_11_, this_1_.language as languag10_13_11_, this_1_.seo_description as seo_des11_13_11_, this_1_.seo_keywords as seo_key12_13_11_, this_1_.seo_title as seo_tit13_13_11_, this_1_.status as status14_13_11_, this_1_.title as title15_13_11_, this_1_.views as views16_13_11_, this_.lft as lft1_10_11_, this_.parent_id as parent_i4_10_11_, this_.rgt as rgt2_10_11_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_13_, category4_.id as category1_14_13_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_14_, customfiel7_.id as id1_1_14_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_15_, tag12_.id as tag_id1_17_15_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_, children13_.parent_id as parent_i4_10_16_, children13_.id as id3_10_16_, children13_.id as id1_13_9_, children13_1_.created_at as created_2_13_9_, children13_1_.created_by as created_3_13_9_, children13_1_.updated_at as updated_4_13_9_, children13_1_.updated_by as updated_5_13_9_, children13_1_.author_id as author_17_13_9_, children13_1_.body as body6_13_9_, children13_1_.code as code7_13_9_, children13_1_.cover_id as cover_i18_13_9_, children13_1_.date as date8_13_9_, children13_1_.drafted_id as drafted19_13_9_, children13_1_.drafted_code as drafted_9_13_9_, children13_1_.language as languag10_13_9_, children13_1_.seo_description as seo_des11_13_9_, children13_1_.seo_keywords as seo_key12_13_9_, children13_1_.seo_title as seo_tit13_13_9_, children13_1_.status as status14_13_9_, children13_1_.title as title15_13_9_, children13_1_.views as views16_13_9_, children13_.lft as lft1_10_9_, children13_.parent_id as parent_i4_10_9_, children13_.rgt as rgt2_10_9_, page14_.id as id1_13_10_, page14_1_.created_at as created_2_13_10_, page14_1_.created_by as created_3_13_10_, page14_1_.updated_at as updated_4_13_10_, page14_1_.updated_by as updated_5_13_10_, page14_1_.author_id as author_17_13_10_, page14_1_.body as body6_13_10_, page14_1_.code as code7_13_10_, page14_1_.cover_id as cover_i18_13_10_, page14_1_.date as date8_13_10_, page14_1_.drafted_id as drafted19_13_10_, page14_1_.drafted_code as drafted_9_13_10_, page14_1_.language as languag10_13_10_, page14_1_.seo_description as seo_des11_13_10_, page14_1_.seo_keywords as seo_key12_13_10_, page14_1_.seo_title as seo_tit13_13_10_, page14_1_.status as status14_13_10_, page14_1_.title as title15_13_10_, page14_1_.views as views16_13_10_, page14_.lft as lft1_10_10_, page14_.parent_id as parent_i4_10_10_, page14_.rgt as rgt2_10_10_ from page this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id left outer join page children13_ on this_.id=children13_.parent_id left outer join post children13_1_ on children13_.id=children13_1_.id left outer join page page14_ on this_.parent_id=page14_.id left outer join post page14_1_ on page14_.id=page14_1_.id where (this_.id in (?, ?))
called| void org.wallride.support.pageutils.createnode(treenode, collection) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| users org.wallride.autoconfigure.wallrideexpressionobjectfactory.createusers(iexpressioncontext) 
called| string org.wallride.web.support.users.path(user) 
called| string org.wallride.web.support.users.path(uricomponentsbuilder, user, boolean) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| string org.wallride.web.support.bloglanguagerewritematch.getmatchingurl() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| string org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.gettarget() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.islast() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.dorewrite(httpservletrequest, httpservletresponse, filterchain) 
called| boolean org.wallride.web.support.bloglanguagerewritematch.execute(httpservletrequest, httpservletresponse) 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean org.wallride.web.support.authorizedusermethodargumentresolver.supportsparameter(methodparameter) 
called| boolean org.wallride.web.support.bloglanguagemethodargumentresolver.supportsparameter(methodparameter) 
called| object org.wallride.web.support.bloglanguagemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest, pageable) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest, pageable) 
called| page com.sun.proxy..proxy192.search(pagesearchrequest, pageable) 
called| page org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_11_, this_1_.created_at as created_2_13_11_, this_1_.created_by as created_3_13_11_, this_1_.updated_at as updated_4_13_11_, this_1_.updated_by as updated_5_13_11_, this_1_.author_id as author_17_13_11_, this_1_.body as body6_13_11_, this_1_.code as code7_13_11_, this_1_.cover_id as cover_i18_13_11_, this_1_.date as date8_13_11_, this_1_.drafted_id as drafted19_13_11_, this_1_.drafted_code as drafted_9_13_11_, this_1_.language as languag10_13_11_, this_1_.seo_description as seo_des11_13_11_, this_1_.seo_keywords as seo_key12_13_11_, this_1_.seo_title as seo_tit13_13_11_, this_1_.status as status14_13_11_, this_1_.title as title15_13_11_, this_1_.views as views16_13_11_, this_.lft as lft1_10_11_, this_.parent_id as parent_i4_10_11_, this_.rgt as rgt2_10_11_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_13_, category4_.id as category1_14_13_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_14_, customfiel7_.id as id1_1_14_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_15_, tag12_.id as tag_id1_17_15_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_, children13_.parent_id as parent_i4_10_16_, children13_.id as id3_10_16_, children13_.id as id1_13_9_, children13_1_.created_at as created_2_13_9_, children13_1_.created_by as created_3_13_9_, children13_1_.updated_at as updated_4_13_9_, children13_1_.updated_by as updated_5_13_9_, children13_1_.author_id as author_17_13_9_, children13_1_.body as body6_13_9_, children13_1_.code as code7_13_9_, children13_1_.cover_id as cover_i18_13_9_, children13_1_.date as date8_13_9_, children13_1_.drafted_id as drafted19_13_9_, children13_1_.drafted_code as drafted_9_13_9_, children13_1_.language as languag10_13_9_, children13_1_.seo_description as seo_des11_13_9_, children13_1_.seo_keywords as seo_key12_13_9_, children13_1_.seo_title as seo_tit13_13_9_, children13_1_.status as status14_13_9_, children13_1_.title as title15_13_9_, children13_1_.views as views16_13_9_, children13_.lft as lft1_10_9_, children13_.parent_id as parent_i4_10_9_, children13_.rgt as rgt2_10_9_, page14_.id as id1_13_10_, page14_1_.created_at as created_2_13_10_, page14_1_.created_by as created_3_13_10_, page14_1_.updated_at as updated_4_13_10_, page14_1_.updated_by as updated_5_13_10_, page14_1_.author_id as author_17_13_10_, page14_1_.body as body6_13_10_, page14_1_.code as code7_13_10_, page14_1_.cover_id as cover_i18_13_10_, page14_1_.date as date8_13_10_, page14_1_.drafted_id as drafted19_13_10_, page14_1_.drafted_code as drafted_9_13_10_, page14_1_.language as languag10_13_10_, page14_1_.seo_description as seo_des11_13_10_, page14_1_.seo_keywords as seo_key12_13_10_, page14_1_.seo_title as seo_tit13_13_10_, page14_1_.status as status14_13_10_, page14_1_.title as title15_13_10_, page14_1_.views as views16_13_10_, page14_.lft as lft1_10_10_, page14_.parent_id as parent_i4_10_10_, page14_.rgt as rgt2_10_10_ from page this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id left outer join page children13_ on this_.id=children13_.parent_id left outer join post children13_1_ on children13_.id=children13_1_.id left outer join page page14_ on this_.parent_id=page14_.id left outer join post page14_1_ on page14_.id=page14_1_.id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest, pageable) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest, pageable) 
called| page com.sun.proxy..proxy192.search(pagesearchrequest, pageable) 
called| page org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_11_, this_1_.created_at as created_2_13_11_, this_1_.created_by as created_3_13_11_, this_1_.updated_at as updated_4_13_11_, this_1_.updated_by as updated_5_13_11_, this_1_.author_id as author_17_13_11_, this_1_.body as body6_13_11_, this_1_.code as code7_13_11_, this_1_.cover_id as cover_i18_13_11_, this_1_.date as date8_13_11_, this_1_.drafted_id as drafted19_13_11_, this_1_.drafted_code as drafted_9_13_11_, this_1_.language as languag10_13_11_, this_1_.seo_description as seo_des11_13_11_, this_1_.seo_keywords as seo_key12_13_11_, this_1_.seo_title as seo_tit13_13_11_, this_1_.status as status14_13_11_, this_1_.title as title15_13_11_, this_1_.views as views16_13_11_, this_.lft as lft1_10_11_, this_.parent_id as parent_i4_10_11_, this_.rgt as rgt2_10_11_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_13_, category4_.id as category1_14_13_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_14_, customfiel7_.id as id1_1_14_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_15_, tag12_.id as tag_id1_17_15_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_, children13_.parent_id as parent_i4_10_16_, children13_.id as id3_10_16_, children13_.id as id1_13_9_, children13_1_.created_at as created_2_13_9_, children13_1_.created_by as created_3_13_9_, children13_1_.updated_at as updated_4_13_9_, children13_1_.updated_by as updated_5_13_9_, children13_1_.author_id as author_17_13_9_, children13_1_.body as body6_13_9_, children13_1_.code as code7_13_9_, children13_1_.cover_id as cover_i18_13_9_, children13_1_.date as date8_13_9_, children13_1_.drafted_id as drafted19_13_9_, children13_1_.drafted_code as drafted_9_13_9_, children13_1_.language as languag10_13_9_, children13_1_.seo_description as seo_des11_13_9_, children13_1_.seo_keywords as seo_key12_13_9_, children13_1_.seo_title as seo_tit13_13_9_, children13_1_.status as status14_13_9_, children13_1_.title as title15_13_9_, children13_1_.views as views16_13_9_, children13_.lft as lft1_10_9_, children13_.parent_id as parent_i4_10_9_, children13_.rgt as rgt2_10_9_, page14_.id as id1_13_10_, page14_1_.created_at as created_2_13_10_, page14_1_.created_by as created_3_13_10_, page14_1_.updated_at as updated_4_13_10_, page14_1_.updated_by as updated_5_13_10_, page14_1_.author_id as author_17_13_10_, page14_1_.body as body6_13_10_, page14_1_.code as code7_13_10_, page14_1_.cover_id as cover_i18_13_10_, page14_1_.date as date8_13_10_, page14_1_.drafted_id as drafted19_13_10_, page14_1_.drafted_code as drafted_9_13_10_, page14_1_.language as languag10_13_10_, page14_1_.seo_description as seo_des11_13_10_, page14_1_.seo_keywords as seo_key12_13_10_, page14_1_.seo_title as seo_tit13_13_10_, page14_1_.status as status14_13_10_, page14_1_.title as title15_13_10_, page14_1_.views as views16_13_10_, page14_.lft as lft1_10_10_, page14_.parent_id as parent_i4_10_10_, page14_.rgt as rgt2_10_10_ from page this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id left outer join page children13_ on this_.id=children13_.parent_id left outer join post children13_1_ on children13_.id=children13_1_.id left outer join page page14_ on this_.parent_id=page14_.id left outer join post page14_1_ on page14_.id=page14_1_.id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.page.pagesearchcontroller.search(string, pagesearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagetreecontroller.index(string,model)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.999537491128959
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.999537491128959
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagesearchcontroller.search(string,pagesearchform,bindingresult,pageable,model,httpservletrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.999537491128959
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.999537491128959
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagetreecontroller.partpagecreatedialog(string,long,model)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.999537491128959
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.999537491128959
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagerestcontroller.sort(string,list<map>)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.999537491128959
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.999537491128959
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagerestcontroller.index(string)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.999537491128959
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.999537491128959
Path matching:False
Request matching:False



======================================= 2 given SQL query ===========================================
Given individual SQL query: select popularpos0_.id as id1_12_0_, post1_.id as id1_13_1_, media2_.id as id1_8_2_, user3_.id as id1_19_3_, popularpos0_.created_at as created_2_12_0_, popularpos0_.created_by as created_3_12_0_, popularpos0_.updated_at as updated_4_12_0_, popularpos0_.updated_by as updated_5_12_0_, popularpos0_.language as language6_12_0_, popularpos0_.post_id as post_id10_12_0_, popularpos0_.rank as rank7_12_0_, popularpos0_.type as type8_12_0_, popularpos0_.views as views9_12_0_, post1_.created_at as created_2_13_1_, post1_.created_by as created_3_13_1_, post1_.updated_at as updated_4_13_1_, post1_.updated_by as updated_5_13_1_, post1_.author_id as author_17_13_1_, post1_.body as body6_13_1_, post1_.code as code7_13_1_, post1_.cover_id as cover_i18_13_1_, post1_.date as date8_13_1_, post1_.drafted_id as drafted19_13_1_, post1_.drafted_code as drafted_9_13_1_, post1_.language as languag10_13_1_, post1_.seo_description as seo_des11_13_1_, post1_.seo_keywords as seo_key12_13_1_, post1_.seo_title as seo_tit13_13_1_, post1_.status as status14_13_1_, post1_.title as title15_13_1_, post1_.views as views16_13_1_, post1_1_.lft as lft1_10_1_, post1_1_.parent_id as parent_i4_10_1_, post1_1_.rgt as rgt2_10_1_, case when post1_1_.id is not null then 1 when post1_2_.id is not null then 2 when post1_.id is not null then 0 end as clazz_1_, media2_.created_at as created_2_8_2_, media2_.created_by as created_3_8_2_, media2_.updated_at as updated_4_8_2_, media2_.updated_by as updated_5_8_2_, media2_.mime_type as mime_typ6_8_2_, media2_.original_name as original7_8_2_, user3_.created_at as created_2_19_3_, user3_.created_by as created_3_19_3_, user3_.updated_at as updated_4_19_3_, user3_.updated_by as updated_5_19_3_, user3_.description as descript6_19_3_, user3_.email as email7_19_3_, user3_.login_id as login_id8_19_3_, user3_.login_password as login_pa9_19_3_, user3_.name_first as name_fi10_19_3_, user3_.name_last as name_la11_19_3_, user3_.nickname as nicknam12_19_3_ from popular_post popularpos0_ inner join post post1_ on popularpos0_.post_id=post1_.id left outer join page post1_1_ on post1_.id=post1_1_.id left outer join article post1_2_ on post1_.id=post1_2_.id inner join media media2_ on post1_.cover_id=media2_.id inner join user user3_ on post1_.author_id=user3_.id where popularpos0_.language=? and popularpos0_.type=? and post1_.status=?
Execution time of Given individual SQL query (slow) : 172300ns
Pre-processed SQL query : select from popularpost inner join post left outer join page left outer join article inner join media inner join user user where popularpos.language=? and popularpos.type=? and post.status=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| long org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.countarticlesbystatus(post.status, string) 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| long org.wallride.service.articleservice.countarticlesbystatus(post.status, string) 
called| long com.sun.proxy..proxy184.countbystatus(post.status, string) 
sql|select count(article0_.id) as col_0_0_ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id where article0_1_.status=? and article0_1_.language=? and (article0_1_.drafted_id is null)
called| long org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.countpagesbystatus(post.status, string) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| long org.wallride.service.pageservice.countpagesbystatus(post.status, string) 
called| long com.sun.proxy..proxy192.countbystatus(post.status, string) 
sql|select count(page0_.id) as col_0_0_ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id where page0_1_.status=? and page0_1_.language=? and (page0_1_.drafted_id is null)
called| list org.wallride.service.categoryservice..enhancerbyspringcglib..d21e8ac6.getcategories(string) 
called| int org.wallride.service.categoryservice..fastclassbyspringcglib..c6ab8c1c.getindex(signature) 
called| int org.wallride.service.categoryservice..enhancerbyspringcglib..d21e8ac6..fastclassbyspringcglib..542abadb.getindex(signature) 
called| object org.wallride.service.categoryservice..fastclassbyspringcglib..c6ab8c1c.invoke(int, object, object[]) 
called| list org.wallride.service.categoryservice.getcategories(string) 
called| list org.wallride.service.categoryservice.getcategories(string, boolean) 
called| specification org.wallride.repository.categoryspecifications.hasposts(string) 
called| list com.sun.proxy..proxy188.findall(specification, sort) 
called| predicate org.wallride.repository.categoryspecifications.lambda$hasposts$76e9cbe1$1(string, root, criteriaquery, criteriabuilder) 
sql|select distinct category0_.id as id1_5_0_, category4_.id as id1_5_1_, children5_.id as id1_5_2_, category0_.created_at as created_2_5_0_, category0_.created_by as created_3_5_0_, category0_.updated_at as updated_4_5_0_, category0_.updated_by as updated_5_5_0_, category0_.code as code6_5_0_, category0_.description as descript7_5_0_, category0_.language as language8_5_0_, category0_.lft as lft9_5_0_, category0_.name as name10_5_0_, category0_.parent_id as parent_12_5_0_, category0_.rgt as rgt11_5_0_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, children5_.created_at as created_2_5_2_, children5_.created_by as created_3_5_2_, children5_.updated_at as updated_4_5_2_, children5_.updated_by as updated_5_5_2_, children5_.code as code6_5_2_, children5_.description as descript7_5_2_, children5_.language as language8_5_2_, children5_.lft as lft9_5_2_, children5_.name as name10_5_2_, children5_.parent_id as parent_12_5_2_, children5_.rgt as rgt11_5_2_, children5_.parent_id as parent_12_5_0__, children5_.id as id1_5_0__ from category category0_ left outer join category category4_ on category0_.parent_id=category4_.id left outer join category children5_ on category0_.id=children5_.parent_id where (category0_.id in (select category3_.id from post post1_ inner join post_category categories2_ on post1_.id=categories2_.post_id inner join category category3_ on categories2_.category_id=category3_.id where post1_.status=?)) and category0_.language=? order by category0_.lft asc
called| sortedset org.wallride.web.controller.admin.dashboardcontroller.popularposts(string) 
called| sortedset org.wallride.service.postservice..enhancerbyspringcglib..4f169b60.getpopularposts(string, popularpost.type) 
called| int org.wallride.service.postservice..fastclassbyspringcglib..8cfaa0ba.getindex(signature) 
called| int org.wallride.service.postservice..enhancerbyspringcglib..4f169b60..fastclassbyspringcglib..4a9ef359.getindex(signature) 
called| object org.wallride.service.postservice..fastclassbyspringcglib..8cfaa0ba.invoke(int, object, object[]) 
called| sortedset org.wallride.service.postservice.getpopularposts(string, popularpost.type) 
called| sortedset com.sun.proxy..proxy196.findall(specification) 
called| predicate org.wallride.service.postservice.lambda$getpopularposts$ddedb089$1(string, popularpost.type, root, criteriaquery, criteriabuilder) 
sql|select popularpos0_.id as id1_12_0_, post1_.id as id1_13_1_, media2_.id as id1_8_2_, user3_.id as id1_19_3_, popularpos0_.created_at as created_2_12_0_, popularpos0_.created_by as created_3_12_0_, popularpos0_.updated_at as updated_4_12_0_, popularpos0_.updated_by as updated_5_12_0_, popularpos0_.language as language6_12_0_, popularpos0_.post_id as post_id10_12_0_, popularpos0_.rank as rank7_12_0_, popularpos0_.type as type8_12_0_, popularpos0_.views as views9_12_0_, post1_.created_at as created_2_13_1_, post1_.created_by as created_3_13_1_, post1_.updated_at as updated_4_13_1_, post1_.updated_by as updated_5_13_1_, post1_.author_id as author_17_13_1_, post1_.body as body6_13_1_, post1_.code as code7_13_1_, post1_.cover_id as cover_i18_13_1_, post1_.date as date8_13_1_, post1_.drafted_id as drafted19_13_1_, post1_.drafted_code as drafted_9_13_1_, post1_.language as languag10_13_1_, post1_.seo_description as seo_des11_13_1_, post1_.seo_keywords as seo_key12_13_1_, post1_.seo_title as seo_tit13_13_1_, post1_.status as status14_13_1_, post1_.title as title15_13_1_, post1_.views as views16_13_1_, post1_1_.lft as lft1_10_1_, post1_1_.parent_id as parent_i4_10_1_, post1_1_.rgt as rgt2_10_1_, case when post1_1_.id is not null then ? when post1_2_.id is not null then ? when post1_.id is not null then ? end as clazz_1_, media2_.created_at as created_2_8_2_, media2_.created_by as created_3_8_2_, media2_.updated_at as updated_4_8_2_, media2_.updated_by as updated_5_8_2_, media2_.mime_type as mime_typ6_8_2_, media2_.original_name as original7_8_2_, user3_.created_at as created_2_19_3_, user3_.created_by as created_3_19_3_, user3_.updated_at as updated_4_19_3_, user3_.updated_by as updated_5_19_3_, user3_.description as descript6_19_3_, user3_.email as email7_19_3_, user3_.login_id as login_id8_19_3_, user3_.login_password as login_pa9_19_3_, user3_.name_first as name_fi10_19_3_, user3_.name_last as name_la11_19_3_, user3_.nickname as nicknam12_19_3_ from popular_post popularpos0_ inner join post post1_ on popularpos0_.post_id=post1_.id left outer join page post1_1_ on post1_.id=post1_1_.id left outer join article post1_2_ on post1_.id=post1_2_.id inner join media media2_ on post1_.cover_id=media2_.id inner join user user3_ on post1_.author_id=user3_.id where popularpos0_.language=? and popularpos0_.type=? and post1_.status=?
called| list org.wallride.web.controller.admin.dashboardcontroller.recentpublishedarticles(string) 
called| void org.wallride.web.controller.admin.article.articlesearchform.setstatus(post.status) 
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| page org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticles(articlesearchrequest) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest, pageable) 
called| page com.sun.proxy..proxy184.search(articlesearchrequest, pageable) 
called| page org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_9_, this_1_.created_at as created_2_13_9_, this_1_.created_by as created_3_13_9_, this_1_.updated_at as updated_4_13_9_, this_1_.updated_by as updated_5_13_9_, this_1_.author_id as author_17_13_9_, this_1_.body as body6_13_9_, this_1_.code as code7_13_9_, this_1_.cover_id as cover_i18_13_9_, this_1_.date as date8_13_9_, this_1_.drafted_id as drafted19_13_9_, this_1_.drafted_code as drafted_9_13_9_, this_1_.language as languag10_13_9_, this_1_.seo_description as seo_des11_13_9_, this_1_.seo_keywords as seo_key12_13_9_, this_1_.seo_title as seo_tit13_13_9_, this_1_.status as status14_13_9_, this_1_.title as title15_13_9_, this_1_.views as views16_13_9_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_11_, category4_.id as category1_14_11_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_12_, customfiel7_.id as id1_1_12_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_13_, tag12_.id as tag_id1_17_13_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_ from article this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where (this_.id in (?, ?))
called| list org.wallride.web.controller.admin.dashboardcontroller.recentdraftarticles(string) 
after rest| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.dashboardcontroller.dashboard(string,model)
method:org.wallride.service.articleservice.countarticlesbystatus(status,string)
method:org.wallride.repository.articlerepository.countbystatus(status,string)
[select count(article.id) from article article where article.status = :status and article.language = :language and article.drafted is null ]
method:org.wallride.service.pageservice.countpagesbystatus(status,string)
method:org.wallride.repository.pagerepository.countbystatus(status,string)
[select count(page.id) from page page where page.status = :status and page.language = :language and page.drafted is null ]
method:org.wallride.service.categoryservice.getcategories(string)
method:org.wallride.service.categoryservice.getcategories(string,boolean)
method:org.wallride.repository.categoryrepository.findalldistinctbylanguageorderbylftasc(string)
[select distinct language from category category where category.language = :language order by language asc]
method:org.wallride.web.controller.admin.dashboardcontroller.popularposts(string)
method:org.wallride.service.postservice.getpopularposts(string,type)
method:org.wallride.repository.popularpostrepository.findall(specification)
[select * from popularpost popularpost where popularpost in :spec]
method:org.wallride.web.controller.admin.dashboardcontroller.recentpublishedarticles(string)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]
method:org.wallride.web.controller.admin.dashboardcontroller.recentdraftarticles(string)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.6462664809979327
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8962664809979327
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.dashboardcontroller.dashboard(string,model)
method:org.wallride.service.articleservice.countarticlesbystatus(status,string)
method:org.wallride.repository.articlerepository.countbystatus(status,string)
[select count(article.id) from article article where article.status = :status and article.language = :language and article.drafted is null ]
method:org.wallride.service.pageservice.countpagesbystatus(status,string)
method:org.wallride.repository.pagerepository.countbystatus(status,string)
[select count(page.id) from page page where page.status = :status and page.language = :language and page.drafted is null ]
method:org.wallride.service.categoryservice.getcategories(string)
method:org.wallride.service.categoryservice.getcategories(string,boolean)
method:org.wallride.repository.categoryrepository.findall(specification,sort)
[select * from category category where category.id in :spec]
method:org.wallride.web.controller.admin.dashboardcontroller.popularposts(string)
method:org.wallride.service.postservice.getpopularposts(string,type)
method:org.wallride.repository.popularpostrepository.findall(specification)
[select * from popularpost popularpost where popularpost in :spec]
method:org.wallride.web.controller.admin.dashboardcontroller.recentpublishedarticles(string)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]
method:org.wallride.web.controller.admin.dashboardcontroller.recentdraftarticles(string)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.6426533197983852
Semantic Similarity:0.25
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.8926533197983852
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string,long,string,model,redirectattributes)
method:org.wallride.service.pageservice.getpagebyid(long)
method:org.wallride.repository.pagerepository.findonebyid(long)
[select from page page inner join post left outer join page left outer join post left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id ]
method:org.wallride.service.pageservice.getpageids(pagesearchrequest)
method:org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest)
[select from page inner join post left outer join media left outer join page left outer join post left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag cross join page inner join post cross join page inner join post where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt)   order by]

Syntactic Similarity:0.5922930422557581
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5922930422557581
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articleeditcontroller.update(string,articleeditform,bindingresult,string,authorizeduser,redirectattributes)
method:org.wallride.service.articleservice.savearticle(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]
method:org.wallride.repository.postrepository.findonebycodeandlanguage(string,string)
[select from post post left outer join page left outer join article left outer join media left outer join user where post.code=:code and post.language=:language]

Syntactic Similarity:0.5754861178939833
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5754861178939833
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articleeditcontroller.saveasdraft(string,articleeditform,bindingresult,model,authorizeduser)
method:org.wallride.service.articleservice.savearticleasdraft(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]
method:org.wallride.service.articleservice.savearticle(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]
method:org.wallride.repository.postrepository.findonebycodeandlanguage(string,string)
[select from post post left outer join page left outer join article left outer join media left outer join user where post.code=:code and post.language=:language]

Syntactic Similarity:0.5731492062024214
Semantic Similarity:0.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 0.5731492062024214
Path matching:False
Request matching:False



======================================= 3 given SQL query ===========================================
Given individual SQL query: select page0_.id as id1_13_0_, media1_.id as id1_8_1_, page2_.id as id1_13_2_, post4_.id as id1_13_3_, customfiel5_.id as id1_1_4_, customfiel6_.id as id1_0_5_, children7_.id as id1_13_6_, user8_.id as id1_19_7_, category10_.id as id1_5_8_, tag12_.id as id1_18_9_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, page2_1_.created_at as created_2_13_2_, page2_1_.created_by as created_3_13_2_, page2_1_.updated_at as updated_4_13_2_, page2_1_.updated_by as updated_5_13_2_, page2_1_.author_id as author_17_13_2_, page2_1_.body as body6_13_2_, page2_1_.code as code7_13_2_, page2_1_.cover_id as cover_i18_13_2_, page2_1_.date as date8_13_2_, page2_1_.drafted_id as drafted19_13_2_, page2_1_.drafted_code as drafted_9_13_2_, page2_1_.language as languag10_13_2_, page2_1_.seo_description as seo_des11_13_2_, page2_1_.seo_keywords as seo_key12_13_2_, page2_1_.seo_title as seo_tit13_13_2_, page2_1_.status as status14_13_2_, page2_1_.title as title15_13_2_, page2_1_.views as views16_13_2_, page2_.lft as lft1_10_2_, page2_.parent_id as parent_i4_10_2_, page2_.rgt as rgt2_10_2_, post4_.created_at as created_2_13_3_, post4_.created_by as created_3_13_3_, post4_.updated_at as updated_4_13_3_, post4_.updated_by as updated_5_13_3_, post4_.author_id as author_17_13_3_, post4_.body as body6_13_3_, post4_.code as code7_13_3_, post4_.cover_id as cover_i18_13_3_, post4_.date as date8_13_3_, post4_.drafted_id as drafted19_13_3_, post4_.drafted_code as drafted_9_13_3_, post4_.language as languag10_13_3_, post4_.seo_description as seo_des11_13_3_, post4_.seo_keywords as seo_key12_13_3_, post4_.seo_title as seo_tit13_13_3_, post4_.status as status14_13_3_, post4_.title as title15_13_3_, post4_.views as views16_13_3_, post4_1_.lft as lft1_10_3_, post4_1_.parent_id as parent_i4_10_3_, post4_1_.rgt as rgt2_10_3_, case when post4_1_.id is not null then 1 when post4_2_.id is not null then 2 when post4_.id is not null then 0 end as clazz_3_, relatedtop3_.post_id as post_id1_16_0__, relatedtop3_.related_id as related_2_16_0__, customfiel5_.created_at as created_2_1_4_, customfiel5_.created_by as created_3_1_4_, customfiel5_.updated_at as updated_4_1_4_, customfiel5_.updated_by as updated_5_1_4_, customfiel5_.custom_field_id as custom_11_1_4_, customfiel5_.date_value as date_val6_1_4_, customfiel5_.datetime_value as datetime7_1_4_, customfiel5_.number_value as number_v8_1_4_, customfiel5_.post_id as post_id12_1_4_, customfiel5_.string_value as string_v9_1_4_, customfiel5_.text_value as text_va10_1_4_, customfiel5_.post_id as post_id12_1_1__, customfiel5_.id as id1_1_1__, customfiel6_.created_at as created_2_0_5_, customfiel6_.created_by as created_3_0_5_, customfiel6_.updated_at as updated_4_0_5_, customfiel6_.updated_by as updated_5_0_5_, customfiel6_.code as code6_0_5_, customfiel6_.default_value as default_7_0_5_, customfiel6_.description as descript8_0_5_, customfiel6_.field_type as field_ty9_0_5_, customfiel6_.idx as idx10_0_5_, customfiel6_.language as languag11_0_5_, customfiel6_.name as name12_0_5_, children7_1_.created_at as created_2_13_6_, children7_1_.created_by as created_3_13_6_, children7_1_.updated_at as updated_4_13_6_, children7_1_.updated_by as updated_5_13_6_, children7_1_.author_id as author_17_13_6_, children7_1_.body as body6_13_6_, children7_1_.code as code7_13_6_, children7_1_.cover_id as cover_i18_13_6_, children7_1_.date as date8_13_6_, children7_1_.drafted_id as drafted19_13_6_, children7_1_.drafted_code as drafted_9_13_6_, children7_1_.language as languag10_13_6_, children7_1_.seo_description as seo_des11_13_6_, children7_1_.seo_keywords as seo_key12_13_6_, children7_1_.seo_title as seo_tit13_13_6_, children7_1_.status as status14_13_6_, children7_1_.title as title15_13_6_, children7_1_.views as views16_13_6_, children7_.lft as lft1_10_6_, children7_.parent_id as parent_i4_10_6_, children7_.rgt as rgt2_10_6_, children7_.parent_id as parent_i4_10_2__, children7_.id as id3_10_2__, user8_.created_at as created_2_19_7_, user8_.created_by as created_3_19_7_, user8_.updated_at as updated_4_19_7_, user8_.updated_by as updated_5_19_7_, user8_.description as descript6_19_7_, user8_.email as email7_19_7_, user8_.login_id as login_id8_19_7_, user8_.login_password as login_pa9_19_7_, user8_.name_first as name_fi10_19_7_, user8_.name_last as name_la11_19_7_, user8_.nickname as nicknam12_19_7_, category10_.created_at as created_2_5_8_, category10_.created_by as created_3_5_8_, category10_.updated_at as updated_4_5_8_, category10_.updated_by as updated_5_5_8_, category10_.code as code6_5_8_, category10_.description as descript7_5_8_, category10_.language as language8_5_8_, category10_.lft as lft9_5_8_, category10_.name as name10_5_8_, category10_.parent_id as parent_12_5_8_, category10_.rgt as rgt11_5_8_, categories9_.post_id as post_id2_14_3__, categories9_.category_id as category1_14_3__, tag12_.created_at as created_2_18_9_, tag12_.created_by as created_3_18_9_, tag12_.updated_at as updated_4_18_9_, tag12_.updated_by as updated_5_18_9_, tag12_.language as language6_18_9_, tag12_.name as name7_18_9_, tags11_.post_id as post_id2_17_4__, tags11_.tag_id as tag_id1_17_4__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media1_ on page0_1_.cover_id=media1_.id left outer join page page2_ on page0_.parent_id=page2_.id left outer join post page2_1_ on page2_.id=page2_1_.id left outer join post_related_post relatedtop3_ on page0_.id=relatedtop3_.post_id left outer join post post4_ on relatedtop3_.related_id=post4_.id left outer join page post4_1_ on post4_.id=post4_1_.id left outer join article post4_2_ on post4_.id=post4_2_.id left outer join custom_field_value customfiel5_ on page0_.id=customfiel5_.post_id left outer join custom_field customfiel6_ on customfiel5_.custom_field_id=customfiel6_.id left outer join page children7_ on page0_.id=children7_.parent_id left outer join post children7_1_ on children7_.id=children7_1_.id left outer join user user8_ on page0_1_.author_id=user8_.id left outer join post_category categories9_ on page0_.id=categories9_.post_id left outer join category category10_ on categories9_.category_id=category10_.id left outer join post_tag tags11_ on page0_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where page0_.id=?
Execution time of Given individual SQL query (slow) : 141900ns
Pre-processed SQL query : select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user user8 left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpagebyid(long) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpagebyid(long) 
called| page com.sun.proxy..proxy192.findonebyid(long) 
sql|select page0_.id as id1_13_0_, media1_.id as id1_8_1_, page2_.id as id1_13_2_, post4_.id as id1_13_3_, customfiel5_.id as id1_1_4_, customfiel6_.id as id1_0_5_, children7_.id as id1_13_6_, user8_.id as id1_19_7_, category10_.id as id1_5_8_, tag12_.id as id1_18_9_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, page2_1_.created_at as created_2_13_2_, page2_1_.created_by as created_3_13_2_, page2_1_.updated_at as updated_4_13_2_, page2_1_.updated_by as updated_5_13_2_, page2_1_.author_id as author_17_13_2_, page2_1_.body as body6_13_2_, page2_1_.code as code7_13_2_, page2_1_.cover_id as cover_i18_13_2_, page2_1_.date as date8_13_2_, page2_1_.drafted_id as drafted19_13_2_, page2_1_.drafted_code as drafted_9_13_2_, page2_1_.language as languag10_13_2_, page2_1_.seo_description as seo_des11_13_2_, page2_1_.seo_keywords as seo_key12_13_2_, page2_1_.seo_title as seo_tit13_13_2_, page2_1_.status as status14_13_2_, page2_1_.title as title15_13_2_, page2_1_.views as views16_13_2_, page2_.lft as lft1_10_2_, page2_.parent_id as parent_i4_10_2_, page2_.rgt as rgt2_10_2_, post4_.created_at as created_2_13_3_, post4_.created_by as created_3_13_3_, post4_.updated_at as updated_4_13_3_, post4_.updated_by as updated_5_13_3_, post4_.author_id as author_17_13_3_, post4_.body as body6_13_3_, post4_.code as code7_13_3_, post4_.cover_id as cover_i18_13_3_, post4_.date as date8_13_3_, post4_.drafted_id as drafted19_13_3_, post4_.drafted_code as drafted_9_13_3_, post4_.language as languag10_13_3_, post4_.seo_description as seo_des11_13_3_, post4_.seo_keywords as seo_key12_13_3_, post4_.seo_title as seo_tit13_13_3_, post4_.status as status14_13_3_, post4_.title as title15_13_3_, post4_.views as views16_13_3_, post4_1_.lft as lft1_10_3_, post4_1_.parent_id as parent_i4_10_3_, post4_1_.rgt as rgt2_10_3_, case when post4_1_.id is not null then ? when post4_2_.id is not null then ? when post4_.id is not null then ? end as clazz_3_, relatedtop3_.post_id as post_id1_16_0__, relatedtop3_.related_id as related_2_16_0__, customfiel5_.created_at as created_2_1_4_, customfiel5_.created_by as created_3_1_4_, customfiel5_.updated_at as updated_4_1_4_, customfiel5_.updated_by as updated_5_1_4_, customfiel5_.custom_field_id as custom_11_1_4_, customfiel5_.date_value as date_val6_1_4_, customfiel5_.datetime_value as datetime7_1_4_, customfiel5_.number_value as number_v8_1_4_, customfiel5_.post_id as post_id12_1_4_, customfiel5_.string_value as string_v9_1_4_, customfiel5_.text_value as text_va10_1_4_, customfiel5_.post_id as post_id12_1_1__, customfiel5_.id as id1_1_1__, customfiel6_.created_at as created_2_0_5_, customfiel6_.created_by as created_3_0_5_, customfiel6_.updated_at as updated_4_0_5_, customfiel6_.updated_by as updated_5_0_5_, customfiel6_.code as code6_0_5_, customfiel6_.default_value as default_7_0_5_, customfiel6_.description as descript8_0_5_, customfiel6_.field_type as field_ty9_0_5_, customfiel6_.idx as idx10_0_5_, customfiel6_.language as languag11_0_5_, customfiel6_.name as name12_0_5_, children7_1_.created_at as created_2_13_6_, children7_1_.created_by as created_3_13_6_, children7_1_.updated_at as updated_4_13_6_, children7_1_.updated_by as updated_5_13_6_, children7_1_.author_id as author_17_13_6_, children7_1_.body as body6_13_6_, children7_1_.code as code7_13_6_, children7_1_.cover_id as cover_i18_13_6_, children7_1_.date as date8_13_6_, children7_1_.drafted_id as drafted19_13_6_, children7_1_.drafted_code as drafted_9_13_6_, children7_1_.language as languag10_13_6_, children7_1_.seo_description as seo_des11_13_6_, children7_1_.seo_keywords as seo_key12_13_6_, children7_1_.seo_title as seo_tit13_13_6_, children7_1_.status as status14_13_6_, children7_1_.title as title15_13_6_, children7_1_.views as views16_13_6_, children7_.lft as lft1_10_6_, children7_.parent_id as parent_i4_10_6_, children7_.rgt as rgt2_10_6_, children7_.parent_id as parent_i4_10_2__, children7_.id as id3_10_2__, user8_.created_at as created_2_19_7_, user8_.created_by as created_3_19_7_, user8_.updated_at as updated_4_19_7_, user8_.updated_by as updated_5_19_7_, user8_.description as descript6_19_7_, user8_.email as email7_19_7_, user8_.login_id as login_id8_19_7_, user8_.login_password as login_pa9_19_7_, user8_.name_first as name_fi10_19_7_, user8_.name_last as name_la11_19_7_, user8_.nickname as nicknam12_19_7_, category10_.created_at as created_2_5_8_, category10_.created_by as created_3_5_8_, category10_.updated_at as updated_4_5_8_, category10_.updated_by as updated_5_5_8_, category10_.code as code6_5_8_, category10_.description as descript7_5_8_, category10_.language as language8_5_8_, category10_.lft as lft9_5_8_, category10_.name as name10_5_8_, category10_.parent_id as parent_12_5_8_, category10_.rgt as rgt11_5_8_, categories9_.post_id as post_id2_14_3__, categories9_.category_id as category1_14_3__, tag12_.created_at as created_2_18_9_, tag12_.created_by as created_3_18_9_, tag12_.updated_at as updated_4_18_9_, tag12_.updated_by as updated_5_18_9_, tag12_.language as language6_18_9_, tag12_.name as name7_18_9_, tags11_.post_id as post_id2_17_4__, tags11_.tag_id as tag_id1_17_4__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media1_ on page0_1_.cover_id=media1_.id left outer join page page2_ on page0_.parent_id=page2_.id left outer join post page2_1_ on page2_.id=page2_1_.id left outer join post_related_post relatedtop3_ on page0_.id=relatedtop3_.post_id left outer join post post4_ on relatedtop3_.related_id=post4_.id left outer join page post4_1_ on post4_.id=post4_1_.id left outer join article post4_2_ on post4_.id=post4_2_.id left outer join custom_field_value customfiel5_ on page0_.id=customfiel5_.post_id left outer join custom_field customfiel6_ on customfiel5_.custom_field_id=customfiel6_.id left outer join page children7_ on page0_.id=children7_.parent_id left outer join post children7_1_ on children7_.id=children7_1_.id left outer join user user8_ on page0_1_.author_id=user8_.id left outer join post_category categories9_ on page0_.id=categories9_.post_id left outer join category category10_ on categories9_.category_id=category10_.id left outer join post_tag tags11_ on page0_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where page0_.id=?
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpageids(pagesearchrequest) 
called| list org.wallride.service.pageservice.getpageids(pagesearchrequest) 
called| list com.sun.proxy..proxy192.searchforid(pagesearchrequest) 
called| list org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.pagerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(page) 
called| string org.wallride.support.postutils.path(page) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, page, boolean) 
called| map org.wallride.support.pageutils.getpaths(page) 
called| map org.wallride.support.pageutils.getpaths(page, boolean) 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpathpages(page, boolean) 
called| list org.wallride.service.pageservice.getpathpages(page, boolean) 
called| specification org.wallride.repository.pagespecifications.path(page, boolean) 
called| list com.sun.proxy..proxy192.findall(specification) 
called| predicate org.wallride.repository.pagespecifications.lambda$path$b2e51f7a$1(page, boolean, root, criteriaquery, criteriabuilder) 
sql|select page0_.id as id1_13_0_, media4_.id as id1_8_1_, page5_.id as id1_13_2_, children6_.id as id1_13_3_, user7_.id as id1_19_4_, category9_.id as id1_5_5_, tag11_.id as id1_18_6_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media4_.created_at as created_2_8_1_, media4_.created_by as created_3_8_1_, media4_.updated_at as updated_4_8_1_, media4_.updated_by as updated_5_8_1_, media4_.mime_type as mime_typ6_8_1_, media4_.original_name as original7_8_1_, page5_1_.created_at as created_2_13_2_, page5_1_.created_by as created_3_13_2_, page5_1_.updated_at as updated_4_13_2_, page5_1_.updated_by as updated_5_13_2_, page5_1_.author_id as author_17_13_2_, page5_1_.body as body6_13_2_, page5_1_.code as code7_13_2_, page5_1_.cover_id as cover_i18_13_2_, page5_1_.date as date8_13_2_, page5_1_.drafted_id as drafted19_13_2_, page5_1_.drafted_code as drafted_9_13_2_, page5_1_.language as languag10_13_2_, page5_1_.seo_description as seo_des11_13_2_, page5_1_.seo_keywords as seo_key12_13_2_, page5_1_.seo_title as seo_tit13_13_2_, page5_1_.status as status14_13_2_, page5_1_.title as title15_13_2_, page5_1_.views as views16_13_2_, page5_.lft as lft1_10_2_, page5_.parent_id as parent_i4_10_2_, page5_.rgt as rgt2_10_2_, children6_1_.created_at as created_2_13_3_, children6_1_.created_by as created_3_13_3_, children6_1_.updated_at as updated_4_13_3_, children6_1_.updated_by as updated_5_13_3_, children6_1_.author_id as author_17_13_3_, children6_1_.body as body6_13_3_, children6_1_.code as code7_13_3_, children6_1_.cover_id as cover_i18_13_3_, children6_1_.date as date8_13_3_, children6_1_.drafted_id as drafted19_13_3_, children6_1_.drafted_code as drafted_9_13_3_, children6_1_.language as languag10_13_3_, children6_1_.seo_description as seo_des11_13_3_, children6_1_.seo_keywords as seo_key12_13_3_, children6_1_.seo_title as seo_tit13_13_3_, children6_1_.status as status14_13_3_, children6_1_.title as title15_13_3_, children6_1_.views as views16_13_3_, children6_.lft as lft1_10_3_, children6_.parent_id as parent_i4_10_3_, children6_.rgt as rgt2_10_3_, children6_.parent_id as parent_i4_10_0__, children6_.id as id3_10_0__, user7_.created_at as created_2_19_4_, user7_.created_by as created_3_19_4_, user7_.updated_at as updated_4_19_4_, user7_.updated_by as updated_5_19_4_, user7_.description as descript6_19_4_, user7_.email as email7_19_4_, user7_.login_id as login_id8_19_4_, user7_.login_password as login_pa9_19_4_, user7_.name_first as name_fi10_19_4_, user7_.name_last as name_la11_19_4_, user7_.nickname as nicknam12_19_4_, category9_.created_at as created_2_5_5_, category9_.created_by as created_3_5_5_, category9_.updated_at as updated_4_5_5_, category9_.updated_by as updated_5_5_5_, category9_.code as code6_5_5_, category9_.description as descript7_5_5_, category9_.language as language8_5_5_, category9_.lft as lft9_5_5_, category9_.name as name10_5_5_, category9_.parent_id as parent_12_5_5_, category9_.rgt as rgt11_5_5_, categories8_.post_id as post_id2_14_1__, categories8_.category_id as category1_14_1__, tag11_.created_at as created_2_18_6_, tag11_.created_by as created_3_18_6_, tag11_.updated_at as updated_4_18_6_, tag11_.updated_by as updated_5_18_6_, tag11_.language as language6_18_6_, tag11_.name as name7_18_6_, tags10_.post_id as post_id2_17_2__, tags10_.tag_id as tag_id1_17_2__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media4_ on page0_1_.cover_id=media4_.id left outer join page page5_ on page0_.parent_id=page5_.id left outer join post page5_1_ on page5_.id=page5_1_.id left outer join page children6_ on page0_.id=children6_.parent_id left outer join post children6_1_ on children6_.id=children6_1_.id left outer join user user7_ on page0_1_.author_id=user7_.id left outer join post_category categories8_ on page0_.id=categories8_.post_id left outer join category category9_ on categories8_.category_id=category9_.id left outer join post_tag tags10_ on page0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id cross join page page1_ inner join post page1_1_ on page1_.id=page1_1_.id cross join page page2_ inner join post page2_1_ on page2_.id=page2_1_.id where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt) order by page0_.rgt-page0_.lft desc
called| string org.wallride.support.postutils.lambda$path$0(page) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpagebyid(long) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpagebyid(long) 
called| page com.sun.proxy..proxy192.findonebyid(long) 
sql|select page0_.id as id1_13_0_, media1_.id as id1_8_1_, page2_.id as id1_13_2_, post4_.id as id1_13_3_, customfiel5_.id as id1_1_4_, customfiel6_.id as id1_0_5_, children7_.id as id1_13_6_, user8_.id as id1_19_7_, category10_.id as id1_5_8_, tag12_.id as id1_18_9_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, page2_1_.created_at as created_2_13_2_, page2_1_.created_by as created_3_13_2_, page2_1_.updated_at as updated_4_13_2_, page2_1_.updated_by as updated_5_13_2_, page2_1_.author_id as author_17_13_2_, page2_1_.body as body6_13_2_, page2_1_.code as code7_13_2_, page2_1_.cover_id as cover_i18_13_2_, page2_1_.date as date8_13_2_, page2_1_.drafted_id as drafted19_13_2_, page2_1_.drafted_code as drafted_9_13_2_, page2_1_.language as languag10_13_2_, page2_1_.seo_description as seo_des11_13_2_, page2_1_.seo_keywords as seo_key12_13_2_, page2_1_.seo_title as seo_tit13_13_2_, page2_1_.status as status14_13_2_, page2_1_.title as title15_13_2_, page2_1_.views as views16_13_2_, page2_.lft as lft1_10_2_, page2_.parent_id as parent_i4_10_2_, page2_.rgt as rgt2_10_2_, post4_.created_at as created_2_13_3_, post4_.created_by as created_3_13_3_, post4_.updated_at as updated_4_13_3_, post4_.updated_by as updated_5_13_3_, post4_.author_id as author_17_13_3_, post4_.body as body6_13_3_, post4_.code as code7_13_3_, post4_.cover_id as cover_i18_13_3_, post4_.date as date8_13_3_, post4_.drafted_id as drafted19_13_3_, post4_.drafted_code as drafted_9_13_3_, post4_.language as languag10_13_3_, post4_.seo_description as seo_des11_13_3_, post4_.seo_keywords as seo_key12_13_3_, post4_.seo_title as seo_tit13_13_3_, post4_.status as status14_13_3_, post4_.title as title15_13_3_, post4_.views as views16_13_3_, post4_1_.lft as lft1_10_3_, post4_1_.parent_id as parent_i4_10_3_, post4_1_.rgt as rgt2_10_3_, case when post4_1_.id is not null then ? when post4_2_.id is not null then ? when post4_.id is not null then ? end as clazz_3_, relatedtop3_.post_id as post_id1_16_0__, relatedtop3_.related_id as related_2_16_0__, customfiel5_.created_at as created_2_1_4_, customfiel5_.created_by as created_3_1_4_, customfiel5_.updated_at as updated_4_1_4_, customfiel5_.updated_by as updated_5_1_4_, customfiel5_.custom_field_id as custom_11_1_4_, customfiel5_.date_value as date_val6_1_4_, customfiel5_.datetime_value as datetime7_1_4_, customfiel5_.number_value as number_v8_1_4_, customfiel5_.post_id as post_id12_1_4_, customfiel5_.string_value as string_v9_1_4_, customfiel5_.text_value as text_va10_1_4_, customfiel5_.post_id as post_id12_1_1__, customfiel5_.id as id1_1_1__, customfiel6_.created_at as created_2_0_5_, customfiel6_.created_by as created_3_0_5_, customfiel6_.updated_at as updated_4_0_5_, customfiel6_.updated_by as updated_5_0_5_, customfiel6_.code as code6_0_5_, customfiel6_.default_value as default_7_0_5_, customfiel6_.description as descript8_0_5_, customfiel6_.field_type as field_ty9_0_5_, customfiel6_.idx as idx10_0_5_, customfiel6_.language as languag11_0_5_, customfiel6_.name as name12_0_5_, children7_1_.created_at as created_2_13_6_, children7_1_.created_by as created_3_13_6_, children7_1_.updated_at as updated_4_13_6_, children7_1_.updated_by as updated_5_13_6_, children7_1_.author_id as author_17_13_6_, children7_1_.body as body6_13_6_, children7_1_.code as code7_13_6_, children7_1_.cover_id as cover_i18_13_6_, children7_1_.date as date8_13_6_, children7_1_.drafted_id as drafted19_13_6_, children7_1_.drafted_code as drafted_9_13_6_, children7_1_.language as languag10_13_6_, children7_1_.seo_description as seo_des11_13_6_, children7_1_.seo_keywords as seo_key12_13_6_, children7_1_.seo_title as seo_tit13_13_6_, children7_1_.status as status14_13_6_, children7_1_.title as title15_13_6_, children7_1_.views as views16_13_6_, children7_.lft as lft1_10_6_, children7_.parent_id as parent_i4_10_6_, children7_.rgt as rgt2_10_6_, children7_.parent_id as parent_i4_10_2__, children7_.id as id3_10_2__, user8_.created_at as created_2_19_7_, user8_.created_by as created_3_19_7_, user8_.updated_at as updated_4_19_7_, user8_.updated_by as updated_5_19_7_, user8_.description as descript6_19_7_, user8_.email as email7_19_7_, user8_.login_id as login_id8_19_7_, user8_.login_password as login_pa9_19_7_, user8_.name_first as name_fi10_19_7_, user8_.name_last as name_la11_19_7_, user8_.nickname as nicknam12_19_7_, category10_.created_at as created_2_5_8_, category10_.created_by as created_3_5_8_, category10_.updated_at as updated_4_5_8_, category10_.updated_by as updated_5_5_8_, category10_.code as code6_5_8_, category10_.description as descript7_5_8_, category10_.language as language8_5_8_, category10_.lft as lft9_5_8_, category10_.name as name10_5_8_, category10_.parent_id as parent_12_5_8_, category10_.rgt as rgt11_5_8_, categories9_.post_id as post_id2_14_3__, categories9_.category_id as category1_14_3__, tag12_.created_at as created_2_18_9_, tag12_.created_by as created_3_18_9_, tag12_.updated_at as updated_4_18_9_, tag12_.updated_by as updated_5_18_9_, tag12_.language as language6_18_9_, tag12_.name as name7_18_9_, tags11_.post_id as post_id2_17_4__, tags11_.tag_id as tag_id1_17_4__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media1_ on page0_1_.cover_id=media1_.id left outer join page page2_ on page0_.parent_id=page2_.id left outer join post page2_1_ on page2_.id=page2_1_.id left outer join post_related_post relatedtop3_ on page0_.id=relatedtop3_.post_id left outer join post post4_ on relatedtop3_.related_id=post4_.id left outer join page post4_1_ on post4_.id=post4_1_.id left outer join article post4_2_ on post4_.id=post4_2_.id left outer join custom_field_value customfiel5_ on page0_.id=customfiel5_.post_id left outer join custom_field customfiel6_ on customfiel5_.custom_field_id=customfiel6_.id left outer join page children7_ on page0_.id=children7_.parent_id left outer join post children7_1_ on children7_.id=children7_1_.id left outer join user user8_ on page0_1_.author_id=user8_.id left outer join post_category categories9_ on page0_.id=categories9_.post_id left outer join category category10_ on categories9_.category_id=category10_.id left outer join post_tag tags11_ on page0_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where page0_.id=?
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpageids(pagesearchrequest) 
called| list org.wallride.service.pageservice.getpageids(pagesearchrequest) 
called| list com.sun.proxy..proxy192.searchforid(pagesearchrequest) 
called| list org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.pagerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(page) 
called| string org.wallride.support.postutils.path(page) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, page, boolean) 
called| map org.wallride.support.pageutils.getpaths(page) 
called| map org.wallride.support.pageutils.getpaths(page, boolean) 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpathpages(page, boolean) 
called| list org.wallride.service.pageservice.getpathpages(page, boolean) 
called| specification org.wallride.repository.pagespecifications.path(page, boolean) 
called| list com.sun.proxy..proxy192.findall(specification) 
called| predicate org.wallride.repository.pagespecifications.lambda$path$b2e51f7a$1(page, boolean, root, criteriaquery, criteriabuilder) 
sql|select page0_.id as id1_13_0_, media4_.id as id1_8_1_, page5_.id as id1_13_2_, children6_.id as id1_13_3_, user7_.id as id1_19_4_, category9_.id as id1_5_5_, tag11_.id as id1_18_6_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media4_.created_at as created_2_8_1_, media4_.created_by as created_3_8_1_, media4_.updated_at as updated_4_8_1_, media4_.updated_by as updated_5_8_1_, media4_.mime_type as mime_typ6_8_1_, media4_.original_name as original7_8_1_, page5_1_.created_at as created_2_13_2_, page5_1_.created_by as created_3_13_2_, page5_1_.updated_at as updated_4_13_2_, page5_1_.updated_by as updated_5_13_2_, page5_1_.author_id as author_17_13_2_, page5_1_.body as body6_13_2_, page5_1_.code as code7_13_2_, page5_1_.cover_id as cover_i18_13_2_, page5_1_.date as date8_13_2_, page5_1_.drafted_id as drafted19_13_2_, page5_1_.drafted_code as drafted_9_13_2_, page5_1_.language as languag10_13_2_, page5_1_.seo_description as seo_des11_13_2_, page5_1_.seo_keywords as seo_key12_13_2_, page5_1_.seo_title as seo_tit13_13_2_, page5_1_.status as status14_13_2_, page5_1_.title as title15_13_2_, page5_1_.views as views16_13_2_, page5_.lft as lft1_10_2_, page5_.parent_id as parent_i4_10_2_, page5_.rgt as rgt2_10_2_, children6_1_.created_at as created_2_13_3_, children6_1_.created_by as created_3_13_3_, children6_1_.updated_at as updated_4_13_3_, children6_1_.updated_by as updated_5_13_3_, children6_1_.author_id as author_17_13_3_, children6_1_.body as body6_13_3_, children6_1_.code as code7_13_3_, children6_1_.cover_id as cover_i18_13_3_, children6_1_.date as date8_13_3_, children6_1_.drafted_id as drafted19_13_3_, children6_1_.drafted_code as drafted_9_13_3_, children6_1_.language as languag10_13_3_, children6_1_.seo_description as seo_des11_13_3_, children6_1_.seo_keywords as seo_key12_13_3_, children6_1_.seo_title as seo_tit13_13_3_, children6_1_.status as status14_13_3_, children6_1_.title as title15_13_3_, children6_1_.views as views16_13_3_, children6_.lft as lft1_10_3_, children6_.parent_id as parent_i4_10_3_, children6_.rgt as rgt2_10_3_, children6_.parent_id as parent_i4_10_0__, children6_.id as id3_10_0__, user7_.created_at as created_2_19_4_, user7_.created_by as created_3_19_4_, user7_.updated_at as updated_4_19_4_, user7_.updated_by as updated_5_19_4_, user7_.description as descript6_19_4_, user7_.email as email7_19_4_, user7_.login_id as login_id8_19_4_, user7_.login_password as login_pa9_19_4_, user7_.name_first as name_fi10_19_4_, user7_.name_last as name_la11_19_4_, user7_.nickname as nicknam12_19_4_, category9_.created_at as created_2_5_5_, category9_.created_by as created_3_5_5_, category9_.updated_at as updated_4_5_5_, category9_.updated_by as updated_5_5_5_, category9_.code as code6_5_5_, category9_.description as descript7_5_5_, category9_.language as language8_5_5_, category9_.lft as lft9_5_5_, category9_.name as name10_5_5_, category9_.parent_id as parent_12_5_5_, category9_.rgt as rgt11_5_5_, categories8_.post_id as post_id2_14_1__, categories8_.category_id as category1_14_1__, tag11_.created_at as created_2_18_6_, tag11_.created_by as created_3_18_6_, tag11_.updated_at as updated_4_18_6_, tag11_.updated_by as updated_5_18_6_, tag11_.language as language6_18_6_, tag11_.name as name7_18_6_, tags10_.post_id as post_id2_17_2__, tags10_.tag_id as tag_id1_17_2__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media4_ on page0_1_.cover_id=media4_.id left outer join page page5_ on page0_.parent_id=page5_.id left outer join post page5_1_ on page5_.id=page5_1_.id left outer join page children6_ on page0_.id=children6_.parent_id left outer join post children6_1_ on children6_.id=children6_1_.id left outer join user user7_ on page0_1_.author_id=user7_.id left outer join post_category categories8_ on page0_.id=categories8_.post_id left outer join category category9_ on categories8_.category_id=category9_.id left outer join post_tag tags10_ on page0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id cross join page page1_ inner join post page1_1_ on page1_.id=page1_1_.id cross join page page2_ inner join post page2_1_ on page2_.id=page2_1_.id where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt) order by page0_.rgt-page0_.lft desc
called| string org.wallride.support.postutils.lambda$path$0(page) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.09453781512605042
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.12429971988795518

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.editdraft(string,long,string,model,redirectattributes)
method:org.wallride.service.pageservice.getdraftbyid(long)
method:org.wallride.repository.pagerepository.findone(specification)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page0_1_.drafted_id=? and page0_.id=(?)]

Syntactic Similarity:0.9994038749793791
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9994038749793792
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.saveaspublished(string,pageeditform,bindingresult,string,authorizeduser,redirectattributes)
method:org.wallride.service.pageservice.savepageaspublished(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]
method:org.wallride.service.pageservice.getdraftbyid(long)
method:org.wallride.repository.pagerepository.findone(specification)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page0_1_.drafted_id=? and page0_.id=(?)]
method:org.wallride.service.pageservice.savepage(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.9972437624298921
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9972437624298922
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.saveasdraft(string,pageeditform,bindingresult,model,authorizeduser)
method:org.wallride.service.pageservice.savepageasdraft(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]
method:org.wallride.repository.pagerepository.findone(specification)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page0_1_.drafted_id=? and page0_.id=(?)]
method:org.wallride.service.pageservice.savepage(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.9972437624298921
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9972437624298922
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagetreecontroller.partpageeditdialog(string,long,model)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]
method:org.wallride.service.pageservice.getpagebyid(long,string)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.9967833538235888
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9967833538235888
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagetreecontroller.index(string,model)
method:org.wallride.support.pageutils.getnodes(boolean)
method:org.wallride.service.pageservice.getpages(pagesearchrequest)
method:org.wallride.service.pageservice.getpages(pagesearchrequest,pageable)
method:org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest,pageable)
[select from page inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag left outer join page left outer join post left outer join page left outer join post where (page.id in (?))]

Syntactic Similarity:0.9955391857472388
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9955391857472389
Path matching:False
Request matching:False



======================================= 4 given SQL query ===========================================
Given individual SQL query: select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then 1 when post3_2_.id is not null then 2 when post3_.id is not null then 0 end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then 1 when post9_2_.id is not null then 2 when post9_.id is not null then 0 end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
Execution time of Given individual SQL query (slow) : 140700ns
Pre-processed SQL query : select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user user6 left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebycode(string, string) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebycode(string, string) 
called| article com.sun.proxy..proxy184.findonebycodeandlanguage(string, string) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_1_.code=? and article0_1_.language=?
called| page org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20.getcomments(commentsearchrequest, pageable) 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| int org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.getindex(signature) 
called| int org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20..fastclassbyspringcglib..f1421a15.getindex(signature) 
called| object org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.invoke(int, object, object[]) 
called| page org.wallride.service.commentservice.getcomments(commentsearchrequest, pageable) 
called| page com.sun.proxy..proxy189.search(commentsearchrequest, pageable) 
called| page org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest, pageable) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| locale org.wallride.web.support.bloglanguagelocaleresolver.resolvelocale(httpservletrequest) 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
after rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| iexpressionobjectfactory org.wallride.autoconfigure.wallridethymeleafdialect.getexpressionobjectfactory() 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.metadescription(post) 
called| string org.wallride.web.support.posts.metakeywords(post) 
called| string org.wallride.web.support.posts.title(post) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| pages org.wallride.autoconfigure.wallrideexpressionobjectfactory.createpages(iexpressioncontext) 
called| list org.wallride.web.support.pages.getnodes() 
called| list org.wallride.support.pageutils.getnodes() 
called| list org.wallride.support.pageutils.getnodes(boolean) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest) 
called| page org.wallride.service.pageservice.getpages(pagesearchrequest, pageable) 
called| page com.sun.proxy..proxy192.search(pagesearchrequest, pageable) 
called| page org.wallride.repository.pagerepositoryimpl.search(pagesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
sql|select this_.id as id1_13_11_, this_1_.created_at as created_2_13_11_, this_1_.created_by as created_3_13_11_, this_1_.updated_at as updated_4_13_11_, this_1_.updated_by as updated_5_13_11_, this_1_.author_id as author_17_13_11_, this_1_.body as body6_13_11_, this_1_.code as code7_13_11_, this_1_.cover_id as cover_i18_13_11_, this_1_.date as date8_13_11_, this_1_.drafted_id as drafted19_13_11_, this_1_.drafted_code as drafted_9_13_11_, this_1_.language as languag10_13_11_, this_1_.seo_description as seo_des11_13_11_, this_1_.seo_keywords as seo_key12_13_11_, this_1_.seo_title as seo_tit13_13_11_, this_1_.status as status14_13_11_, this_1_.title as title15_13_11_, this_1_.views as views16_13_11_, this_.lft as lft1_10_11_, this_.parent_id as parent_i4_10_11_, this_.rgt as rgt2_10_11_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_13_, category4_.id as category1_14_13_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_14_, customfiel7_.id as id1_1_14_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_15_, tag12_.id as tag_id1_17_15_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_, children13_.parent_id as parent_i4_10_16_, children13_.id as id3_10_16_, children13_.id as id1_13_9_, children13_1_.created_at as created_2_13_9_, children13_1_.created_by as created_3_13_9_, children13_1_.updated_at as updated_4_13_9_, children13_1_.updated_by as updated_5_13_9_, children13_1_.author_id as author_17_13_9_, children13_1_.body as body6_13_9_, children13_1_.code as code7_13_9_, children13_1_.cover_id as cover_i18_13_9_, children13_1_.date as date8_13_9_, children13_1_.drafted_id as drafted19_13_9_, children13_1_.drafted_code as drafted_9_13_9_, children13_1_.language as languag10_13_9_, children13_1_.seo_description as seo_des11_13_9_, children13_1_.seo_keywords as seo_key12_13_9_, children13_1_.seo_title as seo_tit13_13_9_, children13_1_.status as status14_13_9_, children13_1_.title as title15_13_9_, children13_1_.views as views16_13_9_, children13_.lft as lft1_10_9_, children13_.parent_id as parent_i4_10_9_, children13_.rgt as rgt2_10_9_, page14_.id as id1_13_10_, page14_1_.created_at as created_2_13_10_, page14_1_.created_by as created_3_13_10_, page14_1_.updated_at as updated_4_13_10_, page14_1_.updated_by as updated_5_13_10_, page14_1_.author_id as author_17_13_10_, page14_1_.body as body6_13_10_, page14_1_.code as code7_13_10_, page14_1_.cover_id as cover_i18_13_10_, page14_1_.date as date8_13_10_, page14_1_.drafted_id as drafted19_13_10_, page14_1_.drafted_code as drafted_9_13_10_, page14_1_.language as languag10_13_10_, page14_1_.seo_description as seo_des11_13_10_, page14_1_.seo_keywords as seo_key12_13_10_, page14_1_.seo_title as seo_tit13_13_10_, page14_1_.status as status14_13_10_, page14_1_.title as title15_13_10_, page14_1_.views as views16_13_10_, page14_.lft as lft1_10_10_, page14_.parent_id as parent_i4_10_10_, page14_.rgt as rgt2_10_10_ from page this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id left outer join page children13_ on this_.id=children13_.parent_id left outer join post children13_1_ on children13_.id=children13_1_.id left outer join page page14_ on this_.parent_id=page14_.id left outer join post page14_1_ on page14_.id=page14_1_.id where (this_.id in (?, ?))
called| void org.wallride.support.pageutils.createnode(treenode, collection) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| users org.wallride.autoconfigure.wallrideexpressionobjectfactory.createusers(iexpressioncontext) 
called| string org.wallride.web.support.users.path(user) 
called| string org.wallride.web.support.users.path(uricomponentsbuilder, user, boolean) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| string org.wallride.web.support.bloglanguagerewritematch.getmatchingurl() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| string org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.gettarget() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.islast() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.dorewrite(httpservletrequest, httpservletresponse, filterchain) 
called| boolean org.wallride.web.support.bloglanguagerewritematch.execute(httpservletrequest, httpservletresponse) 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean org.wallride.web.support.authorizedusermethodargumentresolver.supportsparameter(methodparameter) 
called| boolean org.wallride.web.support.bloglanguagemethodargumentresolver.supportsparameter(methodparameter) 
called| object org.wallride.web.support.bloglanguagemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.article.articledescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 4 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebycode(string, string) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebycode(string, string) 
called| article com.sun.proxy..proxy184.findonebycodeandlanguage(string, string) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_1_.code=? and article0_1_.language=?
called| page org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20.getcomments(commentsearchrequest, pageable) 
called| object org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.invoke(int, object, object[]) 
called| page org.wallride.service.commentservice.getcomments(commentsearchrequest, pageable) 
called| page com.sun.proxy..proxy189.search(commentsearchrequest, pageable) 
called| page org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest, pageable) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_6_6_, this_.created_at as created_2_6_6_, this_.created_by as created_3_6_6_, this_.updated_at as updated_4_6_6_, this_.updated_by as updated_5_6_6_, this_.approved as approved6_6_6_, this_.author_id as author_10_6_6_, this_.author_name as author_n7_6_6_, this_.content as content8_6_6_, this_.date as date9_6_6_, this_.post_id as post_id11_6_6_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, post3_.id as id1_13_1_, post3_.created_at as created_2_13_1_, post3_.created_by as created_3_13_1_, post3_.updated_at as updated_4_13_1_, post3_.updated_by as updated_5_13_1_, post3_.author_id as author_17_13_1_, post3_.body as body6_13_1_, post3_.code as code7_13_1_, post3_.cover_id as cover_i18_13_1_, post3_.date as date8_13_1_, post3_.drafted_id as drafted19_13_1_, post3_.drafted_code as drafted_9_13_1_, post3_.language as languag10_13_1_, post3_.seo_description as seo_des11_13_1_, post3_.seo_keywords as seo_key12_13_1_, post3_.seo_title as seo_tit13_13_1_, post3_.status as status14_13_1_, post3_.title as title15_13_1_, post3_.views as views16_13_1_, post3_1_.lft as lft1_10_1_, post3_1_.parent_id as parent_i4_10_1_, post3_1_.rgt as rgt2_10_1_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_1_, user4_.id as id1_19_2_, user4_.created_at as created_2_19_2_, user4_.created_by as created_3_19_2_, user4_.updated_at as updated_4_19_2_, user4_.updated_by as updated_5_19_2_, user4_.description as descript6_19_2_, user4_.email as email7_19_2_, user4_.login_id as login_id8_19_2_, user4_.login_password as login_pa9_19_2_, user4_.name_first as name_fi10_19_2_, user4_.name_last as name_la11_19_2_, user4_.nickname as nicknam12_19_2_, media5_.id as id1_8_3_, media5_.created_at as created_2_8_3_, media5_.created_by as created_3_8_3_, media5_.updated_at as updated_4_8_3_, media5_.updated_by as updated_5_8_3_, media5_.mime_type as mime_typ6_8_3_, media5_.original_name as original7_8_3_, post6_.id as id1_13_4_, post6_.created_at as created_2_13_4_, post6_.created_by as created_3_13_4_, post6_.updated_at as updated_4_13_4_, post6_.updated_by as updated_5_13_4_, post6_.author_id as author_17_13_4_, post6_.body as body6_13_4_, post6_.code as code7_13_4_, post6_.cover_id as cover_i18_13_4_, post6_.date as date8_13_4_, post6_.drafted_id as drafted19_13_4_, post6_.drafted_code as drafted_9_13_4_, post6_.language as languag10_13_4_, post6_.seo_description as seo_des11_13_4_, post6_.seo_keywords as seo_key12_13_4_, post6_.seo_title as seo_tit13_13_4_, post6_.status as status14_13_4_, post6_.title as title15_13_4_, post6_.views as views16_13_4_, post6_1_.lft as lft1_10_4_, post6_1_.parent_id as parent_i4_10_4_, post6_1_.rgt as rgt2_10_4_, case when post6_1_.id is not null then ? when post6_2_.id is not null then ? when post6_.id is not null then ? end as clazz_4_, page7_.id as id1_13_5_, page7_1_.created_at as created_2_13_5_, page7_1_.created_by as created_3_13_5_, page7_1_.updated_at as updated_4_13_5_, page7_1_.updated_by as updated_5_13_5_, page7_1_.author_id as author_17_13_5_, page7_1_.body as body6_13_5_, page7_1_.code as code7_13_5_, page7_1_.cover_id as cover_i18_13_5_, page7_1_.date as date8_13_5_, page7_1_.drafted_id as drafted19_13_5_, page7_1_.drafted_code as drafted_9_13_5_, page7_1_.language as languag10_13_5_, page7_1_.seo_description as seo_des11_13_5_, page7_1_.seo_keywords as seo_key12_13_5_, page7_1_.seo_title as seo_tit13_13_5_, page7_1_.status as status14_13_5_, page7_1_.title as title15_13_5_, page7_1_.views as views16_13_5_, page7_.lft as lft1_10_5_, page7_.parent_id as parent_i4_10_5_, page7_.rgt as rgt2_10_5_ from comment this_ left outer join user user2_ on this_.author_id=user2_.id inner join post post3_ on this_.post_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join user user4_ on post3_.author_id=user4_.id left outer join media media5_ on post3_.cover_id=media5_.id left outer join post post6_ on post3_.drafted_id=post6_.id left outer join page post6_1_ on post6_.id=post6_1_.id left outer join article post6_2_ on post6_.id=post6_2_.id left outer join page page7_ on post3_1_.parent_id=page7_.id left outer join post page7_1_ on page7_.id=page7_1_.id where (this_.id in (?, ?))
called| locale org.wallride.web.support.bloglanguagelocaleresolver.resolvelocale(httpservletrequest) 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
after rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.metadescription(post) 
called| string org.wallride.web.support.posts.metakeywords(post) 
called| string org.wallride.web.support.posts.title(post) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| pages org.wallride.autoconfigure.wallrideexpressionobjectfactory.createpages(iexpressioncontext) 
called| list org.wallride.web.support.pages.getnodes() 
called| list org.wallride.support.pageutils.getnodes() 
called| list org.wallride.support.pageutils.getnodes(boolean) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest) 
called| void org.wallride.support.pageutils.createnode(treenode, collection) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| users org.wallride.autoconfigure.wallrideexpressionobjectfactory.createusers(iexpressioncontext) 
called| string org.wallride.web.support.users.path(user) 
called| string org.wallride.web.support.users.path(uricomponentsbuilder, user, boolean) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| string org.wallride.support.authorizeduser.getusername() 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| string org.wallride.web.support.bloglanguagerewritematch.getmatchingurl() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| string org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.gettarget() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.islast() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.dorewrite(httpservletrequest, httpservletresponse, filterchain) 
called| boolean org.wallride.web.support.bloglanguagerewritematch.execute(httpservletrequest, httpservletresponse) 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean org.wallride.web.support.authorizedusermethodargumentresolver.supportsparameter(methodparameter) 
called| boolean org.wallride.web.support.bloglanguagemethodargumentresolver.supportsparameter(methodparameter) 
called| object org.wallride.web.support.bloglanguagemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
path_ap:0.5267206477732793
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 2]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4]
request_ap:0.5123911176542755

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articledescribecontroller.describe(string,long,string,model,redirectattributes)
method:org.wallride.service.articleservice.getarticlebyid(long)
method:org.wallride.repository.articlerepository.findonebyid(long)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id]
method:org.wallride.service.articleservice.getarticleids(articlesearchrequest)
method:org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest)
[]

Syntactic Similarity:0.9966564262032666
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9966564262032667
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articledescribecontroller.describe(string,long,string,model,redirectattributes)
method:org.wallride.service.articleservice.getarticlebyid(long)
method:org.wallride.repository.articlerepository.findonebyid(long)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id]

Syntactic Similarity:0.9966564262032666
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9966564262032667
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articleeditcontroller.editdraft(string,long,string,model,redirectattributes)
method:org.wallride.service.articleservice.getdraftbyid(long)
method:org.wallride.repository.articlerepository.findone(specification)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where  article.drafted_id = ?]

Syntactic Similarity:0.9966260126428945
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9966260126428945
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articleindexcontroller.day(int,int,int,pageable,bloglanguage,httpservletrequest,model)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.99480025596132
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.99480025596132
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlesearchcontroller.search(string,articlesearchform,bindingresult,pageable,model,httpservletrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.99480025596132
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.99480025596132
Path matching:False
Request matching:False



======================================= 5 given SQL query ===========================================
Given individual SQL query: select customfiel0_.id as id1_0_, customfiel0_.created_at as created_2_0_, customfiel0_.created_by as created_3_0_, customfiel0_.updated_at as updated_4_0_, customfiel0_.updated_by as updated_5_0_, customfiel0_.code as code6_0_, customfiel0_.default_value as default_7_0_, customfiel0_.description as descript8_0_, customfiel0_.field_type as field_ty9_0_, customfiel0_.idx as idx10_0_, customfiel0_.language as languag11_0_, customfiel0_.name as name12_0_, options1_.custom_field_id as custom_f1_7_0__, options1_.language as language2_7_0__, options1_.name as name3_7_0__, options1_.idx as idx4_0__ from custom_field customfiel0_ left outer join custom_field_option options1_ on customfiel0_.id=options1_.custom_field_id where customfiel0_.id=? and customfiel0_.language=?
Execution time of Given individual SQL query (slow) : 139100ns
Pre-processed SQL query : select from customfield left outer join customfieldoption options where customfiel.id=? and customfiel.language=? 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.customfield.customfieldbulkdeletecontroller.delete(customfieldbulkdeleteform, bindingresult, string, authorizeduser, redirectattributes) 
called| string org.wallride.web.controller.admin.customfield.customfieldbulkdeletecontroller.delete(customfieldbulkdeleteform, bindingresult, string, authorizeduser, redirectattributes) 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| boolean org.wallride.web.controller.admin.customfield.customfieldbulkdeleteform.isconfirmed() 
called| customfieldbulkdeleterequest org.wallride.web.controller.admin.customfield.customfieldbulkdeleteform.buildcustomfieldbulkdeleterequest() 
called| list org.wallride.service.customfieldservice..enhancerbyspringcglib..80b18967.bulkdeletecustomfield(customfieldbulkdeleterequest, bindingresult) 
called| int org.wallride.service.customfieldservice..fastclassbyspringcglib..110c807.getindex(signature) 
called| int org.wallride.service.customfieldservice..enhancerbyspringcglib..80b18967..fastclassbyspringcglib..3501d01b.getindex(signature) 
called| object org.wallride.service.customfieldservice..fastclassbyspringcglib..110c807.invoke(int, object, object[]) 
called| list org.wallride.service.customfieldservice.bulkdeletecustomfield(customfieldbulkdeleterequest, bindingresult) 
called| customfield org.wallride.service.customfieldservice.deletecustomfield(customfielddeleterequest, bindingresult) 
called| void com.sun.proxy..proxy191.lock(long) 
called| void org.wallride.repository.customfieldrepositoryimpl.lock(long) 
sql|select customfiel0_.id as col_0_0_ from custom_field customfiel0_ where customfiel0_.id=? for update
called| customfield com.sun.proxy..proxy191.findonebyidandlanguage(long, string) 
sql|select customfiel0_.id as id1_0_, customfiel0_.created_at as created_2_0_, customfiel0_.created_by as created_3_0_, customfiel0_.updated_at as updated_4_0_, customfiel0_.updated_by as updated_5_0_, customfiel0_.code as code6_0_, customfiel0_.default_value as default_7_0_, customfiel0_.description as descript8_0_, customfiel0_.field_type as field_ty9_0_, customfiel0_.idx as idx10_0_, customfiel0_.language as languag11_0_, customfiel0_.name as name12_0_, options1_.custom_field_id as custom_f1_7_0__, options1_.language as language2_7_0__, options1_.name as name3_7_0__, options1_.idx as idx4_0__ from custom_field customfiel0_ left outer join custom_field_option options1_ on customfiel0_.id=options1_.custom_field_id where customfiel0_.id=? and customfiel0_.language=?
called| void com.sun.proxy..proxy191.delete(object) 
sql|select customfiel0_.custom_field_id as custom_11_1_0_, customfiel0_.id as id1_1_0_, customfiel0_.id as id1_1_1_, customfiel0_.created_at as created_2_1_1_, customfiel0_.created_by as created_3_1_1_, customfiel0_.updated_at as updated_4_1_1_, customfiel0_.updated_by as updated_5_1_1_, customfiel0_.custom_field_id as custom_11_1_1_, customfiel0_.date_value as date_val6_1_1_, customfiel0_.datetime_value as datetime7_1_1_, customfiel0_.number_value as number_v8_1_1_, customfiel0_.post_id as post_id12_1_1_, customfiel0_.string_value as string_v9_1_1_, customfiel0_.text_value as text_va10_1_1_ from custom_field_value customfiel0_ where customfiel0_.custom_field_id=?
sql|delete from custom_field where id=?
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
after rest| string org.wallride.web.controller.admin.customfield.customfieldbulkdeletecontroller.delete(customfieldbulkdeleteform, bindingresult, string, authorizeduser, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.query(string) 
called| customfieldsearchform org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.setupcustomfieldsearchform() 
called| boolean org.wallride.web.support.authorizedusermethodargumentresolver.supportsparameter(methodparameter) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 0, 0]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
path_ap:0.1111111111111111
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 0, 0]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0]
request_ap:0.1111111111111111

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagepreviewcontroller.preview(string,pagepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.mediaservice.getmedia(string)
method:org.wallride.repository.mediarepository.findonebyid(string)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.3832662369421882
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3832662369421882
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagepreviewcontroller.preview(string,pagepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.3832662369421882
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3832662369421882
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlepreviewcontroller.preview(string,articlepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.mediaservice.getmedia(string)
method:org.wallride.repository.mediarepository.findonebyid(string)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.3832662369421882
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3832662369421882
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlepreviewcontroller.preview(string,articlepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.3832662369421882
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.3832662369421882
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.customfield.customfieldcreatecontroller.save(string,customfieldcreateform,bindingresult,string,authorizeduser,redirectattributes)
method:org.wallride.service.customfieldservice.createcustomfield(customfieldcreaterequest,authorizeduser)
method:org.wallride.repository.customfieldrepository.findonebycodeandlanguage(string,string)
[select * from customfield custom_field where custom_field.code = :code and custom_field.language = :language ]

Syntactic Similarity:0.2788078230317634
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2788078230317634
Path matching:False
Request matching:False



======================================= 6 given SQL query ===========================================
Given individual SQL query: select this_.id as id1_0_0_, this_.created_at as created_2_0_0_, this_.created_by as created_3_0_0_, this_.updated_at as updated_4_0_0_, this_.updated_by as updated_5_0_0_, this_.code as code6_0_0_, this_.default_value as default_7_0_0_, this_.description as descript8_0_0_, this_.field_type as field_ty9_0_0_, this_.idx as idx10_0_0_, this_.language as languag11_0_0_, this_.name as name12_0_0_, options2_.custom_field_id as custom_f1_7_2_, options2_.language as language2_7_2_, options2_.name as name3_7_2_, options2_.idx as idx4_2_ from custom_field this_ left outer join custom_field_option options2_ on this_.id=options2_.custom_field_id where (this_.id in (?, ?))
Execution time of Given individual SQL query (slow) : 131600ns
Pre-processed SQL query : select from customfield left outer join customfieldoption options where (this_.id in (?, ?)) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| customfieldsearchrequest org.wallride.web.controller.admin.customfield.customfieldsearchform.tocustomfieldsearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.customfield.customfieldsearchform.getkeyword() 
called| page org.wallride.service.customfieldservice..enhancerbyspringcglib..80b18967.getcustomfields(customfieldsearchrequest, pageable) 
called| int org.wallride.service.customfieldservice..fastclassbyspringcglib..110c807.getindex(signature) 
called| int org.wallride.service.customfieldservice..enhancerbyspringcglib..80b18967..fastclassbyspringcglib..3501d01b.getindex(signature) 
called| object org.wallride.service.customfieldservice..fastclassbyspringcglib..110c807.invoke(int, object, object[]) 
called| page org.wallride.service.customfieldservice.getcustomfields(customfieldsearchrequest, pageable) 
called| page com.sun.proxy..proxy191.search(customfieldsearchrequest, pageable) 
called| page org.wallride.repository.customfieldrepositoryimpl.search(customfieldsearchrequest, pageable) 
called| fulltextquery org.wallride.repository.customfieldrepositoryimpl.buildfulltextquery(customfieldsearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_0_0_, this_.created_at as created_2_0_0_, this_.created_by as created_3_0_0_, this_.updated_at as updated_4_0_0_, this_.updated_by as updated_5_0_0_, this_.code as code6_0_0_, this_.default_value as default_7_0_0_, this_.description as descript8_0_0_, this_.field_type as field_ty9_0_0_, this_.idx as idx10_0_0_, this_.language as languag11_0_0_, this_.name as name12_0_0_, options2_.custom_field_id as custom_f1_7_2_, options2_.language as language2_7_2_, options2_.name as name3_7_2_, options2_.idx as idx4_2_ from custom_field this_ left outer join custom_field_option options2_ on this_.id=options2_.custom_field_id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| customfieldsearchrequest org.wallride.web.controller.admin.customfield.customfieldsearchform.tocustomfieldsearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.customfield.customfieldsearchform.getkeyword() 
called| page org.wallride.service.customfieldservice..enhancerbyspringcglib..80b18967.getcustomfields(customfieldsearchrequest, pageable) 
called| object org.wallride.service.customfieldservice..fastclassbyspringcglib..110c807.invoke(int, object, object[]) 
called| page org.wallride.service.customfieldservice.getcustomfields(customfieldsearchrequest, pageable) 
called| page com.sun.proxy..proxy191.search(customfieldsearchrequest, pageable) 
called| page org.wallride.repository.customfieldrepositoryimpl.search(customfieldsearchrequest, pageable) 
called| fulltextquery org.wallride.repository.customfieldrepositoryimpl.buildfulltextquery(customfieldsearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_0_0_, this_.created_at as created_2_0_0_, this_.created_by as created_3_0_0_, this_.updated_at as updated_4_0_0_, this_.updated_by as updated_5_0_0_, this_.code as code6_0_0_, this_.default_value as default_7_0_0_, this_.description as descript8_0_0_, this_.field_type as field_ty9_0_0_, this_.idx as idx10_0_0_, this_.language as languag11_0_0_, this_.name as name12_0_0_, options2_.custom_field_id as custom_f1_7_2_, options2_.language as language2_7_2_, options2_.name as name3_7_2_, options2_.idx as idx4_2_ from custom_field this_ left outer join custom_field_option options2_ on this_.id=options2_.custom_field_id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string, customfieldsearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.customfield.customfieldsearchcontroller.search(string,customfieldsearchform,bindingresult,pageable,model,httpservletrequest)
method:org.wallride.service.customfieldservice.getcustomfields(customfieldsearchrequest,pageable)
method:org.wallride.repository.customfieldrepositoryimpl.search(customfieldsearchrequest,pageable)
[select * from customfield custom_field where custom_field.id in ()]

Syntactic Similarity:0.46621022992988953
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4662102299298896
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagepreviewcontroller.preview(string,pagepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.mediaservice.getmedia(string)
method:org.wallride.repository.mediarepository.findonebyid(string)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.23000455876118917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2300045587611892
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagepreviewcontroller.preview(string,pagepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.23000455876118917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2300045587611892
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlepreviewcontroller.preview(string,articlepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.mediaservice.getmedia(string)
method:org.wallride.repository.mediarepository.findonebyid(string)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.23000455876118917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2300045587611892
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlepreviewcontroller.preview(string,articlepreviewform,bindingresult,authorizeduser,model,httpservletrequest,httpservletresponse)
method:org.wallride.service.customfieldservice.getcustomfieldbyid(long,string)
method:org.wallride.repository.customfieldrepository.findonebyidandlanguage(long,string)
[select * from customfield custom_field where custom_field.id = :id and custom_field.language = :language ]

Syntactic Similarity:0.23000455876118917
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.2300045587611892
Path matching:False
Request matching:False



======================================= 7 given SQL query ===========================================
Given individual SQL query: select page0_.id as id1_13_0_, media4_.id as id1_8_1_, page5_.id as id1_13_2_, children6_.id as id1_13_3_, user7_.id as id1_19_4_, category9_.id as id1_5_5_, tag11_.id as id1_18_6_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media4_.created_at as created_2_8_1_, media4_.created_by as created_3_8_1_, media4_.updated_at as updated_4_8_1_, media4_.updated_by as updated_5_8_1_, media4_.mime_type as mime_typ6_8_1_, media4_.original_name as original7_8_1_, page5_1_.created_at as created_2_13_2_, page5_1_.created_by as created_3_13_2_, page5_1_.updated_at as updated_4_13_2_, page5_1_.updated_by as updated_5_13_2_, page5_1_.author_id as author_17_13_2_, page5_1_.body as body6_13_2_, page5_1_.code as code7_13_2_, page5_1_.cover_id as cover_i18_13_2_, page5_1_.date as date8_13_2_, page5_1_.drafted_id as drafted19_13_2_, page5_1_.drafted_code as drafted_9_13_2_, page5_1_.language as languag10_13_2_, page5_1_.seo_description as seo_des11_13_2_, page5_1_.seo_keywords as seo_key12_13_2_, page5_1_.seo_title as seo_tit13_13_2_, page5_1_.status as status14_13_2_, page5_1_.title as title15_13_2_, page5_1_.views as views16_13_2_, page5_.lft as lft1_10_2_, page5_.parent_id as parent_i4_10_2_, page5_.rgt as rgt2_10_2_, children6_1_.created_at as created_2_13_3_, children6_1_.created_by as created_3_13_3_, children6_1_.updated_at as updated_4_13_3_, children6_1_.updated_by as updated_5_13_3_, children6_1_.author_id as author_17_13_3_, children6_1_.body as body6_13_3_, children6_1_.code as code7_13_3_, children6_1_.cover_id as cover_i18_13_3_, children6_1_.date as date8_13_3_, children6_1_.drafted_id as drafted19_13_3_, children6_1_.drafted_code as drafted_9_13_3_, children6_1_.language as languag10_13_3_, children6_1_.seo_description as seo_des11_13_3_, children6_1_.seo_keywords as seo_key12_13_3_, children6_1_.seo_title as seo_tit13_13_3_, children6_1_.status as status14_13_3_, children6_1_.title as title15_13_3_, children6_1_.views as views16_13_3_, children6_.lft as lft1_10_3_, children6_.parent_id as parent_i4_10_3_, children6_.rgt as rgt2_10_3_, children6_.parent_id as parent_i4_10_0__, children6_.id as id3_10_0__, user7_.created_at as created_2_19_4_, user7_.created_by as created_3_19_4_, user7_.updated_at as updated_4_19_4_, user7_.updated_by as updated_5_19_4_, user7_.description as descript6_19_4_, user7_.email as email7_19_4_, user7_.login_id as login_id8_19_4_, user7_.login_password as login_pa9_19_4_, user7_.name_first as name_fi10_19_4_, user7_.name_last as name_la11_19_4_, user7_.nickname as nicknam12_19_4_, category9_.created_at as created_2_5_5_, category9_.created_by as created_3_5_5_, category9_.updated_at as updated_4_5_5_, category9_.updated_by as updated_5_5_5_, category9_.code as code6_5_5_, category9_.description as descript7_5_5_, category9_.language as language8_5_5_, category9_.lft as lft9_5_5_, category9_.name as name10_5_5_, category9_.parent_id as parent_12_5_5_, category9_.rgt as rgt11_5_5_, categories8_.post_id as post_id2_14_1__, categories8_.category_id as category1_14_1__, tag11_.created_at as created_2_18_6_, tag11_.created_by as created_3_18_6_, tag11_.updated_at as updated_4_18_6_, tag11_.updated_by as updated_5_18_6_, tag11_.language as language6_18_6_, tag11_.name as name7_18_6_, tags10_.post_id as post_id2_17_2__, tags10_.tag_id as tag_id1_17_2__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media4_ on page0_1_.cover_id=media4_.id left outer join page page5_ on page0_.parent_id=page5_.id left outer join post page5_1_ on page5_.id=page5_1_.id left outer join page children6_ on page0_.id=children6_.parent_id left outer join post children6_1_ on children6_.id=children6_1_.id left outer join user user7_ on page0_1_.author_id=user7_.id left outer join post_category categories8_ on page0_.id=categories8_.post_id left outer join category category9_ on categories8_.category_id=category9_.id left outer join post_tag tags10_ on page0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id cross join page page1_ inner join post page1_1_ on page1_.id=page1_1_.id cross join page page2_ inner join post page2_1_ on page2_.id=page2_1_.id where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=5 and page3_.rgt>=6) and page2_.id=20012 and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt) order by page0_.rgt-page0_.lft desc
Execution time of Given individual SQL query (slow) : 125700ns
Pre-processed SQL query : select from page inner join post left outer join media left outer join page left outer join post left outer join page left outer join post left outer join user user7 left outer join postcategory left outer join category left outer join posttag left outer join tag cross join page inner join post cross join page inner join post where page.language=? and page.status=? and page.id=(select page.id from page page inner join post page on page.id=page.id where page.language=? and (page.parent_id is null) and page.lft<=? and page.rgt>=?) and page.id= and (page.lft between page.lft and page.rgt) and (page.lft between page.lft and page.rgt)  order by 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpagebyid(long) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpagebyid(long) 
called| page com.sun.proxy..proxy192.findonebyid(long) 
sql|select page0_.id as id1_13_0_, media1_.id as id1_8_1_, page2_.id as id1_13_2_, post4_.id as id1_13_3_, customfiel5_.id as id1_1_4_, customfiel6_.id as id1_0_5_, children7_.id as id1_13_6_, user8_.id as id1_19_7_, category10_.id as id1_5_8_, tag12_.id as id1_18_9_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, page2_1_.created_at as created_2_13_2_, page2_1_.created_by as created_3_13_2_, page2_1_.updated_at as updated_4_13_2_, page2_1_.updated_by as updated_5_13_2_, page2_1_.author_id as author_17_13_2_, page2_1_.body as body6_13_2_, page2_1_.code as code7_13_2_, page2_1_.cover_id as cover_i18_13_2_, page2_1_.date as date8_13_2_, page2_1_.drafted_id as drafted19_13_2_, page2_1_.drafted_code as drafted_9_13_2_, page2_1_.language as languag10_13_2_, page2_1_.seo_description as seo_des11_13_2_, page2_1_.seo_keywords as seo_key12_13_2_, page2_1_.seo_title as seo_tit13_13_2_, page2_1_.status as status14_13_2_, page2_1_.title as title15_13_2_, page2_1_.views as views16_13_2_, page2_.lft as lft1_10_2_, page2_.parent_id as parent_i4_10_2_, page2_.rgt as rgt2_10_2_, post4_.created_at as created_2_13_3_, post4_.created_by as created_3_13_3_, post4_.updated_at as updated_4_13_3_, post4_.updated_by as updated_5_13_3_, post4_.author_id as author_17_13_3_, post4_.body as body6_13_3_, post4_.code as code7_13_3_, post4_.cover_id as cover_i18_13_3_, post4_.date as date8_13_3_, post4_.drafted_id as drafted19_13_3_, post4_.drafted_code as drafted_9_13_3_, post4_.language as languag10_13_3_, post4_.seo_description as seo_des11_13_3_, post4_.seo_keywords as seo_key12_13_3_, post4_.seo_title as seo_tit13_13_3_, post4_.status as status14_13_3_, post4_.title as title15_13_3_, post4_.views as views16_13_3_, post4_1_.lft as lft1_10_3_, post4_1_.parent_id as parent_i4_10_3_, post4_1_.rgt as rgt2_10_3_, case when post4_1_.id is not null then ? when post4_2_.id is not null then ? when post4_.id is not null then ? end as clazz_3_, relatedtop3_.post_id as post_id1_16_0__, relatedtop3_.related_id as related_2_16_0__, customfiel5_.created_at as created_2_1_4_, customfiel5_.created_by as created_3_1_4_, customfiel5_.updated_at as updated_4_1_4_, customfiel5_.updated_by as updated_5_1_4_, customfiel5_.custom_field_id as custom_11_1_4_, customfiel5_.date_value as date_val6_1_4_, customfiel5_.datetime_value as datetime7_1_4_, customfiel5_.number_value as number_v8_1_4_, customfiel5_.post_id as post_id12_1_4_, customfiel5_.string_value as string_v9_1_4_, customfiel5_.text_value as text_va10_1_4_, customfiel5_.post_id as post_id12_1_1__, customfiel5_.id as id1_1_1__, customfiel6_.created_at as created_2_0_5_, customfiel6_.created_by as created_3_0_5_, customfiel6_.updated_at as updated_4_0_5_, customfiel6_.updated_by as updated_5_0_5_, customfiel6_.code as code6_0_5_, customfiel6_.default_value as default_7_0_5_, customfiel6_.description as descript8_0_5_, customfiel6_.field_type as field_ty9_0_5_, customfiel6_.idx as idx10_0_5_, customfiel6_.language as languag11_0_5_, customfiel6_.name as name12_0_5_, children7_1_.created_at as created_2_13_6_, children7_1_.created_by as created_3_13_6_, children7_1_.updated_at as updated_4_13_6_, children7_1_.updated_by as updated_5_13_6_, children7_1_.author_id as author_17_13_6_, children7_1_.body as body6_13_6_, children7_1_.code as code7_13_6_, children7_1_.cover_id as cover_i18_13_6_, children7_1_.date as date8_13_6_, children7_1_.drafted_id as drafted19_13_6_, children7_1_.drafted_code as drafted_9_13_6_, children7_1_.language as languag10_13_6_, children7_1_.seo_description as seo_des11_13_6_, children7_1_.seo_keywords as seo_key12_13_6_, children7_1_.seo_title as seo_tit13_13_6_, children7_1_.status as status14_13_6_, children7_1_.title as title15_13_6_, children7_1_.views as views16_13_6_, children7_.lft as lft1_10_6_, children7_.parent_id as parent_i4_10_6_, children7_.rgt as rgt2_10_6_, children7_.parent_id as parent_i4_10_2__, children7_.id as id3_10_2__, user8_.created_at as created_2_19_7_, user8_.created_by as created_3_19_7_, user8_.updated_at as updated_4_19_7_, user8_.updated_by as updated_5_19_7_, user8_.description as descript6_19_7_, user8_.email as email7_19_7_, user8_.login_id as login_id8_19_7_, user8_.login_password as login_pa9_19_7_, user8_.name_first as name_fi10_19_7_, user8_.name_last as name_la11_19_7_, user8_.nickname as nicknam12_19_7_, category10_.created_at as created_2_5_8_, category10_.created_by as created_3_5_8_, category10_.updated_at as updated_4_5_8_, category10_.updated_by as updated_5_5_8_, category10_.code as code6_5_8_, category10_.description as descript7_5_8_, category10_.language as language8_5_8_, category10_.lft as lft9_5_8_, category10_.name as name10_5_8_, category10_.parent_id as parent_12_5_8_, category10_.rgt as rgt11_5_8_, categories9_.post_id as post_id2_14_3__, categories9_.category_id as category1_14_3__, tag12_.created_at as created_2_18_9_, tag12_.created_by as created_3_18_9_, tag12_.updated_at as updated_4_18_9_, tag12_.updated_by as updated_5_18_9_, tag12_.language as language6_18_9_, tag12_.name as name7_18_9_, tags11_.post_id as post_id2_17_4__, tags11_.tag_id as tag_id1_17_4__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media1_ on page0_1_.cover_id=media1_.id left outer join page page2_ on page0_.parent_id=page2_.id left outer join post page2_1_ on page2_.id=page2_1_.id left outer join post_related_post relatedtop3_ on page0_.id=relatedtop3_.post_id left outer join post post4_ on relatedtop3_.related_id=post4_.id left outer join page post4_1_ on post4_.id=post4_1_.id left outer join article post4_2_ on post4_.id=post4_2_.id left outer join custom_field_value customfiel5_ on page0_.id=customfiel5_.post_id left outer join custom_field customfiel6_ on customfiel5_.custom_field_id=customfiel6_.id left outer join page children7_ on page0_.id=children7_.parent_id left outer join post children7_1_ on children7_.id=children7_1_.id left outer join user user8_ on page0_1_.author_id=user8_.id left outer join post_category categories9_ on page0_.id=categories9_.post_id left outer join category category10_ on categories9_.category_id=category10_.id left outer join post_tag tags11_ on page0_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where page0_.id=?
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpageids(pagesearchrequest) 
called| list org.wallride.service.pageservice.getpageids(pagesearchrequest) 
called| list com.sun.proxy..proxy192.searchforid(pagesearchrequest) 
called| list org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.pagerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(page) 
called| string org.wallride.support.postutils.path(page) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, page, boolean) 
called| map org.wallride.support.pageutils.getpaths(page) 
called| map org.wallride.support.pageutils.getpaths(page, boolean) 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpathpages(page, boolean) 
called| list org.wallride.service.pageservice.getpathpages(page, boolean) 
called| specification org.wallride.repository.pagespecifications.path(page, boolean) 
called| list com.sun.proxy..proxy192.findall(specification) 
called| predicate org.wallride.repository.pagespecifications.lambda$path$b2e51f7a$1(page, boolean, root, criteriaquery, criteriabuilder) 
sql|select page0_.id as id1_13_0_, media4_.id as id1_8_1_, page5_.id as id1_13_2_, children6_.id as id1_13_3_, user7_.id as id1_19_4_, category9_.id as id1_5_5_, tag11_.id as id1_18_6_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media4_.created_at as created_2_8_1_, media4_.created_by as created_3_8_1_, media4_.updated_at as updated_4_8_1_, media4_.updated_by as updated_5_8_1_, media4_.mime_type as mime_typ6_8_1_, media4_.original_name as original7_8_1_, page5_1_.created_at as created_2_13_2_, page5_1_.created_by as created_3_13_2_, page5_1_.updated_at as updated_4_13_2_, page5_1_.updated_by as updated_5_13_2_, page5_1_.author_id as author_17_13_2_, page5_1_.body as body6_13_2_, page5_1_.code as code7_13_2_, page5_1_.cover_id as cover_i18_13_2_, page5_1_.date as date8_13_2_, page5_1_.drafted_id as drafted19_13_2_, page5_1_.drafted_code as drafted_9_13_2_, page5_1_.language as languag10_13_2_, page5_1_.seo_description as seo_des11_13_2_, page5_1_.seo_keywords as seo_key12_13_2_, page5_1_.seo_title as seo_tit13_13_2_, page5_1_.status as status14_13_2_, page5_1_.title as title15_13_2_, page5_1_.views as views16_13_2_, page5_.lft as lft1_10_2_, page5_.parent_id as parent_i4_10_2_, page5_.rgt as rgt2_10_2_, children6_1_.created_at as created_2_13_3_, children6_1_.created_by as created_3_13_3_, children6_1_.updated_at as updated_4_13_3_, children6_1_.updated_by as updated_5_13_3_, children6_1_.author_id as author_17_13_3_, children6_1_.body as body6_13_3_, children6_1_.code as code7_13_3_, children6_1_.cover_id as cover_i18_13_3_, children6_1_.date as date8_13_3_, children6_1_.drafted_id as drafted19_13_3_, children6_1_.drafted_code as drafted_9_13_3_, children6_1_.language as languag10_13_3_, children6_1_.seo_description as seo_des11_13_3_, children6_1_.seo_keywords as seo_key12_13_3_, children6_1_.seo_title as seo_tit13_13_3_, children6_1_.status as status14_13_3_, children6_1_.title as title15_13_3_, children6_1_.views as views16_13_3_, children6_.lft as lft1_10_3_, children6_.parent_id as parent_i4_10_3_, children6_.rgt as rgt2_10_3_, children6_.parent_id as parent_i4_10_0__, children6_.id as id3_10_0__, user7_.created_at as created_2_19_4_, user7_.created_by as created_3_19_4_, user7_.updated_at as updated_4_19_4_, user7_.updated_by as updated_5_19_4_, user7_.description as descript6_19_4_, user7_.email as email7_19_4_, user7_.login_id as login_id8_19_4_, user7_.login_password as login_pa9_19_4_, user7_.name_first as name_fi10_19_4_, user7_.name_last as name_la11_19_4_, user7_.nickname as nicknam12_19_4_, category9_.created_at as created_2_5_5_, category9_.created_by as created_3_5_5_, category9_.updated_at as updated_4_5_5_, category9_.updated_by as updated_5_5_5_, category9_.code as code6_5_5_, category9_.description as descript7_5_5_, category9_.language as language8_5_5_, category9_.lft as lft9_5_5_, category9_.name as name10_5_5_, category9_.parent_id as parent_12_5_5_, category9_.rgt as rgt11_5_5_, categories8_.post_id as post_id2_14_1__, categories8_.category_id as category1_14_1__, tag11_.created_at as created_2_18_6_, tag11_.created_by as created_3_18_6_, tag11_.updated_at as updated_4_18_6_, tag11_.updated_by as updated_5_18_6_, tag11_.language as language6_18_6_, tag11_.name as name7_18_6_, tags10_.post_id as post_id2_17_2__, tags10_.tag_id as tag_id1_17_2__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media4_ on page0_1_.cover_id=media4_.id left outer join page page5_ on page0_.parent_id=page5_.id left outer join post page5_1_ on page5_.id=page5_1_.id left outer join page children6_ on page0_.id=children6_.parent_id left outer join post children6_1_ on children6_.id=children6_1_.id left outer join user user7_ on page0_1_.author_id=user7_.id left outer join post_category categories8_ on page0_.id=categories8_.post_id left outer join category category9_ on categories8_.category_id=category9_.id left outer join post_tag tags10_ on page0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id cross join page page1_ inner join post page1_1_ on page1_.id=page1_1_.id cross join page page2_ inner join post page2_1_ on page2_.id=page2_1_.id where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt) order by page0_.rgt-page0_.lft desc
called| string org.wallride.support.postutils.lambda$path$0(page) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpagebyid(long) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| page org.wallride.service.pageservice.getpagebyid(long) 
called| page com.sun.proxy..proxy192.findonebyid(long) 
sql|select page0_.id as id1_13_0_, media1_.id as id1_8_1_, page2_.id as id1_13_2_, post4_.id as id1_13_3_, customfiel5_.id as id1_1_4_, customfiel6_.id as id1_0_5_, children7_.id as id1_13_6_, user8_.id as id1_19_7_, category10_.id as id1_5_8_, tag12_.id as id1_18_9_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, page2_1_.created_at as created_2_13_2_, page2_1_.created_by as created_3_13_2_, page2_1_.updated_at as updated_4_13_2_, page2_1_.updated_by as updated_5_13_2_, page2_1_.author_id as author_17_13_2_, page2_1_.body as body6_13_2_, page2_1_.code as code7_13_2_, page2_1_.cover_id as cover_i18_13_2_, page2_1_.date as date8_13_2_, page2_1_.drafted_id as drafted19_13_2_, page2_1_.drafted_code as drafted_9_13_2_, page2_1_.language as languag10_13_2_, page2_1_.seo_description as seo_des11_13_2_, page2_1_.seo_keywords as seo_key12_13_2_, page2_1_.seo_title as seo_tit13_13_2_, page2_1_.status as status14_13_2_, page2_1_.title as title15_13_2_, page2_1_.views as views16_13_2_, page2_.lft as lft1_10_2_, page2_.parent_id as parent_i4_10_2_, page2_.rgt as rgt2_10_2_, post4_.created_at as created_2_13_3_, post4_.created_by as created_3_13_3_, post4_.updated_at as updated_4_13_3_, post4_.updated_by as updated_5_13_3_, post4_.author_id as author_17_13_3_, post4_.body as body6_13_3_, post4_.code as code7_13_3_, post4_.cover_id as cover_i18_13_3_, post4_.date as date8_13_3_, post4_.drafted_id as drafted19_13_3_, post4_.drafted_code as drafted_9_13_3_, post4_.language as languag10_13_3_, post4_.seo_description as seo_des11_13_3_, post4_.seo_keywords as seo_key12_13_3_, post4_.seo_title as seo_tit13_13_3_, post4_.status as status14_13_3_, post4_.title as title15_13_3_, post4_.views as views16_13_3_, post4_1_.lft as lft1_10_3_, post4_1_.parent_id as parent_i4_10_3_, post4_1_.rgt as rgt2_10_3_, case when post4_1_.id is not null then ? when post4_2_.id is not null then ? when post4_.id is not null then ? end as clazz_3_, relatedtop3_.post_id as post_id1_16_0__, relatedtop3_.related_id as related_2_16_0__, customfiel5_.created_at as created_2_1_4_, customfiel5_.created_by as created_3_1_4_, customfiel5_.updated_at as updated_4_1_4_, customfiel5_.updated_by as updated_5_1_4_, customfiel5_.custom_field_id as custom_11_1_4_, customfiel5_.date_value as date_val6_1_4_, customfiel5_.datetime_value as datetime7_1_4_, customfiel5_.number_value as number_v8_1_4_, customfiel5_.post_id as post_id12_1_4_, customfiel5_.string_value as string_v9_1_4_, customfiel5_.text_value as text_va10_1_4_, customfiel5_.post_id as post_id12_1_1__, customfiel5_.id as id1_1_1__, customfiel6_.created_at as created_2_0_5_, customfiel6_.created_by as created_3_0_5_, customfiel6_.updated_at as updated_4_0_5_, customfiel6_.updated_by as updated_5_0_5_, customfiel6_.code as code6_0_5_, customfiel6_.default_value as default_7_0_5_, customfiel6_.description as descript8_0_5_, customfiel6_.field_type as field_ty9_0_5_, customfiel6_.idx as idx10_0_5_, customfiel6_.language as languag11_0_5_, customfiel6_.name as name12_0_5_, children7_1_.created_at as created_2_13_6_, children7_1_.created_by as created_3_13_6_, children7_1_.updated_at as updated_4_13_6_, children7_1_.updated_by as updated_5_13_6_, children7_1_.author_id as author_17_13_6_, children7_1_.body as body6_13_6_, children7_1_.code as code7_13_6_, children7_1_.cover_id as cover_i18_13_6_, children7_1_.date as date8_13_6_, children7_1_.drafted_id as drafted19_13_6_, children7_1_.drafted_code as drafted_9_13_6_, children7_1_.language as languag10_13_6_, children7_1_.seo_description as seo_des11_13_6_, children7_1_.seo_keywords as seo_key12_13_6_, children7_1_.seo_title as seo_tit13_13_6_, children7_1_.status as status14_13_6_, children7_1_.title as title15_13_6_, children7_1_.views as views16_13_6_, children7_.lft as lft1_10_6_, children7_.parent_id as parent_i4_10_6_, children7_.rgt as rgt2_10_6_, children7_.parent_id as parent_i4_10_2__, children7_.id as id3_10_2__, user8_.created_at as created_2_19_7_, user8_.created_by as created_3_19_7_, user8_.updated_at as updated_4_19_7_, user8_.updated_by as updated_5_19_7_, user8_.description as descript6_19_7_, user8_.email as email7_19_7_, user8_.login_id as login_id8_19_7_, user8_.login_password as login_pa9_19_7_, user8_.name_first as name_fi10_19_7_, user8_.name_last as name_la11_19_7_, user8_.nickname as nicknam12_19_7_, category10_.created_at as created_2_5_8_, category10_.created_by as created_3_5_8_, category10_.updated_at as updated_4_5_8_, category10_.updated_by as updated_5_5_8_, category10_.code as code6_5_8_, category10_.description as descript7_5_8_, category10_.language as language8_5_8_, category10_.lft as lft9_5_8_, category10_.name as name10_5_8_, category10_.parent_id as parent_12_5_8_, category10_.rgt as rgt11_5_8_, categories9_.post_id as post_id2_14_3__, categories9_.category_id as category1_14_3__, tag12_.created_at as created_2_18_9_, tag12_.created_by as created_3_18_9_, tag12_.updated_at as updated_4_18_9_, tag12_.updated_by as updated_5_18_9_, tag12_.language as language6_18_9_, tag12_.name as name7_18_9_, tags11_.post_id as post_id2_17_4__, tags11_.tag_id as tag_id1_17_4__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media1_ on page0_1_.cover_id=media1_.id left outer join page page2_ on page0_.parent_id=page2_.id left outer join post page2_1_ on page2_.id=page2_1_.id left outer join post_related_post relatedtop3_ on page0_.id=relatedtop3_.post_id left outer join post post4_ on relatedtop3_.related_id=post4_.id left outer join page post4_1_ on post4_.id=post4_1_.id left outer join article post4_2_ on post4_.id=post4_2_.id left outer join custom_field_value customfiel5_ on page0_.id=customfiel5_.post_id left outer join custom_field customfiel6_ on customfiel5_.custom_field_id=customfiel6_.id left outer join page children7_ on page0_.id=children7_.parent_id left outer join post children7_1_ on children7_.id=children7_1_.id left outer join user user8_ on page0_1_.author_id=user8_.id left outer join post_category categories9_ on page0_.id=categories9_.post_id left outer join category category10_ on categories9_.category_id=category10_.id left outer join post_tag tags11_ on page0_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where page0_.id=?
called| pagesearchrequest org.wallride.web.controller.admin.page.pagesearchform.topagesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.page.pagesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.gettagid() 
called| long org.wallride.web.controller.admin.page.pagesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.page.pagesearchform.getstatus() 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpageids(pagesearchrequest) 
called| list org.wallride.service.pageservice.getpageids(pagesearchrequest) 
called| list com.sun.proxy..proxy192.searchforid(pagesearchrequest) 
called| list org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest) 
called| fulltextquery org.wallride.repository.pagerepositoryimpl.buildfulltextquery(pagesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
called| long org.wallride.repository.pagerepositoryimpl.lambda$searchforid$0(object[]) 
after rest| string org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string, long, string, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.path(page) 
called| string org.wallride.support.postutils.path(page) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, page, boolean) 
called| map org.wallride.support.pageutils.getpaths(page) 
called| map org.wallride.support.pageutils.getpaths(page, boolean) 
called| list org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpathpages(page, boolean) 
called| list org.wallride.service.pageservice.getpathpages(page, boolean) 
called| specification org.wallride.repository.pagespecifications.path(page, boolean) 
called| list com.sun.proxy..proxy192.findall(specification) 
called| predicate org.wallride.repository.pagespecifications.lambda$path$b2e51f7a$1(page, boolean, root, criteriaquery, criteriabuilder) 
sql|select page0_.id as id1_13_0_, media4_.id as id1_8_1_, page5_.id as id1_13_2_, children6_.id as id1_13_3_, user7_.id as id1_19_4_, category9_.id as id1_5_5_, tag11_.id as id1_18_6_, page0_1_.created_at as created_2_13_0_, page0_1_.created_by as created_3_13_0_, page0_1_.updated_at as updated_4_13_0_, page0_1_.updated_by as updated_5_13_0_, page0_1_.author_id as author_17_13_0_, page0_1_.body as body6_13_0_, page0_1_.code as code7_13_0_, page0_1_.cover_id as cover_i18_13_0_, page0_1_.date as date8_13_0_, page0_1_.drafted_id as drafted19_13_0_, page0_1_.drafted_code as drafted_9_13_0_, page0_1_.language as languag10_13_0_, page0_1_.seo_description as seo_des11_13_0_, page0_1_.seo_keywords as seo_key12_13_0_, page0_1_.seo_title as seo_tit13_13_0_, page0_1_.status as status14_13_0_, page0_1_.title as title15_13_0_, page0_1_.views as views16_13_0_, page0_.lft as lft1_10_0_, page0_.parent_id as parent_i4_10_0_, page0_.rgt as rgt2_10_0_, media4_.created_at as created_2_8_1_, media4_.created_by as created_3_8_1_, media4_.updated_at as updated_4_8_1_, media4_.updated_by as updated_5_8_1_, media4_.mime_type as mime_typ6_8_1_, media4_.original_name as original7_8_1_, page5_1_.created_at as created_2_13_2_, page5_1_.created_by as created_3_13_2_, page5_1_.updated_at as updated_4_13_2_, page5_1_.updated_by as updated_5_13_2_, page5_1_.author_id as author_17_13_2_, page5_1_.body as body6_13_2_, page5_1_.code as code7_13_2_, page5_1_.cover_id as cover_i18_13_2_, page5_1_.date as date8_13_2_, page5_1_.drafted_id as drafted19_13_2_, page5_1_.drafted_code as drafted_9_13_2_, page5_1_.language as languag10_13_2_, page5_1_.seo_description as seo_des11_13_2_, page5_1_.seo_keywords as seo_key12_13_2_, page5_1_.seo_title as seo_tit13_13_2_, page5_1_.status as status14_13_2_, page5_1_.title as title15_13_2_, page5_1_.views as views16_13_2_, page5_.lft as lft1_10_2_, page5_.parent_id as parent_i4_10_2_, page5_.rgt as rgt2_10_2_, children6_1_.created_at as created_2_13_3_, children6_1_.created_by as created_3_13_3_, children6_1_.updated_at as updated_4_13_3_, children6_1_.updated_by as updated_5_13_3_, children6_1_.author_id as author_17_13_3_, children6_1_.body as body6_13_3_, children6_1_.code as code7_13_3_, children6_1_.cover_id as cover_i18_13_3_, children6_1_.date as date8_13_3_, children6_1_.drafted_id as drafted19_13_3_, children6_1_.drafted_code as drafted_9_13_3_, children6_1_.language as languag10_13_3_, children6_1_.seo_description as seo_des11_13_3_, children6_1_.seo_keywords as seo_key12_13_3_, children6_1_.seo_title as seo_tit13_13_3_, children6_1_.status as status14_13_3_, children6_1_.title as title15_13_3_, children6_1_.views as views16_13_3_, children6_.lft as lft1_10_3_, children6_.parent_id as parent_i4_10_3_, children6_.rgt as rgt2_10_3_, children6_.parent_id as parent_i4_10_0__, children6_.id as id3_10_0__, user7_.created_at as created_2_19_4_, user7_.created_by as created_3_19_4_, user7_.updated_at as updated_4_19_4_, user7_.updated_by as updated_5_19_4_, user7_.description as descript6_19_4_, user7_.email as email7_19_4_, user7_.login_id as login_id8_19_4_, user7_.login_password as login_pa9_19_4_, user7_.name_first as name_fi10_19_4_, user7_.name_last as name_la11_19_4_, user7_.nickname as nicknam12_19_4_, category9_.created_at as created_2_5_5_, category9_.created_by as created_3_5_5_, category9_.updated_at as updated_4_5_5_, category9_.updated_by as updated_5_5_5_, category9_.code as code6_5_5_, category9_.description as descript7_5_5_, category9_.language as language8_5_5_, category9_.lft as lft9_5_5_, category9_.name as name10_5_5_, category9_.parent_id as parent_12_5_5_, category9_.rgt as rgt11_5_5_, categories8_.post_id as post_id2_14_1__, categories8_.category_id as category1_14_1__, tag11_.created_at as created_2_18_6_, tag11_.created_by as created_3_18_6_, tag11_.updated_at as updated_4_18_6_, tag11_.updated_by as updated_5_18_6_, tag11_.language as language6_18_6_, tag11_.name as name7_18_6_, tags10_.post_id as post_id2_17_2__, tags10_.tag_id as tag_id1_17_2__ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id left outer join media media4_ on page0_1_.cover_id=media4_.id left outer join page page5_ on page0_.parent_id=page5_.id left outer join post page5_1_ on page5_.id=page5_1_.id left outer join page children6_ on page0_.id=children6_.parent_id left outer join post children6_1_ on children6_.id=children6_1_.id left outer join user user7_ on page0_1_.author_id=user7_.id left outer join post_category categories8_ on page0_.id=categories8_.post_id left outer join category category9_ on categories8_.category_id=category9_.id left outer join post_tag tags10_ on page0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id cross join page page1_ inner join post page1_1_ on page1_.id=page1_1_.id cross join page page2_ inner join post page2_1_ on page2_.id=page2_1_.id where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt) order by page0_.rgt-page0_.lft desc
called| string org.wallride.support.postutils.lambda$path$0(page) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.5909090909090909
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.5194805194805194

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pagedescribecontroller.describe(string,long,string,model,redirectattributes)
method:org.wallride.service.pageservice.getpagebyid(long)
method:org.wallride.repository.pagerepository.findonebyid(long)
[select from page page inner join post left outer join page left outer join post left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id ]
method:org.wallride.service.pageservice.getpageids(pagesearchrequest)
method:org.wallride.repository.pagerepositoryimpl.searchforid(pagesearchrequest)
[select from page inner join post left outer join media left outer join page left outer join post left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag cross join page inner join post cross join page inner join post where page0_1_.language=? and page0_1_.status=? and page1_.id=(select page3_.id from page page3_ inner join post page3_1_ on page3_.id=page3_1_.id where page3_1_.language=? and (page3_.parent_id is null) and page3_.lft<=? and page3_.rgt>=?) and page2_.id=? and (page0_.lft between page1_.lft and page1_.rgt) and (page2_.lft between page0_.lft and page0_.rgt)   order by]

Syntactic Similarity:0.9627649457216025
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9627649457216025
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.edit(string,long,model,redirectattributes)
method:org.wallride.service.pageservice.getpagebyid(long,string)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]
method:org.wallride.service.pageservice.getpagebycode(string,string)
method:org.wallride.repository.pagerepository.findonebycodeandlanguage(string,string)
[select * from page page where page.code = :code and page.language = :language ]

Syntactic Similarity:0.7602150734686581
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7602150734686581
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.edit(string,long,model,redirectattributes)
method:org.wallride.service.pageservice.getpagebyid(long,string)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.7525490389496987
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7525490389496987
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.update(string,pageeditform,bindingresult,string,authorizeduser,redirectattributes)
method:org.wallride.service.pageservice.savepage(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.7525490389496987
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7525490389496987
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.page.pageeditcontroller.saveasdraft(string,pageeditform,bindingresult,model,authorizeduser)
method:org.wallride.service.pageservice.savepageasdraft(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]
method:org.wallride.service.pageservice.savepage(pageupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.pagerepository.findonebyidandlanguage(long,string)
[select from page inner join post left outer join media left outer join page left outer join post left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join page left outer join post left outer join user left outer join postcategory left outer join category left outer join posttag left outer join tag where page.id = :id and page.language = :language]

Syntactic Similarity:0.7525490389496987
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.7525490389496987
Path matching:False
Request matching:False



======================================= 8 given SQL query ===========================================
Given individual SQL query: select this_.id as id1_6_6_, this_.created_at as created_2_6_6_, this_.created_by as created_3_6_6_, this_.updated_at as updated_4_6_6_, this_.updated_by as updated_5_6_6_, this_.approved as approved6_6_6_, this_.author_id as author_10_6_6_, this_.author_name as author_n7_6_6_, this_.content as content8_6_6_, this_.date as date9_6_6_, this_.post_id as post_id11_6_6_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, post3_.id as id1_13_1_, post3_.created_at as created_2_13_1_, post3_.created_by as created_3_13_1_, post3_.updated_at as updated_4_13_1_, post3_.updated_by as updated_5_13_1_, post3_.author_id as author_17_13_1_, post3_.body as body6_13_1_, post3_.code as code7_13_1_, post3_.cover_id as cover_i18_13_1_, post3_.date as date8_13_1_, post3_.drafted_id as drafted19_13_1_, post3_.drafted_code as drafted_9_13_1_, post3_.language as languag10_13_1_, post3_.seo_description as seo_des11_13_1_, post3_.seo_keywords as seo_key12_13_1_, post3_.seo_title as seo_tit13_13_1_, post3_.status as status14_13_1_, post3_.title as title15_13_1_, post3_.views as views16_13_1_, post3_1_.lft as lft1_10_1_, post3_1_.parent_id as parent_i4_10_1_, post3_1_.rgt as rgt2_10_1_, case when post3_1_.id is not null then 1 when post3_2_.id is not null then 2 when post3_.id is not null then 0 end as clazz_1_, user4_.id as id1_19_2_, user4_.created_at as created_2_19_2_, user4_.created_by as created_3_19_2_, user4_.updated_at as updated_4_19_2_, user4_.updated_by as updated_5_19_2_, user4_.description as descript6_19_2_, user4_.email as email7_19_2_, user4_.login_id as login_id8_19_2_, user4_.login_password as login_pa9_19_2_, user4_.name_first as name_fi10_19_2_, user4_.name_last as name_la11_19_2_, user4_.nickname as nicknam12_19_2_, media5_.id as id1_8_3_, media5_.created_at as created_2_8_3_, media5_.created_by as created_3_8_3_, media5_.updated_at as updated_4_8_3_, media5_.updated_by as updated_5_8_3_, media5_.mime_type as mime_typ6_8_3_, media5_.original_name as original7_8_3_, post6_.id as id1_13_4_, post6_.created_at as created_2_13_4_, post6_.created_by as created_3_13_4_, post6_.updated_at as updated_4_13_4_, post6_.updated_by as updated_5_13_4_, post6_.author_id as author_17_13_4_, post6_.body as body6_13_4_, post6_.code as code7_13_4_, post6_.cover_id as cover_i18_13_4_, post6_.date as date8_13_4_, post6_.drafted_id as drafted19_13_4_, post6_.drafted_code as drafted_9_13_4_, post6_.language as languag10_13_4_, post6_.seo_description as seo_des11_13_4_, post6_.seo_keywords as seo_key12_13_4_, post6_.seo_title as seo_tit13_13_4_, post6_.status as status14_13_4_, post6_.title as title15_13_4_, post6_.views as views16_13_4_, post6_1_.lft as lft1_10_4_, post6_1_.parent_id as parent_i4_10_4_, post6_1_.rgt as rgt2_10_4_, case when post6_1_.id is not null then 1 when post6_2_.id is not null then 2 when post6_.id is not null then 0 end as clazz_4_, page7_.id as id1_13_5_, page7_1_.created_at as created_2_13_5_, page7_1_.created_by as created_3_13_5_, page7_1_.updated_at as updated_4_13_5_, page7_1_.updated_by as updated_5_13_5_, page7_1_.author_id as author_17_13_5_, page7_1_.body as body6_13_5_, page7_1_.code as code7_13_5_, page7_1_.cover_id as cover_i18_13_5_, page7_1_.date as date8_13_5_, page7_1_.drafted_id as drafted19_13_5_, page7_1_.drafted_code as drafted_9_13_5_, page7_1_.language as languag10_13_5_, page7_1_.seo_description as seo_des11_13_5_, page7_1_.seo_keywords as seo_key12_13_5_, page7_1_.seo_title as seo_tit13_13_5_, page7_1_.status as status14_13_5_, page7_1_.title as title15_13_5_, page7_1_.views as views16_13_5_, page7_.lft as lft1_10_5_, page7_.parent_id as parent_i4_10_5_, page7_.rgt as rgt2_10_5_ from comment this_ left outer join user user2_ on this_.author_id=user2_.id inner join post post3_ on this_.post_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join user user4_ on post3_.author_id=user4_.id left outer join media media5_ on post3_.cover_id=media5_.id left outer join post post6_ on post3_.drafted_id=post6_.id left outer join page post6_1_ on post6_.id=post6_1_.id left outer join article post6_2_ on post6_.id=post6_2_.id left outer join page page7_ on post3_1_.parent_id=page7_.id left outer join post page7_1_ on page7_.id=page7_1_.id where (this_.id in (?, ?))
Execution time of Given individual SQL query (slow) : 112000ns
Pre-processed SQL query : select from comment this left outer join user user inner join post left outer join page left outer join article left outer join user user left outer join media left outer join post left outer join page left outer join article left outer join page left outer join post where (this_.id in (?, ?)) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.comment.commentsearchcontroller.search(string, commentsearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.comment.commentsearchcontroller.search(string, commentsearchform, bindingresult, pageable, model, httpservletrequest) 
called| commentsearchrequest org.wallride.web.controller.admin.comment.commentsearchform.tocommentsearchrequest() 
called| string org.wallride.web.controller.admin.comment.commentsearchform.getkeyword() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| page org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20.getcomments(commentsearchrequest, pageable) 
called| object org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.invoke(int, object, object[]) 
called| page org.wallride.service.commentservice.getcomments(commentsearchrequest, pageable) 
called| page com.sun.proxy..proxy189.search(commentsearchrequest, pageable) 
called| page org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest, pageable) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_6_6_, this_.created_at as created_2_6_6_, this_.created_by as created_3_6_6_, this_.updated_at as updated_4_6_6_, this_.updated_by as updated_5_6_6_, this_.approved as approved6_6_6_, this_.author_id as author_10_6_6_, this_.author_name as author_n7_6_6_, this_.content as content8_6_6_, this_.date as date9_6_6_, this_.post_id as post_id11_6_6_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, post3_.id as id1_13_1_, post3_.created_at as created_2_13_1_, post3_.created_by as created_3_13_1_, post3_.updated_at as updated_4_13_1_, post3_.updated_by as updated_5_13_1_, post3_.author_id as author_17_13_1_, post3_.body as body6_13_1_, post3_.code as code7_13_1_, post3_.cover_id as cover_i18_13_1_, post3_.date as date8_13_1_, post3_.drafted_id as drafted19_13_1_, post3_.drafted_code as drafted_9_13_1_, post3_.language as languag10_13_1_, post3_.seo_description as seo_des11_13_1_, post3_.seo_keywords as seo_key12_13_1_, post3_.seo_title as seo_tit13_13_1_, post3_.status as status14_13_1_, post3_.title as title15_13_1_, post3_.views as views16_13_1_, post3_1_.lft as lft1_10_1_, post3_1_.parent_id as parent_i4_10_1_, post3_1_.rgt as rgt2_10_1_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_1_, user4_.id as id1_19_2_, user4_.created_at as created_2_19_2_, user4_.created_by as created_3_19_2_, user4_.updated_at as updated_4_19_2_, user4_.updated_by as updated_5_19_2_, user4_.description as descript6_19_2_, user4_.email as email7_19_2_, user4_.login_id as login_id8_19_2_, user4_.login_password as login_pa9_19_2_, user4_.name_first as name_fi10_19_2_, user4_.name_last as name_la11_19_2_, user4_.nickname as nicknam12_19_2_, media5_.id as id1_8_3_, media5_.created_at as created_2_8_3_, media5_.created_by as created_3_8_3_, media5_.updated_at as updated_4_8_3_, media5_.updated_by as updated_5_8_3_, media5_.mime_type as mime_typ6_8_3_, media5_.original_name as original7_8_3_, post6_.id as id1_13_4_, post6_.created_at as created_2_13_4_, post6_.created_by as created_3_13_4_, post6_.updated_at as updated_4_13_4_, post6_.updated_by as updated_5_13_4_, post6_.author_id as author_17_13_4_, post6_.body as body6_13_4_, post6_.code as code7_13_4_, post6_.cover_id as cover_i18_13_4_, post6_.date as date8_13_4_, post6_.drafted_id as drafted19_13_4_, post6_.drafted_code as drafted_9_13_4_, post6_.language as languag10_13_4_, post6_.seo_description as seo_des11_13_4_, post6_.seo_keywords as seo_key12_13_4_, post6_.seo_title as seo_tit13_13_4_, post6_.status as status14_13_4_, post6_.title as title15_13_4_, post6_.views as views16_13_4_, post6_1_.lft as lft1_10_4_, post6_1_.parent_id as parent_i4_10_4_, post6_1_.rgt as rgt2_10_4_, case when post6_1_.id is not null then ? when post6_2_.id is not null then ? when post6_.id is not null then ? end as clazz_4_, page7_.id as id1_13_5_, page7_1_.created_at as created_2_13_5_, page7_1_.created_by as created_3_13_5_, page7_1_.updated_at as updated_4_13_5_, page7_1_.updated_by as updated_5_13_5_, page7_1_.author_id as author_17_13_5_, page7_1_.body as body6_13_5_, page7_1_.code as code7_13_5_, page7_1_.cover_id as cover_i18_13_5_, page7_1_.date as date8_13_5_, page7_1_.drafted_id as drafted19_13_5_, page7_1_.drafted_code as drafted_9_13_5_, page7_1_.language as languag10_13_5_, page7_1_.seo_description as seo_des11_13_5_, page7_1_.seo_keywords as seo_key12_13_5_, page7_1_.seo_title as seo_tit13_13_5_, page7_1_.status as status14_13_5_, page7_1_.title as title15_13_5_, page7_1_.views as views16_13_5_, page7_.lft as lft1_10_5_, page7_.parent_id as parent_i4_10_5_, page7_.rgt as rgt2_10_5_ from comment this_ left outer join user user2_ on this_.author_id=user2_.id inner join post post3_ on this_.post_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join user user4_ on post3_.author_id=user4_.id left outer join media media5_ on post3_.cover_id=media5_.id left outer join post post6_ on post3_.drafted_id=post6_.id left outer join page post6_1_ on post6_.id=post6_1_.id left outer join article post6_2_ on post6_.id=post6_2_.id left outer join page page7_ on post3_1_.parent_id=page7_.id left outer join post page7_1_ on page7_.id=page7_1_.id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.comment.commentsearchcontroller.search(string, commentsearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebycode(string, string) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| article org.wallride.service.articleservice.getarticlebycode(string, string) 
called| article com.sun.proxy..proxy184.findonebycodeandlanguage(string, string) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_1_.code=? and article0_1_.language=?
called| page org.wallride.service.commentservice..enhancerbyspringcglib..49cc9c20.getcomments(commentsearchrequest, pageable) 
called| object org.wallride.service.commentservice..fastclassbyspringcglib..1b0b5671.invoke(int, object, object[]) 
called| page org.wallride.service.commentservice.getcomments(commentsearchrequest, pageable) 
called| page com.sun.proxy..proxy189.search(commentsearchrequest, pageable) 
called| page org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest, pageable) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_6_6_, this_.created_at as created_2_6_6_, this_.created_by as created_3_6_6_, this_.updated_at as updated_4_6_6_, this_.updated_by as updated_5_6_6_, this_.approved as approved6_6_6_, this_.author_id as author_10_6_6_, this_.author_name as author_n7_6_6_, this_.content as content8_6_6_, this_.date as date9_6_6_, this_.post_id as post_id11_6_6_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, post3_.id as id1_13_1_, post3_.created_at as created_2_13_1_, post3_.created_by as created_3_13_1_, post3_.updated_at as updated_4_13_1_, post3_.updated_by as updated_5_13_1_, post3_.author_id as author_17_13_1_, post3_.body as body6_13_1_, post3_.code as code7_13_1_, post3_.cover_id as cover_i18_13_1_, post3_.date as date8_13_1_, post3_.drafted_id as drafted19_13_1_, post3_.drafted_code as drafted_9_13_1_, post3_.language as languag10_13_1_, post3_.seo_description as seo_des11_13_1_, post3_.seo_keywords as seo_key12_13_1_, post3_.seo_title as seo_tit13_13_1_, post3_.status as status14_13_1_, post3_.title as title15_13_1_, post3_.views as views16_13_1_, post3_1_.lft as lft1_10_1_, post3_1_.parent_id as parent_i4_10_1_, post3_1_.rgt as rgt2_10_1_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_1_, user4_.id as id1_19_2_, user4_.created_at as created_2_19_2_, user4_.created_by as created_3_19_2_, user4_.updated_at as updated_4_19_2_, user4_.updated_by as updated_5_19_2_, user4_.description as descript6_19_2_, user4_.email as email7_19_2_, user4_.login_id as login_id8_19_2_, user4_.login_password as login_pa9_19_2_, user4_.name_first as name_fi10_19_2_, user4_.name_last as name_la11_19_2_, user4_.nickname as nicknam12_19_2_, media5_.id as id1_8_3_, media5_.created_at as created_2_8_3_, media5_.created_by as created_3_8_3_, media5_.updated_at as updated_4_8_3_, media5_.updated_by as updated_5_8_3_, media5_.mime_type as mime_typ6_8_3_, media5_.original_name as original7_8_3_, post6_.id as id1_13_4_, post6_.created_at as created_2_13_4_, post6_.created_by as created_3_13_4_, post6_.updated_at as updated_4_13_4_, post6_.updated_by as updated_5_13_4_, post6_.author_id as author_17_13_4_, post6_.body as body6_13_4_, post6_.code as code7_13_4_, post6_.cover_id as cover_i18_13_4_, post6_.date as date8_13_4_, post6_.drafted_id as drafted19_13_4_, post6_.drafted_code as drafted_9_13_4_, post6_.language as languag10_13_4_, post6_.seo_description as seo_des11_13_4_, post6_.seo_keywords as seo_key12_13_4_, post6_.seo_title as seo_tit13_13_4_, post6_.status as status14_13_4_, post6_.title as title15_13_4_, post6_.views as views16_13_4_, post6_1_.lft as lft1_10_4_, post6_1_.parent_id as parent_i4_10_4_, post6_1_.rgt as rgt2_10_4_, case when post6_1_.id is not null then ? when post6_2_.id is not null then ? when post6_.id is not null then ? end as clazz_4_, page7_.id as id1_13_5_, page7_1_.created_at as created_2_13_5_, page7_1_.created_by as created_3_13_5_, page7_1_.updated_at as updated_4_13_5_, page7_1_.updated_by as updated_5_13_5_, page7_1_.author_id as author_17_13_5_, page7_1_.body as body6_13_5_, page7_1_.code as code7_13_5_, page7_1_.cover_id as cover_i18_13_5_, page7_1_.date as date8_13_5_, page7_1_.drafted_id as drafted19_13_5_, page7_1_.drafted_code as drafted_9_13_5_, page7_1_.language as languag10_13_5_, page7_1_.seo_description as seo_des11_13_5_, page7_1_.seo_keywords as seo_key12_13_5_, page7_1_.seo_title as seo_tit13_13_5_, page7_1_.status as status14_13_5_, page7_1_.title as title15_13_5_, page7_1_.views as views16_13_5_, page7_.lft as lft1_10_5_, page7_.parent_id as parent_i4_10_5_, page7_.rgt as rgt2_10_5_ from comment this_ left outer join user user2_ on this_.author_id=user2_.id inner join post post3_ on this_.post_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join user user4_ on post3_.author_id=user4_.id left outer join media media5_ on post3_.cover_id=media5_.id left outer join post post6_ on post3_.drafted_id=post6_.id left outer join page post6_1_ on post6_.id=post6_1_.id left outer join article post6_2_ on post6_.id=post6_2_.id left outer join page page7_ on post3_1_.parent_id=page7_.id left outer join post page7_1_ on page7_.id=page7_1_.id where (this_.id in (?, ?))
called| locale org.wallride.web.support.bloglanguagelocaleresolver.resolvelocale(httpservletrequest) 
called| list org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticleids(articlesearchrequest) 
called| list org.wallride.service.articleservice.getarticleids(articlesearchrequest) 
called| list com.sun.proxy..proxy184.searchforid(articlesearchrequest) 
called| list org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| long org.wallride.repository.articlerepositoryimpl.lambda$searchforid$0(object[]) 
called| article org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticlebyid(long) 
called| article org.wallride.service.articleservice.getarticlebyid(long) 
called| article com.sun.proxy..proxy184.findonebyid(long) 
sql|select article0_.id as id1_13_0_, media1_.id as id1_8_1_, post3_.id as id1_13_2_, customfiel4_.id as id1_1_3_, customfiel5_.id as id1_0_4_, user6_.id as id1_19_5_, category8_.id as id1_5_6_, post9_.id as id1_13_7_, tag11_.id as id1_18_8_, article0_1_.created_at as created_2_13_0_, article0_1_.created_by as created_3_13_0_, article0_1_.updated_at as updated_4_13_0_, article0_1_.updated_by as updated_5_13_0_, article0_1_.author_id as author_17_13_0_, article0_1_.body as body6_13_0_, article0_1_.code as code7_13_0_, article0_1_.cover_id as cover_i18_13_0_, article0_1_.date as date8_13_0_, article0_1_.drafted_id as drafted19_13_0_, article0_1_.drafted_code as drafted_9_13_0_, article0_1_.language as languag10_13_0_, article0_1_.seo_description as seo_des11_13_0_, article0_1_.seo_keywords as seo_key12_13_0_, article0_1_.seo_title as seo_tit13_13_0_, article0_1_.status as status14_13_0_, article0_1_.title as title15_13_0_, article0_1_.views as views16_13_0_, media1_.created_at as created_2_8_1_, media1_.created_by as created_3_8_1_, media1_.updated_at as updated_4_8_1_, media1_.updated_by as updated_5_8_1_, media1_.mime_type as mime_typ6_8_1_, media1_.original_name as original7_8_1_, post3_.created_at as created_2_13_2_, post3_.created_by as created_3_13_2_, post3_.updated_at as updated_4_13_2_, post3_.updated_by as updated_5_13_2_, post3_.author_id as author_17_13_2_, post3_.body as body6_13_2_, post3_.code as code7_13_2_, post3_.cover_id as cover_i18_13_2_, post3_.date as date8_13_2_, post3_.drafted_id as drafted19_13_2_, post3_.drafted_code as drafted_9_13_2_, post3_.language as languag10_13_2_, post3_.seo_description as seo_des11_13_2_, post3_.seo_keywords as seo_key12_13_2_, post3_.seo_title as seo_tit13_13_2_, post3_.status as status14_13_2_, post3_.title as title15_13_2_, post3_.views as views16_13_2_, post3_1_.lft as lft1_10_2_, post3_1_.parent_id as parent_i4_10_2_, post3_1_.rgt as rgt2_10_2_, case when post3_1_.id is not null then ? when post3_2_.id is not null then ? when post3_.id is not null then ? end as clazz_2_, relatedtop2_.post_id as post_id1_16_0__, relatedtop2_.related_id as related_2_16_0__, customfiel4_.created_at as created_2_1_3_, customfiel4_.created_by as created_3_1_3_, customfiel4_.updated_at as updated_4_1_3_, customfiel4_.updated_by as updated_5_1_3_, customfiel4_.custom_field_id as custom_11_1_3_, customfiel4_.date_value as date_val6_1_3_, customfiel4_.datetime_value as datetime7_1_3_, customfiel4_.number_value as number_v8_1_3_, customfiel4_.post_id as post_id12_1_3_, customfiel4_.string_value as string_v9_1_3_, customfiel4_.text_value as text_va10_1_3_, customfiel4_.post_id as post_id12_1_1__, customfiel4_.id as id1_1_1__, customfiel5_.created_at as created_2_0_4_, customfiel5_.created_by as created_3_0_4_, customfiel5_.updated_at as updated_4_0_4_, customfiel5_.updated_by as updated_5_0_4_, customfiel5_.code as code6_0_4_, customfiel5_.default_value as default_7_0_4_, customfiel5_.description as descript8_0_4_, customfiel5_.field_type as field_ty9_0_4_, customfiel5_.idx as idx10_0_4_, customfiel5_.language as languag11_0_4_, customfiel5_.name as name12_0_4_, user6_.created_at as created_2_19_5_, user6_.created_by as created_3_19_5_, user6_.updated_at as updated_4_19_5_, user6_.updated_by as updated_5_19_5_, user6_.description as descript6_19_5_, user6_.email as email7_19_5_, user6_.login_id as login_id8_19_5_, user6_.login_password as login_pa9_19_5_, user6_.name_first as name_fi10_19_5_, user6_.name_last as name_la11_19_5_, user6_.nickname as nicknam12_19_5_, category8_.created_at as created_2_5_6_, category8_.created_by as created_3_5_6_, category8_.updated_at as updated_4_5_6_, category8_.updated_by as updated_5_5_6_, category8_.code as code6_5_6_, category8_.description as descript7_5_6_, category8_.language as language8_5_6_, category8_.lft as lft9_5_6_, category8_.name as name10_5_6_, category8_.parent_id as parent_12_5_6_, category8_.rgt as rgt11_5_6_, categories7_.post_id as post_id2_14_2__, categories7_.category_id as category1_14_2__, post9_.created_at as created_2_13_7_, post9_.created_by as created_3_13_7_, post9_.updated_at as updated_4_13_7_, post9_.updated_by as updated_5_13_7_, post9_.author_id as author_17_13_7_, post9_.body as body6_13_7_, post9_.code as code7_13_7_, post9_.cover_id as cover_i18_13_7_, post9_.date as date8_13_7_, post9_.drafted_id as drafted19_13_7_, post9_.drafted_code as drafted_9_13_7_, post9_.language as languag10_13_7_, post9_.seo_description as seo_des11_13_7_, post9_.seo_keywords as seo_key12_13_7_, post9_.seo_title as seo_tit13_13_7_, post9_.status as status14_13_7_, post9_.title as title15_13_7_, post9_.views as views16_13_7_, post9_1_.lft as lft1_10_7_, post9_1_.parent_id as parent_i4_10_7_, post9_1_.rgt as rgt2_10_7_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_7_, tag11_.created_at as created_2_18_8_, tag11_.created_by as created_3_18_8_, tag11_.updated_at as updated_4_18_8_, tag11_.updated_by as updated_5_18_8_, tag11_.language as language6_18_8_, tag11_.name as name7_18_8_, tags10_.post_id as post_id2_17_3__, tags10_.tag_id as tag_id1_17_3__ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id left outer join media media1_ on article0_1_.cover_id=media1_.id left outer join post_related_post relatedtop2_ on article0_.id=relatedtop2_.post_id left outer join post post3_ on relatedtop2_.related_id=post3_.id left outer join page post3_1_ on post3_.id=post3_1_.id left outer join article post3_2_ on post3_.id=post3_2_.id left outer join custom_field_value customfiel4_ on article0_.id=customfiel4_.post_id left outer join custom_field customfiel5_ on customfiel4_.custom_field_id=customfiel5_.id left outer join user user6_ on article0_1_.author_id=user6_.id left outer join post_category categories7_ on article0_.id=categories7_.post_id left outer join category category8_ on categories7_.category_id=category8_.id left outer join post post9_ on article0_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join post_tag tags10_ on article0_.id=tags10_.post_id left outer join tag tag11_ on tags10_.tag_id=tag11_.id where article0_.id=?
after rest| string org.wallride.web.controller.guest.article.articledescribecontroller.describe(int, int, int, string, bloglanguage, model, redirectattributes) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| object org.wallride.autoconfigure.wallrideexpressionobjectfactory.buildobject(iexpressioncontext, string) 
called| posts org.wallride.autoconfigure.wallrideexpressionobjectfactory.createposts(iexpressioncontext) 
called| boolean org.wallride.autoconfigure.wallrideexpressionobjectfactory.iscacheable(string) 
called| string org.wallride.web.support.posts.metadescription(post) 
called| string org.wallride.web.support.posts.metakeywords(post) 
called| string org.wallride.web.support.posts.title(post) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| string org.wallride.web.support.posts.path(article) 
called| string org.wallride.support.postutils.path(article) 
called| string org.wallride.support.postutils.path(uricomponentsbuilder, article, boolean) 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| pages org.wallride.autoconfigure.wallrideexpressionobjectfactory.createpages(iexpressioncontext) 
called| list org.wallride.web.support.pages.getnodes() 
called| list org.wallride.support.pageutils.getnodes() 
called| list org.wallride.support.pageutils.getnodes(boolean) 
called| page org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.getpages(pagesearchrequest) 
called| void org.wallride.support.pageutils.createnode(treenode, collection) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.posts.body(post) 
called| string org.wallride.web.support.posts.parse(string) 
called| users org.wallride.autoconfigure.wallrideexpressionobjectfactory.createusers(iexpressioncontext) 
called| string org.wallride.web.support.users.path(user) 
called| string org.wallride.web.support.users.path(uricomponentsbuilder, user, boolean) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| string org.wallride.support.authorizeduser.getusername() 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| string org.wallride.web.support.bloglanguagerewritematch.getmatchingurl() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| string org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.gettarget() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.islast() 
called| boolean org.wallride.web.support.extendedurlrewritefilter.rewrittenurlimpl.dorewrite(httpservletrequest, httpservletresponse, filterchain) 
called| boolean org.wallride.web.support.bloglanguagerewritematch.execute(httpservletrequest, httpservletresponse) 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 
called| boolean org.wallride.web.support.authorizedusermethodargumentresolver.supportsparameter(methodparameter) 
called| boolean org.wallride.web.support.bloglanguagemethodargumentresolver.supportsparameter(methodparameter) 
called| object org.wallride.web.support.bloglanguagemethodargumentresolver.resolveargument(methodparameter, modelandviewcontainer, nativewebrequest, webdatabinderfactory) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, False, False]
path_matching_number_k:[1, 2, 3, 3, 3]
path_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, False, False]
request_matching_number_k:[1, 2, 3, 3, 3]
request_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.comment.commentsearchcontroller.search(string,commentsearchform,bindingresult,pageable,model,httpservletrequest)
method:org.wallride.service.commentservice.getcomments(commentsearchrequest,pageable)
method:org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest,pageable)
[select from comment left outer join user inner join post left outer join page left outer join article left outer join user left outer join media left outer join post left outer join page left outer join article left outer join page left outer join post where (comment.id in (?)) ]

Syntactic Similarity:0.958953317954376
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9589533179543759
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articledescribecontroller.describe(int,int,int,string,bloglanguage,model,redirectattributes)
method:org.wallride.service.articleservice.getarticlebycode(string,string)
method:org.wallride.repository.articlerepository.findonebycodeandlanguage(string,string)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.code = :code and article.language = :language]
method:org.wallride.service.commentservice.getcomments(commentsearchrequest,pageable)
method:org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest,pageable)
[select from comment left outer join user inner join post left outer join page left outer join article left outer join user left outer join media left outer join post left outer join page left outer join article left outer join page left outer join post where (comment.id in (?)) ]
method:org.wallride.service.articleservice.getarticleids(articlesearchrequest)
method:org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest)
[]

Syntactic Similarity:0.953715531517736
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.453715531517736
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articledescribecontroller.describe(int,int,int,string,bloglanguage,model,redirectattributes)
method:org.wallride.service.articleservice.getarticlebycode(string,string)
method:org.wallride.repository.articlerepository.findonebycodeandlanguage(string,string)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.code = :code and article.language = :language]
method:org.wallride.service.commentservice.getcomments(commentsearchrequest,pageable)
method:org.wallride.repository.commentrepositoryimpl.search(commentsearchrequest,pageable)
[select from comment left outer join user inner join post left outer join page left outer join article left outer join user left outer join media left outer join post left outer join page left outer join article left outer join page left outer join post where (comment.id in (?)) ]
method:org.wallride.service.articleservice.getarticleids(articlesearchrequest)
method:org.wallride.repository.articlerepositoryimpl.searchforid(articlesearchrequest)
[]
method:org.wallride.service.articleservice.getarticlebyid(long)
method:org.wallride.repository.articlerepository.findonebyid(long)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id]

Syntactic Similarity:0.9498952272673091
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4498952272673091
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articleeditcontroller.saveasdraft(string,articleeditform,bindingresult,model,authorizeduser)
method:org.wallride.service.articleservice.savearticleasdraft(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]
method:org.wallride.repository.articlerepository.findone(specification)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where  article.drafted_id = ?]
method:org.wallride.service.articleservice.savearticle(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]

Syntactic Similarity:0.9406749195110568
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4406749195110566
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articleeditcontroller.saveasunpublished(string,articleeditform,bindingresult,string,authorizeduser,redirectattributes)
method:org.wallride.service.articleservice.savearticleasunpublished(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]
method:org.wallride.service.articleservice.unpublisharticle(article)
method:org.wallride.service.articleservice.getdraftbyid(long)
method:org.wallride.repository.articlerepository.findone(specification)
[select * from article article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where  article.drafted_id = ?]
method:org.wallride.service.articleservice.savearticle(articleupdaterequest,authorizeduser)
method:org.wallride.repository.postrepositoryimpl.lock(long)
method:org.wallride.repository.articlerepository.findonebyidandlanguage(long,string)
[select from article inner join post left outer join media left outer join postrelatedpost left outer join post left outer join page left outer join article left outer join customfieldvalue left outer join customfield left outer join user left outer join postcategory left outer join category left outer join post left outer join page left outer join article left outer join posttag left outer join tag where article.id = :id and article.language = :language ]
[select from comment where comments0_.post_id=?]

Syntactic Similarity:0.9406749195110568
Semantic Similarity:0.5
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.4406749195110566
Path matching:False
Request matching:False



======================================= 9 given SQL query ===========================================
Given individual SQL query: select this_.id as id1_13_9_, this_1_.created_at as created_2_13_9_, this_1_.created_by as created_3_13_9_, this_1_.updated_at as updated_4_13_9_, this_1_.updated_by as updated_5_13_9_, this_1_.author_id as author_17_13_9_, this_1_.body as body6_13_9_, this_1_.code as code7_13_9_, this_1_.cover_id as cover_i18_13_9_, this_1_.date as date8_13_9_, this_1_.drafted_id as drafted19_13_9_, this_1_.drafted_code as drafted_9_13_9_, this_1_.language as languag10_13_9_, this_1_.seo_description as seo_des11_13_9_, this_1_.seo_keywords as seo_key12_13_9_, this_1_.seo_title as seo_tit13_13_9_, this_1_.status as status14_13_9_, this_1_.title as title15_13_9_, this_1_.views as views16_13_9_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_11_, category4_.id as category1_14_11_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_12_, customfiel7_.id as id1_1_12_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then 1 when post9_2_.id is not null then 2 when post9_.id is not null then 0 end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_13_, tag12_.id as tag_id1_17_13_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_ from article this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where (this_.id in (?, ?))
Execution time of Given individual SQL query (slow) : 110100ns
Pre-processed SQL query : select from article inner join post left outer join user user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (this_.id in (?, ?)) 

+++++++++++++++++++++++ 1 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| long org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.countarticlesbystatus(post.status, string) 
called| connection org.wallride.autoconfigure.infinispandatasourceconnectionfactory.getconnection() 
called| void org.wallride.autoconfigure.infinispandatasourceconnectionfactory.releaseconnection(connection) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| long org.wallride.service.articleservice.countarticlesbystatus(post.status, string) 
called| long com.sun.proxy..proxy184.countbystatus(post.status, string) 
sql|select count(article0_.id) as col_0_0_ from article article0_ inner join post article0_1_ on article0_.id=article0_1_.id where article0_1_.status=? and article0_1_.language=? and (article0_1_.drafted_id is null)
called| long org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393.countpagesbystatus(post.status, string) 
called| int org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.getindex(signature) 
called| int org.wallride.service.pageservice..enhancerbyspringcglib..9b0f9393..fastclassbyspringcglib..5fa5b521.getindex(signature) 
called| object org.wallride.service.pageservice..fastclassbyspringcglib..278f9beb.invoke(int, object, object[]) 
called| long org.wallride.service.pageservice.countpagesbystatus(post.status, string) 
called| long com.sun.proxy..proxy192.countbystatus(post.status, string) 
sql|select count(page0_.id) as col_0_0_ from page page0_ inner join post page0_1_ on page0_.id=page0_1_.id where page0_1_.status=? and page0_1_.language=? and (page0_1_.drafted_id is null)
called| list org.wallride.service.categoryservice..enhancerbyspringcglib..d21e8ac6.getcategories(string) 
called| int org.wallride.service.categoryservice..fastclassbyspringcglib..c6ab8c1c.getindex(signature) 
called| int org.wallride.service.categoryservice..enhancerbyspringcglib..d21e8ac6..fastclassbyspringcglib..542abadb.getindex(signature) 
called| object org.wallride.service.categoryservice..fastclassbyspringcglib..c6ab8c1c.invoke(int, object, object[]) 
called| list org.wallride.service.categoryservice.getcategories(string) 
called| list org.wallride.service.categoryservice.getcategories(string, boolean) 
called| specification org.wallride.repository.categoryspecifications.hasposts(string) 
called| list com.sun.proxy..proxy188.findall(specification, sort) 
called| predicate org.wallride.repository.categoryspecifications.lambda$hasposts$76e9cbe1$1(string, root, criteriaquery, criteriabuilder) 
sql|select distinct category0_.id as id1_5_0_, category4_.id as id1_5_1_, children5_.id as id1_5_2_, category0_.created_at as created_2_5_0_, category0_.created_by as created_3_5_0_, category0_.updated_at as updated_4_5_0_, category0_.updated_by as updated_5_5_0_, category0_.code as code6_5_0_, category0_.description as descript7_5_0_, category0_.language as language8_5_0_, category0_.lft as lft9_5_0_, category0_.name as name10_5_0_, category0_.parent_id as parent_12_5_0_, category0_.rgt as rgt11_5_0_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, children5_.created_at as created_2_5_2_, children5_.created_by as created_3_5_2_, children5_.updated_at as updated_4_5_2_, children5_.updated_by as updated_5_5_2_, children5_.code as code6_5_2_, children5_.description as descript7_5_2_, children5_.language as language8_5_2_, children5_.lft as lft9_5_2_, children5_.name as name10_5_2_, children5_.parent_id as parent_12_5_2_, children5_.rgt as rgt11_5_2_, children5_.parent_id as parent_12_5_0__, children5_.id as id1_5_0__ from category category0_ left outer join category category4_ on category0_.parent_id=category4_.id left outer join category children5_ on category0_.id=children5_.parent_id where (category0_.id in (select category3_.id from post post1_ inner join post_category categories2_ on post1_.id=categories2_.post_id inner join category category3_ on categories2_.category_id=category3_.id where post1_.status=?)) and category0_.language=? order by category0_.lft asc
called| sortedset org.wallride.web.controller.admin.dashboardcontroller.popularposts(string) 
called| sortedset org.wallride.service.postservice..enhancerbyspringcglib..4f169b60.getpopularposts(string, popularpost.type) 
called| int org.wallride.service.postservice..fastclassbyspringcglib..8cfaa0ba.getindex(signature) 
called| int org.wallride.service.postservice..enhancerbyspringcglib..4f169b60..fastclassbyspringcglib..4a9ef359.getindex(signature) 
called| object org.wallride.service.postservice..fastclassbyspringcglib..8cfaa0ba.invoke(int, object, object[]) 
called| sortedset org.wallride.service.postservice.getpopularposts(string, popularpost.type) 
called| sortedset com.sun.proxy..proxy196.findall(specification) 
called| predicate org.wallride.service.postservice.lambda$getpopularposts$ddedb089$1(string, popularpost.type, root, criteriaquery, criteriabuilder) 
sql|select popularpos0_.id as id1_12_0_, post1_.id as id1_13_1_, media2_.id as id1_8_2_, user3_.id as id1_19_3_, popularpos0_.created_at as created_2_12_0_, popularpos0_.created_by as created_3_12_0_, popularpos0_.updated_at as updated_4_12_0_, popularpos0_.updated_by as updated_5_12_0_, popularpos0_.language as language6_12_0_, popularpos0_.post_id as post_id10_12_0_, popularpos0_.rank as rank7_12_0_, popularpos0_.type as type8_12_0_, popularpos0_.views as views9_12_0_, post1_.created_at as created_2_13_1_, post1_.created_by as created_3_13_1_, post1_.updated_at as updated_4_13_1_, post1_.updated_by as updated_5_13_1_, post1_.author_id as author_17_13_1_, post1_.body as body6_13_1_, post1_.code as code7_13_1_, post1_.cover_id as cover_i18_13_1_, post1_.date as date8_13_1_, post1_.drafted_id as drafted19_13_1_, post1_.drafted_code as drafted_9_13_1_, post1_.language as languag10_13_1_, post1_.seo_description as seo_des11_13_1_, post1_.seo_keywords as seo_key12_13_1_, post1_.seo_title as seo_tit13_13_1_, post1_.status as status14_13_1_, post1_.title as title15_13_1_, post1_.views as views16_13_1_, post1_1_.lft as lft1_10_1_, post1_1_.parent_id as parent_i4_10_1_, post1_1_.rgt as rgt2_10_1_, case when post1_1_.id is not null then ? when post1_2_.id is not null then ? when post1_.id is not null then ? end as clazz_1_, media2_.created_at as created_2_8_2_, media2_.created_by as created_3_8_2_, media2_.updated_at as updated_4_8_2_, media2_.updated_by as updated_5_8_2_, media2_.mime_type as mime_typ6_8_2_, media2_.original_name as original7_8_2_, user3_.created_at as created_2_19_3_, user3_.created_by as created_3_19_3_, user3_.updated_at as updated_4_19_3_, user3_.updated_by as updated_5_19_3_, user3_.description as descript6_19_3_, user3_.email as email7_19_3_, user3_.login_id as login_id8_19_3_, user3_.login_password as login_pa9_19_3_, user3_.name_first as name_fi10_19_3_, user3_.name_last as name_la11_19_3_, user3_.nickname as nicknam12_19_3_ from popular_post popularpos0_ inner join post post1_ on popularpos0_.post_id=post1_.id left outer join page post1_1_ on post1_.id=post1_1_.id left outer join article post1_2_ on post1_.id=post1_2_.id inner join media media2_ on post1_.cover_id=media2_.id inner join user user3_ on post1_.author_id=user3_.id where popularpos0_.language=? and popularpos0_.type=? and post1_.status=?
called| list org.wallride.web.controller.admin.dashboardcontroller.recentpublishedarticles(string) 
called| void org.wallride.web.controller.admin.article.articlesearchform.setstatus(post.status) 
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| page org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticles(articlesearchrequest) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest, pageable) 
called| page com.sun.proxy..proxy184.search(articlesearchrequest, pageable) 
called| page org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_9_, this_1_.created_at as created_2_13_9_, this_1_.created_by as created_3_13_9_, this_1_.updated_at as updated_4_13_9_, this_1_.updated_by as updated_5_13_9_, this_1_.author_id as author_17_13_9_, this_1_.body as body6_13_9_, this_1_.code as code7_13_9_, this_1_.cover_id as cover_i18_13_9_, this_1_.date as date8_13_9_, this_1_.drafted_id as drafted19_13_9_, this_1_.drafted_code as drafted_9_13_9_, this_1_.language as languag10_13_9_, this_1_.seo_description as seo_des11_13_9_, this_1_.seo_keywords as seo_key12_13_9_, this_1_.seo_title as seo_tit13_13_9_, this_1_.status as status14_13_9_, this_1_.title as title15_13_9_, this_1_.views as views16_13_9_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_11_, category4_.id as category1_14_11_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_12_, customfiel7_.id as id1_1_12_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_13_, tag12_.id as tag_id1_17_13_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_ from article this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where (this_.id in (?, ?))
called| list org.wallride.web.controller.admin.dashboardcontroller.recentdraftarticles(string) 
after rest| string org.wallride.web.controller.admin.dashboardcontroller.dashboard(string, model) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 2 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| page org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticles(articlesearchrequest, pageable) 
called| int org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.getindex(signature) 
called| int org.wallride.service.articleservice..enhancerbyspringcglib..d976d120..fastclassbyspringcglib..777432be.getindex(signature) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest, pageable) 
called| page com.sun.proxy..proxy184.search(articlesearchrequest, pageable) 
called| page org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_9_, this_1_.created_at as created_2_13_9_, this_1_.created_by as created_3_13_9_, this_1_.updated_at as updated_4_13_9_, this_1_.updated_by as updated_5_13_9_, this_1_.author_id as author_17_13_9_, this_1_.body as body6_13_9_, this_1_.code as code7_13_9_, this_1_.cover_id as cover_i18_13_9_, this_1_.date as date8_13_9_, this_1_.drafted_id as drafted19_13_9_, this_1_.drafted_code as drafted_9_13_9_, this_1_.language as languag10_13_9_, this_1_.seo_description as seo_des11_13_9_, this_1_.seo_keywords as seo_key12_13_9_, this_1_.seo_title as seo_tit13_13_9_, this_1_.status as status14_13_9_, this_1_.title as title15_13_9_, this_1_.views as views16_13_9_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_11_, category4_.id as category1_14_11_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_12_, customfiel7_.id as id1_1_12_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_13_, tag12_.id as tag_id1_17_13_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_ from article this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| itemplateresource org.wallride.autoconfigure.wallrideresourcetemplateresolver.computetemplateresource(iengineconfiguration, string, string, string, string, map) 
called| boolean org.wallride.autoconfigure.wallrideresourcetemplateresource.exists() 
called| reader org.wallride.autoconfigure.wallrideresourcetemplateresource.reader() 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++ 3 instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
before rest| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| articlesearchrequest org.wallride.web.controller.admin.article.articlesearchform.toarticlesearchrequest() 
called| locale org.wallride.web.support.pathvariablelocaleresolver.resolvelocale(httpservletrequest) 
called| blog org.wallride.service.blogservice..enhancerbyspringcglib..d485ea5a.getblogbyid(long) 
called| object org.wallride.autoconfigure.cachekeygenerator.generate(object, method, object[]) 
called| string org.wallride.web.controller.admin.article.articlesearchform.getkeyword() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getcategoryid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.gettagid() 
called| long org.wallride.web.controller.admin.article.articlesearchform.getauthorid() 
called| post.status org.wallride.web.controller.admin.article.articlesearchform.getstatus() 
called| page org.wallride.service.articleservice..enhancerbyspringcglib..d976d120.getarticles(articlesearchrequest, pageable) 
called| object org.wallride.service.articleservice..fastclassbyspringcglib..ddd42ffa.invoke(int, object, object[]) 
called| page org.wallride.service.articleservice.getarticles(articlesearchrequest, pageable) 
called| page com.sun.proxy..proxy184.search(articlesearchrequest, pageable) 
called| page org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest, pageable) 
called| fulltextquery org.wallride.repository.articlerepositoryimpl.buildfulltextquery(articlesearchrequest, pageable, criteria) 
called| directory org.wallride.autoconfigure.infinispansingletoncachemanagerdirectoryprovider.getdirectory() 
sql|select this_.id as id1_13_9_, this_1_.created_at as created_2_13_9_, this_1_.created_by as created_3_13_9_, this_1_.updated_at as updated_4_13_9_, this_1_.updated_by as updated_5_13_9_, this_1_.author_id as author_17_13_9_, this_1_.body as body6_13_9_, this_1_.code as code7_13_9_, this_1_.cover_id as cover_i18_13_9_, this_1_.date as date8_13_9_, this_1_.drafted_id as drafted19_13_9_, this_1_.drafted_code as drafted_9_13_9_, this_1_.language as languag10_13_9_, this_1_.seo_description as seo_des11_13_9_, this_1_.seo_keywords as seo_key12_13_9_, this_1_.seo_title as seo_tit13_13_9_, this_1_.status as status14_13_9_, this_1_.title as title15_13_9_, this_1_.views as views16_13_9_, user2_.id as id1_19_0_, user2_.created_at as created_2_19_0_, user2_.created_by as created_3_19_0_, user2_.updated_at as updated_4_19_0_, user2_.updated_by as updated_5_19_0_, user2_.description as descript6_19_0_, user2_.email as email7_19_0_, user2_.login_id as login_id8_19_0_, user2_.login_password as login_pa9_19_0_, user2_.name_first as name_fi10_19_0_, user2_.name_last as name_la11_19_0_, user2_.nickname as nicknam12_19_0_, categories3_.post_id as post_id2_14_11_, category4_.id as category1_14_11_, category4_.id as id1_5_1_, category4_.created_at as created_2_5_1_, category4_.created_by as created_3_5_1_, category4_.updated_at as updated_4_5_1_, category4_.updated_by as updated_5_5_1_, category4_.code as code6_5_1_, category4_.description as descript7_5_1_, category4_.language as language8_5_1_, category4_.lft as lft9_5_1_, category4_.name as name10_5_1_, category4_.parent_id as parent_12_5_1_, category4_.rgt as rgt11_5_1_, category5_.id as id1_5_2_, category5_.created_at as created_2_5_2_, category5_.created_by as created_3_5_2_, category5_.updated_at as updated_4_5_2_, category5_.updated_by as updated_5_5_2_, category5_.code as code6_5_2_, category5_.description as descript7_5_2_, category5_.language as language8_5_2_, category5_.lft as lft9_5_2_, category5_.name as name10_5_2_, category5_.parent_id as parent_12_5_2_, category5_.rgt as rgt11_5_2_, media6_.id as id1_8_3_, media6_.created_at as created_2_8_3_, media6_.created_by as created_3_8_3_, media6_.updated_at as updated_4_8_3_, media6_.updated_by as updated_5_8_3_, media6_.mime_type as mime_typ6_8_3_, media6_.original_name as original7_8_3_, customfiel7_.post_id as post_id12_1_12_, customfiel7_.id as id1_1_12_, customfiel7_.id as id1_1_4_, customfiel7_.created_at as created_2_1_4_, customfiel7_.created_by as created_3_1_4_, customfiel7_.updated_at as updated_4_1_4_, customfiel7_.updated_by as updated_5_1_4_, customfiel7_.custom_field_id as custom_11_1_4_, customfiel7_.date_value as date_val6_1_4_, customfiel7_.datetime_value as datetime7_1_4_, customfiel7_.number_value as number_v8_1_4_, customfiel7_.post_id as post_id12_1_4_, customfiel7_.string_value as string_v9_1_4_, customfiel7_.text_value as text_va10_1_4_, customfiel8_.id as id1_0_5_, customfiel8_.created_at as created_2_0_5_, customfiel8_.created_by as created_3_0_5_, customfiel8_.updated_at as updated_4_0_5_, customfiel8_.updated_by as updated_5_0_5_, customfiel8_.code as code6_0_5_, customfiel8_.default_value as default_7_0_5_, customfiel8_.description as descript8_0_5_, customfiel8_.field_type as field_ty9_0_5_, customfiel8_.idx as idx10_0_5_, customfiel8_.language as languag11_0_5_, customfiel8_.name as name12_0_5_, post9_.id as id1_13_6_, post9_.created_at as created_2_13_6_, post9_.created_by as created_3_13_6_, post9_.updated_at as updated_4_13_6_, post9_.updated_by as updated_5_13_6_, post9_.author_id as author_17_13_6_, post9_.body as body6_13_6_, post9_.code as code7_13_6_, post9_.cover_id as cover_i18_13_6_, post9_.date as date8_13_6_, post9_.drafted_id as drafted19_13_6_, post9_.drafted_code as drafted_9_13_6_, post9_.language as languag10_13_6_, post9_.seo_description as seo_des11_13_6_, post9_.seo_keywords as seo_key12_13_6_, post9_.seo_title as seo_tit13_13_6_, post9_.status as status14_13_6_, post9_.title as title15_13_6_, post9_.views as views16_13_6_, post9_1_.lft as lft1_10_6_, post9_1_.parent_id as parent_i4_10_6_, post9_1_.rgt as rgt2_10_6_, case when post9_1_.id is not null then ? when post9_2_.id is not null then ? when post9_.id is not null then ? end as clazz_6_, page10_.id as id1_13_7_, page10_1_.created_at as created_2_13_7_, page10_1_.created_by as created_3_13_7_, page10_1_.updated_at as updated_4_13_7_, page10_1_.updated_by as updated_5_13_7_, page10_1_.author_id as author_17_13_7_, page10_1_.body as body6_13_7_, page10_1_.code as code7_13_7_, page10_1_.cover_id as cover_i18_13_7_, page10_1_.date as date8_13_7_, page10_1_.drafted_id as drafted19_13_7_, page10_1_.drafted_code as drafted_9_13_7_, page10_1_.language as languag10_13_7_, page10_1_.seo_description as seo_des11_13_7_, page10_1_.seo_keywords as seo_key12_13_7_, page10_1_.seo_title as seo_tit13_13_7_, page10_1_.status as status14_13_7_, page10_1_.title as title15_13_7_, page10_1_.views as views16_13_7_, page10_.lft as lft1_10_7_, page10_.parent_id as parent_i4_10_7_, page10_.rgt as rgt2_10_7_, tags11_.post_id as post_id2_17_13_, tag12_.id as tag_id1_17_13_, tag12_.id as id1_18_8_, tag12_.created_at as created_2_18_8_, tag12_.created_by as created_3_18_8_, tag12_.updated_at as updated_4_18_8_, tag12_.updated_by as updated_5_18_8_, tag12_.language as language6_18_8_, tag12_.name as name7_18_8_ from article this_ inner join post this_1_ on this_.id=this_1_.id left outer join user user2_ on this_1_.author_id=user2_.id left outer join post_category categories3_ on this_.id=categories3_.post_id left outer join category category4_ on categories3_.category_id=category4_.id left outer join category category5_ on category4_.parent_id=category5_.id left outer join media media6_ on this_1_.cover_id=media6_.id left outer join custom_field_value customfiel7_ on this_.id=customfiel7_.post_id left outer join custom_field customfiel8_ on customfiel7_.custom_field_id=customfiel8_.id left outer join post post9_ on this_1_.drafted_id=post9_.id left outer join page post9_1_ on post9_.id=post9_1_.id left outer join article post9_2_ on post9_.id=post9_2_.id left outer join page page10_ on post9_1_.parent_id=page10_.id left outer join post page10_1_ on page10_.id=page10_1_.id left outer join post_tag tags11_ on this_.id=tags11_.post_id left outer join tag tag12_ on tags11_.tag_id=tag12_.id where (this_.id in (?, ?))
called| multivaluemap org.wallride.web.support.controllerutils.convertbeanforqueryparams(object, conversionservice) 
after rest| string org.wallride.web.controller.admin.article.articlesearchcontroller.search(string, articlesearchform, bindingresult, pageable, model, httpservletrequest) 
called| void org.wallride.web.support.defaultmodelattributeinterceptor.posthandle(httpservletrequest, httpservletresponse, object, modelandview) 
called| map org.wallride.web.support.defaultmodelattributeinterceptor.buildlanguagelinks(string, list, httpservletrequest) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildguestpath(string, list) 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminlink() 
called| string org.wallride.web.support.defaultmodelattributeinterceptor.buildadminpath(string) 
called| view org.wallride.web.support.extendedthymeleafviewresolver.createview(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processurl(httpservletrequest, string) 
called| set org.wallride.autoconfigure.wallrideexpressionobjectfactory.getallexpressionobjectnames() 
called| string org.wallride.support.stringformatter.parse(string, locale) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processaction(httpservletrequest, string, string) 
called| map org.wallride.web.support.bloglanguagedatavalueprocessor.getextrahiddenfields(httpservletrequest) 
called| string org.wallride.web.support.bloglanguagedatavalueprocessor.processformfieldvalue(httpservletrequest, string, string, string) 
called| long org.wallride.web.support.pagination.getnumberoffirstelement() 
called| long org.wallride.web.support.pagination.getnumberoflastelement() 
called| long org.wallride.web.support.pagination.gettotalelements() 
called| boolean org.wallride.web.support.pagination.haspreviouspage() 
called| string org.wallride.web.support.pagination.geturl() 
called| int org.wallride.web.support.pagination.getpreviouspagenumber() 
called| int org.wallride.web.support.pagination.getcurrentpagenumber() 
called| list org.wallride.web.support.pagination.getpageables(pageable) 
called| list org.wallride.web.support.pagination.getpageables(pageable, int) 
called| boolean org.wallride.web.support.pagination.hasnextpage() 
called| int org.wallride.web.support.pagination.getnextpagenumber() 
called| string org.wallride.support.authorizeduser.getusername() 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse, rulechain) 
called| rewrittenurl org.wallride.web.support.extendedurlrewritefilter.ruleimpl.matches(string, httpservletrequest, httpservletresponse) 
called| rewritematch org.wallride.web.support.bloglanguagerewriterule.matches(httpservletrequest, httpservletresponse) 
called| boolean org.wallride.web.support.extendedurlrewritefilter.ruleimpl.isfilter() 
called| handlerexecutionchain org.wallride.autoconfigure.wallridedispatcherservlet.gethandler(httpservletrequest) 
called| boolean org.wallride.web.support.setupredirectinterceptor.prehandle(httpservletrequest, httpservletresponse, object) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
path_ap:0.2638888888888889
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2]
request_ap:0.18962455606291226

-------------------------Top1 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articleindexcontroller.day(int,int,int,pageable,bloglanguage,httpservletrequest,model)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.9991660098018968
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9991660098018968
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.admin.article.articlesearchcontroller.search(string,articlesearchform,bindingresult,pageable,model,httpservletrequest)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.9991660098018968
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9991660098018968
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articleindexcontroller.month(int,int,pageable,bloglanguage,httpservletrequest,model)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.9991660098018968
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9991660098018968
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.feedcontroller.indexatom(bloglanguage,model)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.9991660098018968
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9991660098018968
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 5 are presented here)-------------------------------------
request:org.wallride.web.controller.guest.article.articleindexcontroller.year(int,pageable,bloglanguage,httpservletrequest,model)
method:org.wallride.service.articleservice.getarticles(articlesearchrequest,pageable)
method:org.wallride.repository.articlerepositoryimpl.search(articlesearchrequest,pageable)
[select from article inner join post left outer join user left outer join postcategory left outer join category left outer join category left outer join media left outer join customfieldvalue left outer join customfield left outer join post left outer join page left outer join article left outer join page left outer join post left outer join posttag left outer join tag where (article.id in (?))]

Syntactic Similarity:0.9991660098018968
Semantic Similarity:1.0
Combining Similarity Score (Syntactic Similarity + Semantic Similarity): 1.9991660098018968
Path matching:False
Request matching:False

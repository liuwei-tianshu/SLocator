##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.dounzip(syssite,sysuser,string,string,boolean,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.delete(serializable)
[delete from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysuserservice.deleteroleids(serializable,integer)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyroleid(integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyroleid(integer)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebyroleid(integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebyroleid(integer)
[delete from sysrolemodule bean where bean.id.roleid = :roleid]
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.deletebyroleid(integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.deletebyroleid(integer)
[delete from sysroleauthorized bean where bean.id.roleid = :roleid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.sys.usercontroller.saveemail(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyemail(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyemail(short,string)
##################################################################
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.delete(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.delete(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmswordservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.delete(serializable)
[delete from cmsword where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.save(syssite,sysuser,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.ckeditoradmincontroller.upload(syssite,sysuser,multipartfile,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.updateparentid(short,serializable,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.updateparentid(short,serializable,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.updateparentid(short,serializable,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,sysuser,integer[],integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.move(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.updateparentid(short,serializable,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.export(syssite,string,long,integer[],string,long,date,date,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getpage(short,long,string,string,long,date,date,date,integer[],boolean,string,string,integer,integer)
method:com.publiccms.logic.dao.cms.cmsplacedao.getpage(short,long,string,string,long,date,date,date,integer[],boolean,string,string,integer,integer)
[select from cmsplace bean where bean.siteid = :siteid and bean.userid = :userid and bean.path = :path and bean.itemtype = :itemtype and bean.itemid = :itemid and bean.publishdate > :startpublishdate and bean.publishdate <= :endpublishdate and (bean.expirydate is null or bean.expirydate >= :expirydate)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.export(syssite,string,long,integer[],string,long,date,date,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getpage(short,long,string,string,long,date,date,date,integer[],boolean,string,string,integer,integer)
method:com.publiccms.logic.dao.cms.cmsplacedao.getpage(short,long,string,string,long,date,date,date,integer[],boolean,string,string,integer,integer)
[select from cmsplace bean where bean.siteid = :siteid and bean.userid = :userid and bean.path = :path and bean.itemtype = :itemtype and bean.itemid = :itemid and bean.publishdate > :startpublishdate and bean.publishdate <= :endpublishdate and (bean.expirydate is null or bean.expirydate >= :expirydate)]
##################################################################
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.hidden(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.hidden(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmswordservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.dao.cms.cmsworddao.updatestatus(cmsword)
[update cmsword set hidden=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.savemetadata(syssite,sysuser,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmsdictionarydao.delete(serializable)
[delete from cmsdictionary where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.delete(short,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.delete(short,string[])
[delete from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid in (:dictionaryids)]
method:com.publiccms.logic.service.cms.cmsdictionaryservice.save(cmsdictionary)
method:com.publiccms.logic.dao.cms.cmsdictionarydao.save(cmsdictionary)
[insert into cmsdictionary (multiple, name, id, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.save(short,string,list<cmsdictionarydata>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.save(cmsdictionary)
method:com.publiccms.logic.dao.cms.cmsdictionarydao.save(cmsdictionary)
[insert into cmsdictionary (multiple, name, id, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.save(short,string,list<cmsdictionarydata>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.save(syssite,sysuser,cmsdictionary,string,cmsdictionaryparameters,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.update(serializable,cmsdictionary,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.update(serializable,cmsdictionary,string[])
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
[update cmsdictionary set name=? where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.update(short,string,list<cmsdictionarydata>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.getlist(short,string)
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.getlist(short,string)
[select from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid = :dictionaryid order by bean.id.value asc]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.save(syssite,sysuser,cmsword,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.save(cmsword)
method:com.publiccms.logic.dao.cms.cmsworddao.save(cmsword)
[insert into cmsword (createdate, hidden, name, searchcount, siteid) values (?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.save(syssite,sysuser,cmsword,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.save(syssite,sysuser,cmsword,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmswordservice.update(serializable,cmsword,string[])
method:com.publiccms.logic.dao.cms.cmsworddao.update(serializable,cmsword,string[])
[update cmsword set createdate=?, name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.save(syssite,sysuser,cmsword,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmswordservice.update(serializable,cmsword,string[])
method:com.publiccms.logic.dao.cms.cmsworddao.update(serializable,cmsword,string[])
[update cmsword set createdate=?, name=? where id=?]
##################################################################
request:com.publiccms.controller.admin.sys.fileadmincontroller.upload(syssite,sysuser,multipartfile,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.pause(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.pause(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.pause(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.pause(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.pause(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.pause(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.template.templatecomponent.clear()
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.site.menumessagecomponent.clear()
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.site.sitecomponent.clear()
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.site.statisticscomponent.clear()
method:com.publiccms.logic.service.cms.cmsplaceservice.updatestatistics(collection<clickstatistics>)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmswordservice.updatestatistics(collection<clickstatistics>)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmstagservice.updatestatistics(collection<clickstatistics>)
method:com.publiccms.logic.service.cms.cmstagservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagdao.getentity(serializable)
[select from cmstag where cmstag.id=?]
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.template.metadatacomponent.clear()
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.clearcache()
method:com.publiccms.logic.component.cache.cachecomponent.clear()
method:com.publiccms.logic.component.template.templatecachecomponent.clear()
method:com.publiccms.logic.service.tools.hqlservice.clear()
method:com.publiccms.logic.dao.tools.hqldao.clear()
##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.upload(syssite,sysuser,multipartfile[],string,boolean,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.delete(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.cms.commentcontroller.save(syssite,cmscomment,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.commentcontroller.save(syssite,cmscomment,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.commentcontroller.save(syssite,cmscomment,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.commentcontroller.save(syssite,cmscomment,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.commentcontroller.save(syssite,cmscomment,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.tasktemplateadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.loginadmincontroller.login(syssite,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.login(syssite,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.login(syssite,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.login(syssite,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.login(syssite,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.save(syssite,sysuser,cmstagtype,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.getentity(serializable)
[select from cmstagtype where cmstagtype.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.save(syssite,sysuser,cmstagtype,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.save(cmstagtype)
method:com.publiccms.logic.dao.cms.cmstagtypedao.save(cmstagtype)
[insert into cmstagtype (count, name, siteid) values (?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.save(syssite,sysuser,cmstagtype,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.getentity(serializable)
[select from cmstagtype where cmstagtype.id=?]
method:com.publiccms.logic.service.cms.cmstagtypeservice.update(serializable,cmstagtype,string[])
method:com.publiccms.logic.dao.cms.cmstagtypedao.update(serializable,cmstagtype,string[])
[update cmstagtype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.save(syssite,sysuser,cmstagtype,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.getentity(serializable)
[select from cmstagtype where cmstagtype.id=?]
method:com.publiccms.logic.service.cms.cmstagtypeservice.update(serializable,cmstagtype,string[])
method:com.publiccms.logic.dao.cms.cmstagtypedao.update(serializable,cmstagtype,string[])
[update cmstagtype set name=? where id=?]
##################################################################
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.changepassword(syssite,string,string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmstagservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmstagdao.delete(serializable)
[select from cmstag where cmstag.id in (?)]
[delete from cmstag where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.recreateindex(syssite,sysuser,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.save(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
##################################################################
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.save(syssite,sysuser,sysmodule,sysmoduleparameters,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.update(serializable,sysmodule)
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.save(sysmodule)
method:com.publiccms.logic.dao.sys.sysmoduledao.save(sysmodule)
[insert into sysmodule (url, authorized_url, attached, parent_id, menu, sort) values (?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.sys.sysmodulelangservice.save(string,string,list<sysmodulelang>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.virify(syssite,httpservletrequest,cmsdictionary,string)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsdictionarydao.getentity(serializable)
[select from cmsdictionary where cmsdictionary.id=? and cmsdictionary.siteid=?]
##################################################################
request:com.publiccms.controller.web.logincontroller.logout(syssite,long,string,httpservletrequest,httpservletresponse)
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
##################################################################
request:com.publiccms.controller.api.apicontroller.api(string,httpservletrequest,httpservletresponse)
method:com.publiccms.common.directive.basehttpdirective.execute(httpmessageconverter<object>,mediatype,httpservletrequest,httpservletresponse)
##################################################################
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.dao.sys.sysuserdao.updatestatus(serializable,boolean)
[update sysuser set disabled=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.delete(serializable)
[delete from sysmodule where id=?]
method:com.publiccms.logic.service.sys.sysmoduleservice.updateparentid(string,string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.delete(string)
method:com.publiccms.logic.service.sys.sysmodulelangservice.getlist(string,string)
method:com.publiccms.logic.dao.sys.sysmodulelangdao.getlist(string,string)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.deletebymoduleid(string)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.deletebymoduleid(string)
[delete from sysrolemodule bean where bean.id.moduleid = :moduleid]
method:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.dealroleauthorized(list<sysrolemodule>)
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsmodeladmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.getentity(serializable)
[select from cmstagtype where cmstagtype.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagtypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagtypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.getentity(serializable)
[select from cmstagtype where cmstagtype.id=?]
method:com.publiccms.logic.service.cms.cmstagtypeservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmstagtypedao.delete(serializable)
[delete from cmstagtype where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.upload(syssite,sysuser,multipartfile,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.saveconfig(syssite,sysuser,sysdomain,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.saveconfig(syssite,sysuser,sysdomain,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.saveconfig(syssite,sysuser,sysdomain,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.saveconfig(syssite,sysuser,sysdomain,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.delete(syssite,sysuser,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.log.logadmincontroller.loglogindelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logloginservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.log.logadmincontroller.loglogindelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logloginservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.dao.log.loglogindao.delete(serializable)
[delete from loglogin where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.uncheck(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.uncheck(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceservice.uncheck(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.refresh(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.save(cmscategorytype)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.save(cmscategorytype)
[insert into cmscategorytype (extendid, name, siteid, sort) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.save(syssite,sysuser,cmscategorytype,cmscategorytypeparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.update(serializable,cmscategorytype,string[])
method:com.publiccms.logic.dao.cms.cmscategorytypedao.update(serializable,cmscategorytype,string[])
[update cmscategorytype set name=? where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysextenddao.getentity(serializable)
[select from sysextend where id=?]
method:com.publiccms.logic.service.sys.sysextendservice.save(sysextend)
method:com.publiccms.logic.dao.sys.sysextenddao.save(sysextend)
[insert into sysextend (item_type, item_id) values (?, ?)]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.updateextendid(integer,integer)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.sys.sysextendfieldservice.update(integer,list<sysextendfield>)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysextendfieldservice.getlist(integer)
method:com.publiccms.logic.dao.sys.sysextendfielddao.getlist(integer)
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.delete(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.recreate(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.recreate(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.recreate(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.recreate(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.save(syssite,sysuser,cmsplace,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.delete(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.delete(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceservice.delete(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.tasktemplateadmincontroller.save(syssite,sysuser,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.ueditoradmincontroller.uploadscraw(syssite,sysuser,string,httpservletrequest,httpsession)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.uncheck(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.redirect(syssite,long,httpservletrequest,httpservletresponse)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceservice.updatestatistics(collection<clickstatistics>)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.redirect(syssite,long,httpservletrequest,httpservletresponse)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.redirect(syssite,long,httpservletrequest,httpservletresponse)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
##################################################################
request:com.publiccms.controller.admin.log.logadmincontroller.logoperatedelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.delete(short,serializable[])
method:com.publiccms.logic.service.log.logoperateservice.getentitys(serializable[])
method:com.publiccms.logic.dao.log.logoperatedao.getentitys(serializable[])
[select from logoperate where logoperate.id in (?) ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.log.logadmincontroller.logoperatedelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.delete(short,serializable[])
method:com.publiccms.logic.service.log.logoperateservice.getentitys(serializable[])
method:com.publiccms.logic.dao.log.logoperatedao.getentitys(serializable[])
[select from logoperate where logoperate.id in (?) ]
method:com.publiccms.logic.dao.log.logoperatedao.delete(serializable)
[delete from logoperate where logoperate.id=:id]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.resume(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.resume(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.resume(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.resume(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.resume(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.resume(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysroleuserdao.delete(serializable)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.update(serializable,sysuser,string[])
method:com.publiccms.logic.dao.sys.sysuserdao.update(serializable,sysuser,string[])
[select from sysuser where sysuser.id=?]
[update sysuser set email=?, nickname=?, weakpassword=? where id=?]
method:com.publiccms.logic.service.sys.sysroleuserservice.dealroleusers(long,integer[])
method:com.publiccms.logic.service.sys.sysroleuserservice.getpage(integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleuserdao.getpage(integer,long,integer,integer)
[select from sysroleuser bean where bean.id.roleid = :roleid and bean.id.userid = :userid]
method:com.publiccms.logic.service.sys.sysroleuserservice.deletebyuserid(long)
method:com.publiccms.logic.dao.sys.sysroleuserdao.deletebyuserid(long)
[delete from sysroleuser bean where bean.id.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.saveuser(syssite,sysuser,sysuser,string,integer[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.register(syssite,sysuser,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.findbynickname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbynickname(short,string)
[select from sysuser bean where bean.siteid = :siteid and bean.nickname = :nickname]
##################################################################
request:com.publiccms.controller.admin.sys.ueditoradmincontroller.upload(syssite,sysuser,multipartfile,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.sys.usercontroller.verifyemail(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.verifyemail(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.verifyemail(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysuserservice.checked(serializable,string)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.verifyemail(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysuserservice.checked(serializable,string)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.runonce(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.runonce(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.runonce(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.runonce(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.runonce(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.runonce(syssite,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysmoduleadmincontroller.virify(string,string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysmoduledao.getentity(serializable)
[select from sysmodule where id=?]
##################################################################
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.issue(syssite,sysuser,integer,date,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.issue(syssite,sysuser,integer,date,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.issue(syssite,sysuser,integer,date,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysapptokenadmincontroller.issue(syssite,sysuser,integer,date,httpservletrequest,httpsession,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.saveplace(syssite,sysuser,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.click(syssite,long,httpservletrequest)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceservice.updatestatistics(collection<clickstatistics>)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.click(syssite,long,httpservletrequest)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.click(syssite,long,httpservletrequest)
method:com.publiccms.logic.component.site.statisticscomponent.placeclicks(long)
##################################################################
request:com.publiccms.controller.admin.log.logadmincontroller.logtaskdelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logtaskservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.log.logadmincontroller.logtaskdelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logtaskservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.loginadmincontroller.changemyselfpassword(syssite,sysuser,string,string,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.changemyselfpassword(syssite,sysuser,string,string,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(long)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(long)
[delete from sysusertoken bean where bean.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.changemyselfpassword(syssite,sysuser,string,string,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(long)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(long)
[delete from sysusertoken bean where bean.userid = :userid]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.publishplace(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.delete(serializable)
[delete from cmscategorytype where id=?]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategorytypeadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscategorytypeservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.getentity(serializable)
[select from cmscategorytype where id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategorytypeservice.delete(serializable)
method:com.publiccms.logic.dao.cms.cmscategorytypedao.delete(serializable)
[delete from cmscategorytype where id=?]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
##################################################################
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.dao.sys.sysuserdao.updatestatus(serializable,boolean)
[update sysuser set disabled=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.refresh(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.refresh(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.refresh(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.show(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmswordadmincontroller.show(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.service.cms.cmswordservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.service.cms.cmswordservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsworddao.getentity(serializable)
[select from cmsword where cmsword.id=?]
method:com.publiccms.logic.dao.cms.cmsworddao.updatestatus(cmsword)
[update cmsword set hidden=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.save(syssite,sysuser,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.related(syssite,sysuser,cmscontentrelated,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.oauth.oauthcontroller.callback(string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysappclientservice.getentity(short,string,string)
method:com.publiccms.logic.dao.sys.sysappclientdao.getentity(short,string,string)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.web.oauth.oauthcontroller.callback(string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysappclientservice.getentity(short,string,string)
method:com.publiccms.logic.dao.sys.sysappclientdao.getentity(short,string,string)
------------------------------------------------------------------
request:com.publiccms.controller.web.oauth.oauthcontroller.callback(string,string,string,httpservletrequest,httpsession,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysappclientservice.getentity(short,string,string)
method:com.publiccms.logic.dao.sys.sysappclientdao.getentity(short,string,string)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.changetype(syssite,sysuser,integer,integer,httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.changetype(integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.recycle(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.recycle(short,serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.realdelete(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.realdelete(short,long[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.execsql(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.uncheck(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.check(syssite,sysuser,long[],httpservletrequest)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.checkoruncheck(syssite,sysuser,boolean,long[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscontentservice.check(short,sysuser,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.logincontroller.login(syssite,string,string,string,long,string,httpservletrequest,httpservletresponse,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.delete(short,string)
method:com.publiccms.logic.dao.cms.cmsplacedao.delete(short,string)
[delete from cmsplace bean where bean.siteid = :siteid and bean.path = :path]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmsplaceservice.delete(short,string)
method:com.publiccms.logic.dao.cms.cmsplacedao.delete(short,string)
[delete from cmsplace bean where bean.siteid = :siteid and bean.path = :path]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.clear(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmsplaceservice.delete(short,string)
method:com.publiccms.logic.dao.cms.cmsplacedao.delete(short,string)
[delete from cmsplace bean where bean.siteid = :siteid and bean.path = :path]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getpage(short,integer,long,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptdao.getpage(short,integer,long,integer,integer)
[select from sysdept where sysdept.siteid=? and sysdept.parentid=? order by id desc ]
method:com.publiccms.logic.dao.sys.sysdeptdao.delete(serializable)
[delete from sysdept where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.delete(short,integer)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.delete(integer,integer)
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.delete(integer,string)
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.delete(integer,string)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysconfigadmincontroller.save(syssite,sysuser,sysconfig,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmspageadmincontroller.clearcache(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.deleteplace(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.delete(short,string)
method:com.publiccms.logic.dao.cms.cmsplacedao.delete(short,string)
[delete from cmsplace bean where bean.siteid = :siteid and bean.path = :path]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.api.methodcontroller.method(string,string,httpservletrequest)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.api.methodcontroller.method(string,string,httpservletrequest)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,sysuser,integer[],integer,httpservletrequest,modelmap)
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,sysuser,integer[],integer,httpservletrequest,modelmap)
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,sysuser,integer[],integer,httpservletrequest,modelmap)
method:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.publish(syssite,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.ueditoradmincontroller.catchimage(syssite,sysuser,httpservletrequest,httpsession)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.log.logadmincontroller.loguploaddelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.log.logadmincontroller.loguploaddelete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.delete(short,serializable[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.dao.log.loguploaddao.delete(serializable)
[delete from logupload where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.save(syssite,sysuser,sysconfigdata,sysconfigparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.save(syssite,sysuser,sysconfigdata,sysconfigparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.save(syssite,sysuser,sysconfigdata,sysconfigparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.save(syssite,sysuser,sysconfigdata,sysconfigparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysconfigdataadmincontroller.save(syssite,sysuser,sysconfigdata,sysconfigparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.enable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.delete(syssite,sysuser,short,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.getpage(short,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysdomaindao.getpage(short,boolean,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.delete(syssite,sysuser,short,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.delete(syssite,sysuser,short,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.delete(syssite,sysuser,short,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.getpage(short,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysdomaindao.getpage(short,boolean,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.syssiteservice.update(serializable,syssite,string[])
method:com.publiccms.logic.dao.sys.syssitedao.update(serializable,syssite,string[])
[update syssite set name=? where id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.save(sysdept)
method:com.publiccms.logic.dao.sys.sysdeptdao.save(sysdept)
[insert into sysdept (description, maxsort, name, ownsallcategory, ownsallconfig, ownsallpage, parentid, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.syssiteservice.update(serializable,syssite,string[])
method:com.publiccms.logic.dao.sys.syssitedao.update(serializable,syssite,string[])
[update syssite set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptservice.save(sysdept)
method:com.publiccms.logic.dao.sys.sysdeptdao.save(sysdept)
[insert into sysdept (description, maxsort, name, ownsallcategory, ownsallconfig, ownsallpage, parentid, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.syssiteadmincontroller.save(syssite,sysuser,syssite,string,boolean,string,string,string,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptservice.save(sysdept)
method:com.publiccms.logic.dao.sys.sysdeptdao.save(sysdept)
[insert into sysdept (description, maxsort, name, ownsallcategory, ownsallconfig, ownsallpage, parentid, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysuserservice.save(sysuser)
method:com.publiccms.logic.dao.sys.sysuserdao.save(sysuser)
[insert into sysuser (deptid, disabled, email, emailchecked, lastlogindate, lastloginip, logincount, name, nickname, ownsallcontent, password, registereddate, roles, salt, siteid, superuseraccess, weakpassword) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysappadmincontroller.save(syssite,sysuser,sysapp,string[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.save(syssite,sysuser,sysapp,string[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.save(syssite,sysuser,sysapp,string[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.save(syssite,sysuser,sysapp,string[],httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.save(syssite,sysuser,sysapp,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.ueditoradmincontroller.listfile(sysuser,integer,httpservletrequest,httpsession)
method:com.publiccms.logic.service.log.loguploadservice.getpage(short,long,string,string[],string,string,string,string,integer,integer)
method:com.publiccms.logic.dao.log.loguploaddao.getpage(short,long,string,string[],string,string,string,string,integer,integer)
##################################################################
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.save(sysdept)
method:com.publiccms.logic.dao.sys.sysdeptdao.save(sysdept)
[insert into sysdept (description, maxsort, name, ownsallcategory, ownsallconfig, ownsallpage, parentid, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptcategorydao.getpage(integer,integer,integer,integer)
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.save(syssite,sysuser,sysdept,integer[],string[],string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.update(serializable,sysdept,string[])
method:com.publiccms.logic.dao.sys.sysdeptdao.update(serializable,sysdept,string[])
[update sysdept set description=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.sys.sysdeptcategoryservice.updatedeptcategorys(integer,integer[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.updatedeptpages(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptpageservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptpagedao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdeptconfigservice.updatedeptconfigs(integer,string[])
method:com.publiccms.logic.service.sys.sysdeptconfigservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysdeptconfigdao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmscommentadmincontroller.delete(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscommentadmincontroller.uncheck(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.web.sys.usercontroller.deletetoken(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.getentity(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
------------------------------------------------------------------
request:com.publiccms.controller.web.sys.usercontroller.deletetoken(syssite,string,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.getentity(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
##################################################################
request:com.publiccms.controller.admin.loginadmincontroller.logindialog(syssite,string,string,httpservletrequest,httpservletresponse,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.logindialog(syssite,string,string,httpservletrequest,httpservletresponse,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateweekpassword(serializable,boolean)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.logindialog(syssite,string,string,httpservletrequest,httpservletresponse,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.logindialog(syssite,string,string,httpservletrequest,httpservletresponse,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.loginadmincontroller.logindialog(syssite,string,string,httpservletrequest,httpservletresponse,httpsession,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.findbyname(short,string)
method:com.publiccms.logic.dao.sys.sysuserdao.findbyname(short,string)
[select from sysuser bean where sysuser.siteid = :siteid and sysuser.name = :name]
method:com.publiccms.logic.service.sys.sysuserservice.updatepassword(serializable,string,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updatepassword(serializable,string,string)
[update sysuser set password=?, salt=? where id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updateloginstatus(serializable,string)
method:com.publiccms.logic.dao.sys.sysuserdao.updateloginstatus(serializable,string)
[select from sysuser where sysuser.id=?]
[update sysuser set lastlogindate=?, logincount=? where id=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.save(sysusertoken)
method:com.publiccms.logic.dao.sys.sysusertokendao.save(sysusertoken)
[insert into sysusertoken (channel, createdate, expirydate, loginip, siteid, userid, authtoken) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logloginservice.save(loglogin)
method:com.publiccms.logic.dao.log.loglogindao.save(loglogin)
[insert into loglogin (channel, createdate, errorpassword, ip, name, result, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.createdirectory(syssite,sysuser,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.upload(syssite,sysuser,multipartfile[],string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.saveplacemetadata(syssite,sysuser,string,cmsplacemetadata,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.save(syssite,sysuser,cmstag,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagdao.getentity(serializable)
[select from cmstag where cmstag.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.save(syssite,sysuser,cmstag,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.save(cmstag)
method:com.publiccms.logic.dao.cms.cmstagdao.save(cmstag)
[insert into cmstag (name, searchcount, siteid, typeid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.save(syssite,sysuser,cmstag,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagdao.getentity(serializable)
[select from cmstag where cmstag.id=?]
method:com.publiccms.logic.service.cms.cmstagservice.update(serializable,cmstag,string[])
method:com.publiccms.logic.dao.cms.cmstagdao.update(serializable,cmstag,string[])
[update cmstag set name=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmstagadmincontroller.save(syssite,sysuser,cmstag,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmstagservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmstagdao.getentity(serializable)
[select from cmstag where cmstag.id=?]
method:com.publiccms.logic.service.cms.cmstagservice.update(serializable,cmstag,string[])
method:com.publiccms.logic.dao.cms.cmstagdao.update(serializable,cmstag,string[])
[update cmstag set name=? where id=?]
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.save(syssite,cmsplace,string,string,extenddataparameters,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.service.cms.cmsplaceattributeservice.updateattribute(long,string)
method:com.publiccms.common.base.baseservice.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmstemplateadmincontroller.savemetadata(syssite,sysuser,string,cmspagemetadata,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.save(sysrole)
method:com.publiccms.logic.dao.sys.sysroledao.save(sysrole)
[insert into sysrole (name, ownsallright, showallmodule, siteid) values (?, ?, ?, ?)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.dao.sys.sysmoduledao.getpage(string,boolean,integer,integer)
method:com.publiccms.logic.service.sys.sysmoduleservice.getpageurl(string)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysroleadmincontroller.save(syssite,sysuser,sysrole,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysroleservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysroledao.getentity(serializable)
[select from sysrole bean where bean.id=?]
method:com.publiccms.logic.service.sys.sysroleservice.update(serializable,sysrole,string[])
method:com.publiccms.logic.dao.sys.sysroledao.update(serializable,sysrole,string[])
[update sysrole set name=?, showallmodule=? where id=?]
method:com.publiccms.logic.service.sys.sysrolemoduleservice.updaterolemodules(integer,string[])
method:com.publiccms.logic.service.sys.sysrolemoduleservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysrolemoduledao.getpage(integer,string,integer,integer)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.dealrolemodules(integer,boolean,list<sysmodule>,set<string>)
method:com.publiccms.logic.service.sys.sysroleauthorizedservice.getpage(integer,string,integer,integer)
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.getpage(integer,string,integer,integer)
[select from sysroleauthorized bean where bean.id.roleid = :roleid and bean.id.url = :url]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.delete(serializable)
[delete from sysroleauthorized bean where bean.id.roleid = :id]
method:com.publiccms.logic.dao.sys.sysroleauthorizeddao.save(sysroleauthorized)
[insert into sysroleauthorized (roleid, url) values (?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.virify(syssite,httpservletrequest,string,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentitybycode(short,string)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentitybycode(short,string)
[select from cmscategory bean where bean.siteid = :siteid and bean.code = :code]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.unrelated(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.publish(syssite,cmscontent,sysuser)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.delete(syssite,sysuser,integer[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.delete(short,integer[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscontentservice.deletebycategoryids(short,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.deletebycategoryids(short,integer[])
[update cms_content bean set bean.disabled = :disabled where bean.siteid = :siteid and bean.categoryid in (:categoryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.delete(syssite,sysuser,integer[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.delete(short,integer[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.deletebycategoryids(short,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.deletebycategoryids(short,integer[])
[update cms_content bean set bean.disabled = :disabled where bean.siteid = :siteid and bean.categoryid in (:categoryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.delete(syssite,sysuser,integer[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.delete(short,integer[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.deletebycategoryids(short,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.deletebycategoryids(short,integer[])
[update cms_content bean set bean.disabled = :disabled where bean.siteid = :siteid and bean.categoryid in (:categoryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.delete(syssite,sysuser,integer[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.delete(short,integer[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.deletebycategoryids(short,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.deletebycategoryids(short,integer[])
[update cms_content bean set bean.disabled = :disabled where bean.siteid = :siteid and bean.categoryid in (:categoryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscategoryadmincontroller.delete(syssite,sysuser,integer[],httpservletrequest)
method:com.publiccms.logic.service.cms.cmscategoryservice.delete(short,integer[])
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.generatechildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getchildids(short,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.getpage(cmscategoryquery,integer,integer)
method:com.publiccms.logic.dao.cms.cmscategorydao.getpage(cmscategoryquery,integer,integer)
[select * from cms_category where bean.siteid = :siteid and bean.parentid = :parentid and bean.parentid is null and bean.typeid = :typeid]
method:com.publiccms.logic.service.cms.cmscategoryservice.updatechildids(serializable,string)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.cms.cmscontentservice.deletebycategoryids(short,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.deletebycategoryids(short,integer[])
[update cms_content bean set bean.disabled = :disabled where bean.siteid = :siteid and bean.categoryid in (:categoryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysconfigadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.sort(syssite,sysuser,long,int,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysuseradmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.dao.sys.sysuserdao.updatestatus(serializable,boolean)
[update sysuser set disabled=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdomainadmincontroller.save(syssite,sysuser,sysdomain,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdomainservice.update(serializable,sysdomain)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysappadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsdictionaryadmincontroller.delete(syssite,sysuser,string[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmsdictionaryservice.delete(serializable[])
method:com.publiccms.logic.dao.cms.cmsdictionarydao.delete(serializable)
[delete from cmsdictionary where id=? and siteid=?]
method:com.publiccms.logic.service.cms.cmsdictionarydataservice.delete(short,string[])
method:com.publiccms.logic.dao.cms.cmsdictionarydatadao.delete(short,string[])
[delete from cmsdictionarydata bean where bean.id.siteid = :siteid and bean.id.dictionaryid in (:dictionaryids)]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.changemodel(syssite,sysuser,long,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.changemodel(syssite,sysuser,long,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.changemodel(syssite,sysuser,long,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.changemodel(syssite,sysuser,long,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscommentadmincontroller.check(syssite,sysuser,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.api.directivecontroller.directive(string,httpservletrequest,httpservletresponse)
method:com.publiccms.common.directive.basehttpdirective.execute(httpmessageconverter<object>,mediatype,httpservletrequest,httpservletresponse)
##################################################################
request:com.publiccms.controller.admin.loginadmincontroller.logout(long,httpservletrequest,httpservletresponse)
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.export(syssite,cmscontentquery,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.export(syssite,cmscontentquery,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.export(syssite,cmscontentquery,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.export(syssite,cmscontentquery,string,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.cms.cmscontentservice.getpage(cmscontentquery,boolean,string,string,integer,integer)
method:com.publiccms.logic.service.cms.cmscontentservice.getcategoryids(boolean,integer,integer[])
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.dao.cms.cmscontentdao.getpage(cmscontentquery,string,string,integer,integer)
[select from cmscontent bean where bean.siteid = :siteid and bean.status in (:status) and bean.parentid = :parentid and bean.disabled = :disabled and bean.quotecontentid = :quotecontentid and bean.modelid in (:modelids) and bean.userid = :userid and bean.onlyurl = :onlyurl and bean.hasimages = :hasimages and (bean.title like :title)]
##################################################################
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.cms.cmscategoryservice.updateurl(serializable,string,boolean)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.logic.component.template.templatecomponent.createcategoryfile(syssite,cmscategory,integer,integer)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,sysuser,long[],integer,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentitys(serializable[])
method:com.publiccms.common.base.basedao.getentitys(serializable[])
method:com.publiccms.controller.admin.cms.cmscontentadmincontroller.move(syssite,cmscontent,integer)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.template.templatecomponent.createcontentfile(syssite,cmscontent,cmscategory,cmscategorymodel)
method:com.publiccms.logic.service.cms.cmscategoryservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmscategorydao.getentity(serializable)
[select from cmscategory where cmscategory.id=? ]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.sys.sysusertokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.getentity(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
method:com.publiccms.logic.service.sys.sysusertokenservice.delete(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.delete(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
[delete from sysusertoken sysusertok where sysusertok.auth_token=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysusertokenadmincontroller.delete(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysusertokenservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysusertokendao.getentity(serializable)
[select from sysusertoken where sysusertok.authtoken=?]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.delete(syssite,sysuser,integer,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.baseservice.delete(serializable)
method:com.publiccms.common.base.basedao.delete(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.kindeditoradmincontroller.upload(syssite,sysuser,multipartfile,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.loguploadservice.save(logupload)
method:com.publiccms.logic.dao.log.loguploaddao.save(logupload)
[insert into logupload (channel, createdate, filepath, filesize, filetype, ip, originalname, siteid, userid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.systaskadmincontroller.save(syssite,sysuser,systask,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
method:com.publiccms.logic.component.task.scheduledtask.create(syssite,integer,string)
##################################################################
request:com.publiccms.controller.web.cms.placecontroller.check(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
------------------------------------------------------------------
request:com.publiccms.controller.web.cms.placecontroller.check(syssite,long,string,httpservletrequest,httpsession,modelmap)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.cms.cmsplaceservice.check(serializable,long)
method:com.publiccms.logic.service.cms.cmsplaceservice.getentity(serializable)
method:com.publiccms.logic.dao.cms.cmsplacedao.getentity(serializable)
[select from cmsplace where cmsplace.id=? ]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsmodeladmincontroller.save(syssite,sysuser,cmsmodel,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.cms.cmsplaceadmincontroller.check(syssite,sysuser,string,long[],httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysdeptadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.logic.service.sys.sysuserservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysuserdao.getentity(serializable)
[select from sysuser where sysuser.id=?]
method:com.publiccms.logic.service.sys.sysdeptservice.getentity(serializable)
method:com.publiccms.logic.dao.sys.sysdeptdao.getentity(serializable)
[select from sysdept where sysdept.id=?]
method:com.publiccms.logic.service.sys.sysuserservice.updatestatus(serializable,boolean)
method:com.publiccms.logic.dao.sys.sysuserdao.updatestatus(serializable,boolean)
[update sysuser set disabled=? where id=?]
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
##################################################################
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]
------------------------------------------------------------------
request:com.publiccms.controller.admin.sys.sysappclientadmincontroller.disable(syssite,sysuser,long,httpservletrequest,modelmap)
method:com.publiccms.common.base.baseservice.getentity(serializable)
method:com.publiccms.common.base.basedao.getentity(serializable)
##################################################################
request:com.publiccms.controller.admin.cms.cmswebfileadmincontroller.dozip(syssite,sysuser,string,httpservletrequest,modelmap)
method:com.publiccms.logic.service.log.logoperateservice.save(logoperate)
method:com.publiccms.logic.dao.log.logoperatedao.save(logoperate)
[insert into logoperate (channel, content, createdate, ip, operate, siteid, userid) values (?, ?, ?, ?, ?, ?, ?)]

======================================= 1 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and item0_.i_subject=? order by item0_.i_pub_date desc, item0_.i_title limit ?
select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = 2 limit ?
Pre-processed SQL session queries : 
select from item cross join author where item.i_a_id=author.a_id and item.i_subject=?  order by limit ? 
select from item left join item left join item left join item left join item left join item where i.i_id = ?  limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string, model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.newproductscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl1(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getnewproducts(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and item0_.i_subject=? order by item0_.i_pub_date desc, item0_.i_title limit ?
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string, integer, integer, locale, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.3688046218107542
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.3688046218107541
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.3608708715975826
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.3608708715975826
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.14792677173415064
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1479267717341506
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.14792677173415064
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1479267717341506
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.11242905249949353
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1124290524994935
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.0726966518414891
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.072696651841489
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.35992150703379483
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.8599215070337949
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.1931914863053219
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6931914863053219
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.11990273371899761
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6199027337189976
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.39571922372665663
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5957192237266566
Path matching:False
Request matching:False



======================================= 2 given SQL query ===========================================
Given SQL session queries: 
select author0_.a_id as a1_1_, author0_.a_bio as a2_1_, author0_.a_dob as a3_1_, author0_.a_fname as a4_1_, author0_.a_lname as a5_1_, author0_.a_mname as a6_1_ from author author0_ cross join item item1_ where substring(soundex(author0_.a_lname), 1, 4)=substring(soundex(?), 1, 4) and item1_.i_a_id=author0_.a_id order by item1_.i_title limit ?
select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_a_id=? order by item0_.i_title limit ?
Pre-processed SQL session queries : 
select from author cross join item where substring(soundex(author.a_lname), ?, ?)=substring(soundex(?), ?, ?) and item.i_a_id=author.a_id  order by item.ititle limit ? 
select from item where item.i_a_id=?  order by item.ititle limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select author0_.a_id as a1_1_, author0_.a_bio as a2_1_, author0_.a_dob as a3_1_, author0_.a_fname as a4_1_, author0_.a_lname as a5_1_, author0_.a_mname as a6_1_ from author author0_ cross join item item1_ where substring(soundex(author0_.a_lname), ?, ?)=substring(soundex(?), ?, ?) and item1_.i_a_id=author0_.a_id order by item1_.i_title limit ?
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor) 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_a_id=? order by item0_.i_title limit ?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, False, False, False, False, False, False, False]
request_matching_number_k:[1, 2, 3, 3, 3, 3, 3, 3, 3, 3]
request_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.49995796622736294
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.499957966227363
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.517386257191015
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.017386257191015
Path matching:False
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.23718941563306345
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7371894156330634
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.12030770606776559
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6203077060677655
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.12030770606776559
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6203077060677655
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.0717263512965865
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5717263512965864
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.04155694695422593
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.541556946954226
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.12817425010351258
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4615075834368459
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.07636799498055247
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4097013283138858
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.10824473138916893
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.2749113980558356
Path matching:False
Request matching:False



======================================= 3 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and substring(soundex(item0_.i_title), 1, 4)=substring(soundex(?), 1, 4) order by item0_.i_title limit ?
select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
Pre-processed SQL session queries : 
select from item cross join author where item.i_a_id=author.a_id and substring(soundex(item.i_title), ?, ?)=substring(soundex(?), ?, ?)  order by item.ititle limit ? 
select from author where author.a_id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbytitle(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ cross join author author1_ where item0_.i_a_id=author1_.a_id and substring(soundex(item0_.i_title), ?, ?)=substring(soundex(?), ?, ?) order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False, False, False, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, False, True, False, False, False, False, False]
request_matching_number_k:[1, 2, 2, 2, 3, 3, 3, 3, 3, 3]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3]
request_ap:0.8666666666666667

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.4994814053399109
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.4994814053399108
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.5124939347213768
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0124939347213768
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1700774387603693
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6700774387603693
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1700774387603693
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6700774387603693
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.15183745358311984
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6518374535831198
Path matching:False
Request matching:True
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.06465061528462993
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5646506152846299
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.03876960537841319
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5387696053784132
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.16193117154380823
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4952645048771416
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.06633699316332357
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.3996703264966569
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.11099444656736185
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.27766111323402853
Path matching:False
Request matching:False



======================================= 4 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_subject=? order by item0_.i_title limit ?
select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
Pre-processed SQL session queries : 
select from item where item.i_subject=?  order by item.ititle limit ? 
select from author where author.a_id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.searchbysubject(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_, item0_.i_avail as i2_5_, item0_.i_backing as i3_5_, item0_.i_cost as i4_5_, item0_.i_desc as i5_5_, item0_.i_dimension as i6_5_, item0_.i_image as i7_5_, item0_.i_isbn as i8_5_, item0_.i_page as i9_5_, item0_.i_pub_date as i10_5_, item0_.i_publisher as i11_5_, item0_.i_random as i12_5_, item0_.i_related1 as i13_5_, item0_.i_related2 as i14_5_, item0_.i_related3 as i15_5_, item0_.i_related4 as i16_5_, item0_.i_related5 as i17_5_, item0_.i_srp as i18_5_, item0_.i_stock as i19_5_, item0_.i_subject as i20_5_, item0_.i_thumbnail as i21_5_, item0_.i_title as i22_5_, item0_.i_a_id as i23_5_ from item item0_ where item0_.i_subject=? order by item0_.i_title limit ?
sql|select author0_.a_id as a1_1_0_, author0_.a_bio as a2_1_0_, author0_.a_dob as a3_1_0_, author0_.a_fname as a4_1_0_, author0_.a_lname as a5_1_0_, author0_.a_mname as a6_1_0_ from author author0_ where author0_.a_id=?
called| void eu.cloudscale.showcase.servlets.searchcontroller.setupurls(model, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
called| string eu.cloudscale.showcase.servlets.searchcontroller.getproducturl(integer, integer) 
after rest| string eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False, False, False, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, False, False, False, False, False, False, False]
request_matching_number_k:[1, 2, 3, 3, 3, 3, 3, 3, 3, 3]
request_precision_k:[1.0, 1.0, 1.0, 0.75, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.2768661944210534
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2768661944210535
Path matching:False
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.2645890629786126
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7645890629786126
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.21821104188879992
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7182110418887999
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.18777791724505394
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.687777917245054
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.18777791724505394
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.687777917245054
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.05754035109892609
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5575403510989261
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.021193933099355286
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5211939330993552
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.18695953587351882
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5202928692068521
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.061917048043757236
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.39525038137709056
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.14624210142774166
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.3129087680944083
Path matching:False
Request matching:False



======================================= 5 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
Pre-processed SQL session queries : 
select from item cross join author where item.i_id=? and author.a_id=item.i_a_id 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 
called| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| string eu.cloudscale.showcase.servlets.productdetailservlet.buildaddtoshoppingcarturl(integer, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.productdetailservlet.buildadminurl(integer, integer, int) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.productdetailservlet.get(integer, integer, integer, httpservletrequest, locale, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, True, False, False, False, False, False, False, False]
path_matching_number_k:[0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[0.0, 0.0, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:0.3333333333333333
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, True, False, False, False, False, False, False, False]
request_matching_number_k:[0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[0.0, 0.0, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:0.3333333333333333

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.22216293017796096
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2221629301779608
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2131252003150407
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2131252003150408
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1551192795891196
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1551192795891196
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.06169322197639379
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0616932219763937
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.046598834831645
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.046598834831645
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.21367166493312484
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7136716649331248
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.15606926941000615
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6560692694100061
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.09735676117916985
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5973567611791698
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.12904980565230423
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.32904980565230424
Path matching:False
Request matching:False



======================================= 6 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
Pre-processed SQL session queries : 
select from item cross join author where item.i_id=? and author.a_id=item.i_a_id 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, True, False, False, False, False, False, False]
path_matching_number_k:[0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:0.25
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, True, False, False, False, False, False, False]
request_matching_number_k:[0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:0.25

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.22216293017796096
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2221629301779608
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2131252003150407
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2131252003150408
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1551192795891196
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1551192795891197
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1551192795891196
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.06169322197639379
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0616932219763937
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.046598834831645
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.046598834831645
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.21367166493312484
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7136716649331248
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.15606926941000615
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6560692694100061
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.09735676117916985
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5973567611791698
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.12904980565230423
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.32904980565230424
Path matching:False
Request matching:False



======================================= 7 given SQL query ===========================================
Given SQL session queries: 
select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?
Pre-processed SQL session queries : 
select from item cross join author where item.i_id=? and author.a_id=item.i_a_id 
update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related=?, i_related=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 
called| iitem eu.cloudscale.showcase.db.services.aservice.finditembyid(integer) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.saveitem(iitem) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|update item set i_avail=?, i_backing=?, i_cost=?, i_desc=?, i_dimension=?, i_image=?, i_isbn=?, i_page=?, i_pub_date=?, i_publisher=?, i_random=?, i_related1=?, i_related2=?, i_related3=?, i_related4=?, i_related5=?, i_srp=?, i_stock=?, i_subject=?, i_thumbnail=?, i_title=?, i_a_id=? where i_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer, double, string, string, httpservletrequest, model, redirectattributes) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, False, False, False, False, False, False, True, False, False]
path_matching_number_k:[0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
path_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.1111111111111111, 0.1]
path_ap:0.125
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, False, False, False, False, False, False, True, False, False]
request_matching_number_k:[0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
request_precision_k:[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.125, 0.1111111111111111, 0.1]
request_ap:0.125

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2733406602472745
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7733406602472745
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2710372231629868
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7710372231629867
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09791342491390959
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5979134249139095
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09791342491390959
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5979134249139095
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2606871729349374
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5940205062682706
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.03894161108588908
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5389416110858891
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.03846943149950842
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5384694314995084
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.10656740446955741
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.43990073780289074
Path matching:True
Request matching:True
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.06225281496366347
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.3955861482969968
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.07339751922597915
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.2400641858926458
Path matching:False
Request matching:False



======================================= 8 given SQL query ===========================================
Given SQL session queries: 
select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
insert into shopping_cart (sc_time) values (?)
select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
update shopping_cart set sc_time=? where sc_id=?
Pre-processed SQL session queries : 
select from shoppingcart where shoppingca.sc_id=? 
insert into shoppingcart values (?) 
select from item cross join author where item.i_id=? and author.a_id=item.i_a_id 
select from shoppingcartline where shoppingca.scl_sc_id=? and shoppingca.scl_i_id=?  limit ? 
insert into shoppingcartline values (?, ?, ?) 
update shopping_cart set sc_time=? where sc_id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.createemptycart() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into shopping_cart (sc_time) values (?)
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart, integer, list, list) 
called| iitem eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int) 
sql|select item0_.i_id as i1_5_0_, author1_.a_id as a1_1_1_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_, author1_.a_bio as a2_1_1_, author1_.a_dob as a3_1_1_, author1_.a_fname as a4_1_1_, author1_.a_lname as a5_1_1_, author1_.a_mname as a6_1_1_ from item item0_ cross join author author1_ where item0_.i_id=? and author1_.a_id=item0_.i_a_id
called| void eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart, iitem) 
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer, int) 
sql|select shoppingca0_.scl_id as scl1_9_, shoppingca0_.scl_i_id as scl3_9_, shoppingca0_.scl_qty as scl2_9_, shoppingca0_.scl_sc_id as scl4_9_ from shopping_cart_line shoppingca0_ where shoppingca0_.scl_sc_id=? and shoppingca0_.scl_i_id=? limit ?
called| ishoppingcartline eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject() 
sql|insert into shopping_cart_line (scl_i_id, scl_qty, scl_sc_id) values (?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart, list, list) 
called| void eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart) 
called| void eu.cloudscale.showcase.db.services.aservice.resetcarttime(ishoppingcart) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object, boolean) 
sql|update shopping_cart set sc_time=? where sc_id=?
called| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.getcustomerregistrationurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, False, False, True, True, False, False, False]
path_matching_number_k:[1, 2, 2, 2, 2, 3, 4, 4, 4, 4]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.5, 0.4, 0.5, 0.5714285714285714, 0.5, 0.4444444444444444, 0.4]
path_ap:0.7678571428571428
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True, True, True, True, True, True]
request_matching_number_k:[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.22385185753398998
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0571851908673233
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.22385185753398998
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0571851908673233
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.21368544690301217
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0470187802363455
Path matching:False
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.21368544690301217
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0470187802363455
Path matching:False
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.21368544690301217
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0470187802363455
Path matching:False
Request matching:True
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.20998257794468975
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.043315911278023
Path matching:True
Request matching:True
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.20998257794468975
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.043315911278023
Path matching:True
Request matching:True
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.20955593591134916
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0428892692446825
Path matching:False
Request matching:True
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.20955593591134916
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0428892692446825
Path matching:False
Request matching:True
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.20269375907797765
Semantic Similarity:0.8333333333333334
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.036027092411311
Path matching:False
Request matching:True



======================================= 9 given SQL query ===========================================
Given SQL session queries: 
select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?
Pre-processed SQL session queries : 
select from country where country.co_name=? 
insert into address values (?, ?, ?, ?, ?, ?) 
insert into customer values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
select from shoppingcart where shoppingca.sc_id=? 
select from shoppingcartline inner join item where shoppingca.scl_sc_id=? 
update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buycontroller.checkemptiness(string, string, arraylist) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getcustomerobject() 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject() 
called| iaddress eu.cloudscale.showcase.db.services.aservice.getaddressobject() 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| icountry eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress) 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer) 
sql|insert into customer (c_balance, c_birthdate, c_data, c_discount, c_email, c_expiration, c_fname, c_last_visit, c_lname, c_login, c_passwd, c_phone, c_since, c_uname, c_ytd_pmt, c_addr_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int, int) 
called| string eu.cloudscale.showcase.servlets.buycontroller.digsyl(int) 
called| ishoppingcart eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buycontroller.get(integer, integer, string, httpservletrequest, model) 
sql|update customer set c_balance=?, c_birthdate=?, c_data=?, c_discount=?, c_email=?, c_expiration=?, c_fname=?, c_last_visit=?, c_lname=?, c_login=?, c_passwd=?, c_phone=?, c_since=?, c_uname=?, c_ytd_pmt=?, c_addr_id=? where c_id=?

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.2643119173940021
Semantic Similarity:0.6666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.9309785840606688
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.2448965266720892
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5782298600054225
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.2448965266720892
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5782298600054225
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.2422918092992207
Semantic Similarity:0.3
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5422918092992207
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.2422918092992207
Semantic Similarity:0.3
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5422918092992207
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.13483524146208586
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4681685747954192
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.17823738364672603
Semantic Similarity:0.25
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.42823738364672603
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.16285081505982754
Semantic Similarity:0.25
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.41285081505982757
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.14821609769819055
Semantic Similarity:0.25
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.39821609769819055
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.shoppingcartcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.createemptycart()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.docart(ishoppingcart,integer,list,list)
method:eu.cloudscale.showcase.db.services.aservice.refreshcart(ishoppingcart,list,list)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.addrandomitemtocartifnecessary(ishoppingcart)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getrandomitem()
[select i from item as i order by rand()]
method:eu.cloudscale.showcase.db.services.aservice.additem(ishoppingcart,iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getbyscanditem(integer,int)
[select scl from shoppingcartline as scl where scl.shoppingcart.scid = :scid and scl.item.iid = :itemid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into shopping_cart_line values (?, ?, ?)]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object,boolean)
[insert into shopping_cart values (?, ?, ?)]

Syntactic Similarity:0.17103065932985564
Semantic Similarity:0.2222222222222222
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.3932528815520778
Path matching:False
Request matching:False



======================================= 10 given SQL query ===========================================
Given SQL session queries: 
select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
Pre-processed SQL session queries : 
select from country where country.co_name=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest, model, redirectattributes) 
called| future eu.cloudscale.showcase.servlets.helpers.paymentservice.callpaymentservice(string, string, string, string) 
called| string eu.cloudscale.showcase.servlets.helpers.paymentservice.geturl(string, string, string, string) 
called| response eu.cloudscale.showcase.servlets.helpers.request.call() 
called| inputstream eu.cloudscale.showcase.servlets.helpers.response.getbody() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[False, True, False, False, False, False, False, False, False, False]
path_matching_number_k:[0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:0.5
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[False, True, False, False, False, False, False, False, False, False]
request_matching_number_k:[0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:0.5

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]

Syntactic Similarity:0.23854943900440032
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2385494390044003
Path matching:False
Request matching:False
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.paymentcontroller.get(httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.servlets.paymentcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]

Syntactic Similarity:0.23854943900440032
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.2385494390044003
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.20988007196731004
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7098800719673101
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1685609592279741
Semantic Similarity:0.25
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4185609592279741
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1920704137854663
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.35873708045213293
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.1920704137854663
Semantic Similarity:0.16666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.35873708045213293
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.18981577098791702
Semantic Similarity:0.14285714285714285
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.33267291384505987
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.18981577098791702
Semantic Similarity:0.14285714285714285
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.33267291384505987
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.14535258347728258
Semantic Similarity:0.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.14535258347728258
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.13158904968377585
Semantic Similarity:0.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.13158904968377585
Path matching:False
Request matching:False



======================================= 11 given SQL query ===========================================
Given SQL session queries: 
select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
delete from shopping_cart_line where scl_id=?
Pre-processed SQL session queries : 
select from country where country.co_name=? 
select from shoppingcart where shoppingca.sc_id=? 
select from shoppingcartline inner join item where shoppingca.scl_sc_id=? 
select from customer inner join address left outer join country where customer.c_id=? 
insert into address values (?, ?, ?, ?, ?, ?) 
insert into orders values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
insert into orderline values (?, ?, ?, ?, ?) 
insert into ccxacts values (?, ?, ?, ?, ?, ?, ?, ?, ?) 
delete from shopping_cart_line where scl_id=?

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string, string, string, string, string, string) 
called| void eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist, integer, integer, string, long, string, date, string) 
called| boolean eu.cloudscale.showcase.db.services.aservice.countryexist(string) 
called| icountry eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select country0_.co_id as co1_3_, country0_.co_currency as co2_3_, country0_.co_exchange as co3_3_, country0_.co_name as co4_3_ from country country0_ where country0_.co_name=?
called| buyconfirmresult eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer, integer, string, long, string, date, string, string, string, string, string, string, string) 
called| ishoppingcart eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer) 
sql|select shoppingca0_.sc_id as sc1_8_, shoppingca0_.sc_time as sc2_8_ from shopping_cart shoppingca0_ where shoppingca0_.sc_id=?
sql|select shoppingca0_.scl_sc_id as scl4_8_2_, shoppingca0_.scl_id as scl1_9_2_, shoppingca0_.scl_id as scl1_9_1_, shoppingca0_.scl_i_id as scl3_9_1_, shoppingca0_.scl_qty as scl2_9_1_, shoppingca0_.scl_sc_id as scl4_9_1_, item1_.i_id as i1_5_0_, item1_.i_avail as i2_5_0_, item1_.i_backing as i3_5_0_, item1_.i_cost as i4_5_0_, item1_.i_desc as i5_5_0_, item1_.i_dimension as i6_5_0_, item1_.i_image as i7_5_0_, item1_.i_isbn as i8_5_0_, item1_.i_page as i9_5_0_, item1_.i_pub_date as i10_5_0_, item1_.i_publisher as i11_5_0_, item1_.i_random as i12_5_0_, item1_.i_related1 as i13_5_0_, item1_.i_related2 as i14_5_0_, item1_.i_related3 as i15_5_0_, item1_.i_related4 as i16_5_0_, item1_.i_related5 as i17_5_0_, item1_.i_srp as i18_5_0_, item1_.i_stock as i19_5_0_, item1_.i_subject as i20_5_0_, item1_.i_thumbnail as i21_5_0_, item1_.i_title as i22_5_0_, item1_.i_a_id as i23_5_0_ from shopping_cart_line shoppingca0_ inner join item item1_ on shoppingca0_.scl_i_id=item1_.i_id where shoppingca0_.scl_sc_id=?
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer) 
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| double eu.cloudscale.showcase.db.services.aservice.getcdiscount(icustomer) 
called| iaddress eu.cloudscale.showcase.db.services.aservice.saveaddress(string, string, string, string, string, string) 
called| iaddress eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject() 
called| object eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object) 
sql|insert into address (addr_city, addr_state, addr_street1, addr_street2, addr_zip, addr_co_id) values (?, ?, ?, ?, ?, ?)
called| iorders eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress, icustomer, string, ishoppingcart, double) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject() 
called| double eu.cloudscale.showcase.db.services.aservice.calculatetotal(ishoppingcart) 
sql|insert into orders (o_date, o_ship_date, o_ship_type, o_status, o_sub_total, o_tax, o_total, o_bill_addr_id, o_ship_addr_id, o_c_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
called| iorderline eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject() 
called| string eu.cloudscale.showcase.db.services.aservice.getrandomstring(int, int) 
sql|insert into order_line (ol_i_id, ol_comment, ol_discount, ol_qty, ol_o_id) values (?, ?, ?, ?, ?)
called| iccxacts eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders, string, long, string, date, ishoppingcart, iaddress) 
called| iccxacts eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject() 
sql|insert into cc_xacts (cx_co_id, cx_auth_id, cx_expiry, cx_name, cx_num, cx_type, cx_xact_amt, cx_xact_date, cx_o_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
called| void eu.cloudscale.showcase.db.services.aservice.clearcart(integer) 
called| void eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline) 
sql|delete from shopping_cart_line where scl_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest, model) 
called| ishoppingcart eu.cloudscale.showcase.db.buyconfirmresult.getcart() 
called| iorders eu.cloudscale.showcase.db.buyconfirmresult.getorder() 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, True, True, False, False, False, False, False, False]
path_matching_number_k:[1, 2, 3, 4, 4, 4, 4, 4, 4, 4]
path_precision_k:[1.0, 1.0, 1.0, 1.0, 0.8, 0.6666666666666666, 0.5714285714285714, 0.5, 0.4444444444444444, 0.4]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, True, True, True, True, True, True, False, False]
request_matching_number_k:[1, 2, 3, 4, 5, 6, 7, 8, 8, 8]
request_precision_k:[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8888888888888888, 0.8]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.41752330025676176
Semantic Similarity:0.7777777777777778
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1953010780345394
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.41752330025676176
Semantic Similarity:0.7777777777777778
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.1953010780345394
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.4100356366964328
Semantic Similarity:0.6666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0767023033630994
Path matching:True
Request matching:True
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.buyconfirmcontroller.checkemptiness(arraylist,integer,integer,string,long,string,date,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.services.aservice.countryexist(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string,string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(string,string,string,string,string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.4100356366964328
Semantic Similarity:0.6666666666666666
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0767023033630994
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.33844258732641114
Semantic Similarity:0.5555555555555556
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.8939981428819668
Path matching:False
Request matching:True
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartlinedaoimpl.delete(ishoppingcartline)
[delete  from shoppingcartline as scl where scl.scl_id = :scid]

Syntactic Similarity:0.33844258732641114
Semantic Similarity:0.5555555555555556
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.8939981428819668
Path matching:False
Request matching:True
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.32389108954482104
Semantic Similarity:0.4444444444444444
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7683355339892655
Path matching:False
Request matching:True
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buyconfirmcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.dobuyconfirm(integer,integer,string,long,string,date,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]
method:eu.cloudscale.showcase.db.services.aservice.getcart(integer,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]
method:eu.cloudscale.showcase.db.services.aservice.saveorder(iaddress,icustomer,string,ishoppingcart,double)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into orders values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.saveccxacts(iorders,string,long,string,date,ishoppingcart,iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ccxactsdaoimpl.getobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into cc_xacts values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.clearcart(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.32389108954482104
Semantic Similarity:0.4444444444444444
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7683355339892655
Path matching:False
Request matching:True
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getcustomerobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getaddressobject()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.addressdaoimpl.getobject()
method:eu.cloudscale.showcase.db.services.aservice.getcountrybyname(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.countrydaoimpl.getbyname(string)
[select c from country as c where c.coname = :countryname]
method:eu.cloudscale.showcase.db.services.aservice.saveaddress(iaddress)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into address values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.43222131846298867
Semantic Similarity:0.3
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7322213184629887
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.5240419477343616
Semantic Similarity:0.07692307692307693
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6009650246574385
Path matching:False
Request matching:False



======================================= 12 given SQL query ===========================================
Given SQL session queries: 
select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
Pre-processed SQL session queries : 
select from customer where customer.c_uname=? and customer.c_passwd=?  limit ? 
select from address inner join country where address.addr_id=? 
select from orders cross join customer where orders.o_c_id=customer.c_id and customer.c_id=?  order by limit ? 
select from customer inner join address left outer join country where customer.c_id=? 
select from orderline where orderline.ol_o_id=? 
select from item where item.i_id=? 
select from orders inner join address left outer join country inner join address inner join customer left outer join address where orders.o_id=? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| icustomer eu.cloudscale.showcase.db.services.aservice.getuserby(string, string) 
called| icustomer eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string, string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select customer0_.c_id as c1_4_, customer0_.c_balance as c2_4_, customer0_.c_birthdate as c3_4_, customer0_.c_data as c4_4_, customer0_.c_discount as c5_4_, customer0_.c_email as c6_4_, customer0_.c_expiration as c7_4_, customer0_.c_fname as c8_4_, customer0_.c_last_visit as c9_4_, customer0_.c_lname as c10_4_, customer0_.c_login as c11_4_, customer0_.c_passwd as c12_4_, customer0_.c_phone as c13_4_, customer0_.c_since as c14_4_, customer0_.c_uname as c15_4_, customer0_.c_ytd_pmt as c16_4_, customer0_.c_addr_id as c17_4_ from customer customer0_ where customer0_.c_uname=? and customer0_.c_passwd=? limit ?
sql|select address0_.addr_id as addr1_0_1_, address0_.addr_city as addr2_0_1_, address0_.addr_state as addr3_0_1_, address0_.addr_street1 as addr4_0_1_, address0_.addr_street2 as addr5_0_1_, address0_.addr_zip as addr6_0_1_, address0_.addr_co_id as addr7_0_1_, country1_.co_id as co1_3_0_, country1_.co_currency as co2_3_0_, country1_.co_exchange as co3_3_0_, country1_.co_name as co4_3_0_ from address address0_ inner join country country1_ on address0_.addr_co_id=country1_.co_id where address0_.addr_id=?
called| iorders eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer) 
called| iorders eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer) 
sql|select orders0_.o_id as o1_7_, orders0_.o_date as o2_7_, orders0_.o_ship_date as o3_7_, orders0_.o_ship_type as o4_7_, orders0_.o_status as o5_7_, orders0_.o_sub_total as o6_7_, orders0_.o_tax as o7_7_, orders0_.o_total as o8_7_, orders0_.o_bill_addr_id as o9_7_, orders0_.o_ship_addr_id as o10_7_, orders0_.o_c_id as o11_7_ from orders orders0_ cross join customer customer1_ where orders0_.o_c_id=customer1_.c_id and customer1_.c_id=? order by orders0_.o_date, orders0_.o_id desc limit ?
sql|select customer0_.c_id as c1_4_2_, customer0_.c_balance as c2_4_2_, customer0_.c_birthdate as c3_4_2_, customer0_.c_data as c4_4_2_, customer0_.c_discount as c5_4_2_, customer0_.c_email as c6_4_2_, customer0_.c_expiration as c7_4_2_, customer0_.c_fname as c8_4_2_, customer0_.c_last_visit as c9_4_2_, customer0_.c_lname as c10_4_2_, customer0_.c_login as c11_4_2_, customer0_.c_passwd as c12_4_2_, customer0_.c_phone as c13_4_2_, customer0_.c_since as c14_4_2_, customer0_.c_uname as c15_4_2_, customer0_.c_ytd_pmt as c16_4_2_, customer0_.c_addr_id as c17_4_2_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_ from customer customer0_ inner join address address1_ on customer0_.c_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id where customer0_.c_id=?
called| list eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders) 
sql|select orderline0_.ol_id as ol1_6_, orderline0_.ol_i_id as ol5_6_, orderline0_.ol_comment as ol2_6_, orderline0_.ol_discount as ol3_6_, orderline0_.ol_qty as ol4_6_, orderline0_.ol_o_id as ol6_6_ from order_line orderline0_ where orderline0_.ol_o_id=?
sql|select item0_.i_id as i1_5_0_, item0_.i_avail as i2_5_0_, item0_.i_backing as i3_5_0_, item0_.i_cost as i4_5_0_, item0_.i_desc as i5_5_0_, item0_.i_dimension as i6_5_0_, item0_.i_image as i7_5_0_, item0_.i_isbn as i8_5_0_, item0_.i_page as i9_5_0_, item0_.i_pub_date as i10_5_0_, item0_.i_publisher as i11_5_0_, item0_.i_random as i12_5_0_, item0_.i_related1 as i13_5_0_, item0_.i_related2 as i14_5_0_, item0_.i_related3 as i15_5_0_, item0_.i_related4 as i16_5_0_, item0_.i_related5 as i17_5_0_, item0_.i_srp as i18_5_0_, item0_.i_stock as i19_5_0_, item0_.i_subject as i20_5_0_, item0_.i_thumbnail as i21_5_0_, item0_.i_title as i22_5_0_, item0_.i_a_id as i23_5_0_ from item item0_ where item0_.i_id=?
sql|select orders0_.o_id as o1_7_5_, orders0_.o_date as o2_7_5_, orders0_.o_ship_date as o3_7_5_, orders0_.o_ship_type as o4_7_5_, orders0_.o_status as o5_7_5_, orders0_.o_sub_total as o6_7_5_, orders0_.o_tax as o7_7_5_, orders0_.o_total as o8_7_5_, orders0_.o_bill_addr_id as o9_7_5_, orders0_.o_ship_addr_id as o10_7_5_, orders0_.o_c_id as o11_7_5_, address1_.addr_id as addr1_0_0_, address1_.addr_city as addr2_0_0_, address1_.addr_state as addr3_0_0_, address1_.addr_street1 as addr4_0_0_, address1_.addr_street2 as addr5_0_0_, address1_.addr_zip as addr6_0_0_, address1_.addr_co_id as addr7_0_0_, country2_.co_id as co1_3_1_, country2_.co_currency as co2_3_1_, country2_.co_exchange as co3_3_1_, country2_.co_name as co4_3_1_, address3_.addr_id as addr1_0_2_, address3_.addr_city as addr2_0_2_, address3_.addr_state as addr3_0_2_, address3_.addr_street1 as addr4_0_2_, address3_.addr_street2 as addr5_0_2_, address3_.addr_zip as addr6_0_2_, address3_.addr_co_id as addr7_0_2_, customer4_.c_id as c1_4_3_, customer4_.c_balance as c2_4_3_, customer4_.c_birthdate as c3_4_3_, customer4_.c_data as c4_4_3_, customer4_.c_discount as c5_4_3_, customer4_.c_email as c6_4_3_, customer4_.c_expiration as c7_4_3_, customer4_.c_fname as c8_4_3_, customer4_.c_last_visit as c9_4_3_, customer4_.c_lname as c10_4_3_, customer4_.c_login as c11_4_3_, customer4_.c_passwd as c12_4_3_, customer4_.c_phone as c13_4_3_, customer4_.c_since as c14_4_3_, customer4_.c_uname as c15_4_3_, customer4_.c_ytd_pmt as c16_4_3_, customer4_.c_addr_id as c17_4_3_, address5_.addr_id as addr1_0_4_, address5_.addr_city as addr2_0_4_, address5_.addr_state as addr3_0_4_, address5_.addr_street1 as addr4_0_4_, address5_.addr_street2 as addr5_0_4_, address5_.addr_zip as addr6_0_4_, address5_.addr_co_id as addr7_0_4_ from orders orders0_ inner join address address1_ on orders0_.o_bill_addr_id=address1_.addr_id left outer join country country2_ on address1_.addr_co_id=country2_.co_id inner join address address3_ on orders0_.o_ship_addr_id=address3_.addr_id inner join customer customer4_ on orders0_.o_c_id=customer4_.c_id left outer join address address5_ on customer4_.c_addr_id=address5_.addr_id where orders0_.o_id=?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, True, False, True, False, False, False, False, False, False]
path_matching_number_k:[1, 2, 2, 3, 3, 3, 3, 3, 3, 3]
path_precision_k:[1.0, 1.0, 0.6666666666666666, 0.75, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3]
path_ap:0.9166666666666666
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, True, False, True, False, False, False, False, False, False]
request_matching_number_k:[1, 2, 2, 3, 3, 3, 3, 3, 3, 3]
request_precision_k:[1.0, 1.0, 0.6666666666666666, 0.75, 0.6, 0.5, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3]
request_ap:0.9166666666666666

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.6709349968115202
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.6709349968115204
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]

Syntactic Similarity:0.4596536497395389
Semantic Similarity:0.6
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.059653649739539
Path matching:True
Request matching:True
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3854510013257127
Semantic Similarity:0.4
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7854510013257128
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]

Syntactic Similarity:0.3854510013257127
Semantic Similarity:0.4
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7854510013257128
Path matching:True
Request matching:True
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.logincontroller.post(string,string,string,httpsession,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.savecustomer(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into customer values (?, ?, ?)]

Syntactic Similarity:0.39379709908473953
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7271304324180728
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.buycontroller.get(integer,integer,string,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.findshoppingcartbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.shoppingcartdaoimpl.findbyid(integer)
[select sc from shoppingcart as sc where sc.scid = :scid]

Syntactic Similarity:0.3693679623016493
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7027012956349826
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.21388259203221432
Semantic Similarity:0.4
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6138825920322144
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.customerregistrationcontroller.get(integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.findcustomerbyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.findbyid(integer)
[select c from customer as c where c.c_id = :id]

Syntactic Similarity:0.26883574660690973
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.46883574660690974
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.2207264560429934
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4207264560429934
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.21585957430169406
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.41585957430169407
Path matching:False
Request matching:False



======================================= 13 given SQL query ===========================================
Given SQL session queries: 
select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = 2 limit ?
Pre-processed SQL session queries : 
select from item left join item left join item left join item left join item left join item where i.i_id = ?  limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl1(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| list eu.cloudscale.showcase.servlets.homecontroller.preparecategories(string) 
called| string eu.cloudscale.showcase.servlets.homecontroller.getproducturl(integer, integer) 
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.homecontroller.home(integer, integer, locale, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.43094755142260904
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.430947551422609
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.42947459213728834
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.4294745921372884
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09951777116310984
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.09951777116311
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.09951777116310984
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.09951777116311
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.08118148587656264
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0811814858765627
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.039824791875460584
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.0398247918754606
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.41567277613143383
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.9156727761314338
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.1571825760754172
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6571825760754172
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.4263576995143254
Semantic Similarity:0.2
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6263576995143254
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.06722320341695517
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5672232034169552
Path matching:False
Request matching:False



======================================= 14 given SQL query ===========================================
Given SQL session queries: 
select item1_.i_id as col_0_0_, author2_.a_fname as col_1_0_, author2_.a_lname as col_2_0_, item1_.i_title as col_3_0_, sum(orderline0_.ol_qty) as col_4_0_ from order_line orderline0_ cross join item item1_ cross join author author2_ where item1_.i_a_id=author2_.a_id and item1_.i_id=orderline0_.ol_i_id and item1_.i_subject=? group by orderline0_.ol_i_id order by col_4_0_ desc limit ?
select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = 3 limit ?
Pre-processed SQL session queries : 
select from orderline cross join item cross join author where item.i_a_id=author.a_id and item.i_id=orderline.ol_i_id and item.i_subject=?  group by orderline.oliid order by col4 limit ? 
select from item left join item left join item left join item left join item left join item where i.i_id = ?  limit ? 

+++++++++++++++++++++++ instrument dynamic execution path using AspectJ +++++++++++++++++++++++++++++
[aspectj paths]
before rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 
called| httpsession eu.cloudscale.showcase.servlets.acontroller.gethttpsession(class, httpservletrequest) 
called| list eu.cloudscale.showcase.db.services.aservice.getbestsellers(string) 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string) 
called| session eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.getcurrentsession() 
sql|select item1_.i_id as col_0_0_, author2_.a_fname as col_1_0_, author2_.a_lname as col_2_0_, item1_.i_title as col_3_0_, sum(orderline0_.ol_qty) as col_4_0_ from order_line orderline0_ cross join item item1_ cross join author author2_ where item1_.i_a_id=author2_.a_id and item1_.i_id=orderline0_.ol_i_id and item1_.i_subject=? group by orderline0_.ol_i_id order by col_4_0_ desc limit ?
called| string eu.cloudscale.showcase.servlets.bestsellerscontroller.getproducturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.geturl2(integer, integer, string) 
called| list eu.cloudscale.showcase.db.services.aservice.getpromotional() 
called| list eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional() 
sql|select i2.i_thumbnail as i2_thumbnail,i2.i_id as i2_id,i3.i_thumbnail as i3_thumbnail,i3.i_id as i3_id,i4.i_thumbnail as i4_thumbnail,i4.i_id as i4_id,i5.i_thumbnail as i5_thumbnail,i5.i_id as i5_id, i6.i_thumbnail as i6_thumbnail,i6.i_id as i6_id from item as i left join item as i2 on i.i_related1 = i2.i_id left join item as i3 on i.i_related2 = i3.i_id left join item as i4 on i.i_related3 = i4.i_id left join item as i5 on i.i_related4 = i5.i_id left join item as i6 on i.i_related5 = i6.i_id where i.i_id = ? limit ?
called| void eu.cloudscale.showcase.servlets.acontroller.setupfrontend(model, integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getshoppingcarturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getsearchrequesturl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.gethomeurl(integer, integer) 
called| string eu.cloudscale.showcase.servlets.acontroller.getorderinquiryurl(integer, integer) 
called| properties eu.cloudscale.showcase.servlets.acontroller.getapplicationproperties() 
after rest| string eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string, integer, integer, httpservletrequest, model) 

+++++++++++++++++++++++++ Path matching metrics +++++++++++++++++++++++++++
path_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
path_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
path_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
path_ap:1.0
+++++++++++++++++++++++++ Request matching metrics +++++++++++++++++++++++++++
request_matching_boolean:[True, False, False, False, False, False, False, False, False, False]
request_matching_number_k:[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
request_precision_k:[1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1]
request_ap:1.0

-------------------------Top1 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.bestsellerscontroller.bestsellers(string,integer,integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getbestsellers(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getbestsellers(string)
[select i.iid, a.afname, a.alname, i.ititle, sum(ol.olqty) as val from orderline as ol, item as i, author as a where i.author.aid = a.aid and i.iid = ol.item.iid and i.isubject = :category group by ol.item.iid order by val desc]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.37877433698501145
Semantic Similarity:1.0
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):1.3787743369850114
Path matching:True
Request matching:True
-------------------------Top2 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.newproductscontroller.newproductscategory(string,integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.servlets.newproductscontroller.getnewproducts(string,model,integer,integer)
method:eu.cloudscale.showcase.db.services.aservice.getnewproducts(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getnewproducts(string)
[select i, a from item as i, author as a where i.author.aid = a.aid and i.isubject = :category order by i.ipubdate desc, i.ititle]
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.37708035020402075
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.8770803502040208
Path matching:False
Request matching:False
-------------------------Top3 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.homecontroller.home(integer,integer,locale,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getpromotional()
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.getpromotional()
[select from item left join item left join item left join item left join item left join item where i.i_id =]

Syntactic Similarity:0.37034325441244453
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.8703432544124445
Path matching:False
Request matching:False
-------------------------Top4 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.orderdisplaycontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.getuserby(string,string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.customerdaoimpl.getuserby(string,string)
[select c from customer as c where c.cuname = :username and c.cpasswd = :passwd]
[select from address as a inner join country as c on a.addrid=c.coid where a.addrid=?]
method:eu.cloudscale.showcase.db.services.aservice.getmostrecentorder(icustomer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.ordersdaoimpl.getmostrecentorder(icustomer)
[select o from orders as o, customer as c where o.customer.cid = c.cid and c.cid = :cid order by o.odate, o.oid desc]
[select from customer as c inner join address left outer join country where c.cid=? ]
method:eu.cloudscale.showcase.db.services.aservice.findallorderlinebyorder(iorders)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.orderlinedaoimpl.findallbyorder(iorders)
[select ol from orderline as ol where ol.orders = :order]
[select from item as i where i.iid = ?]
[select from orders as o inner join address left outer join country inner join address inner join customer left outer join address where o.id=?]

Syntactic Similarity:0.3710031881337684
Semantic Similarity:0.4
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.7710031881337684
Path matching:False
Request matching:False
-------------------------Top5 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.productdetailservlet.get(integer,integer,integer,httpservletrequest,locale,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1294054356159082
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6294054356159082
Path matching:False
Request matching:False
-------------------------Top6 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminrequestcontroller.get(integer,httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]

Syntactic Similarity:0.1294054356159082
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6294054356159082
Path matching:False
Request matching:False
-------------------------Top7 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbysubject(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbysubject(string)
[select i from item as i where i.isubject = :subject order by i.ititle]

Syntactic Similarity:0.1040844154758403
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.6040844154758402
Path matching:False
Request matching:False
-------------------------Top8 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbytitle(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbytitle(string)
[select i from item as i, author as a where i.author.aid = a.aid and substring(soundex(i.ititle), 0, 4) = substring(soundex(:title), 0, 4) order by i.ititle]

Syntactic Similarity:0.06856157022639363
Semantic Similarity:0.5
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.5685615702263936
Path matching:False
Request matching:False
-------------------------Top9 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.adminconfirmcontroller.post(integer,double,string,string,httpservletrequest,model,redirectattributes)
method:eu.cloudscale.showcase.db.services.aservice.finditembyid(integer)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findbyid(int)
[select i, a from item i, author a where i.iid = :itemid and a.aid = i.author.aid]
method:eu.cloudscale.showcase.db.services.aservice.saveitem(iitem)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.daoimpl.shrani(object)
[insert into item values (?, ?, ?)]

Syntactic Similarity:0.16568855619420653
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.49902188952753984
Path matching:False
Request matching:False
-------------------------Top10 ranked control flow path according to similarity score (Only top 10 are presented here) -------------------------------------
request:eu.cloudscale.showcase.servlets.searchcontroller.get(httpservletrequest,model)
method:eu.cloudscale.showcase.db.services.aservice.searchbyauthor(string)
method:eu.cloudscale.showcase.db.dao.hibernate.impl.authordaoimpl.findbysoundexlname(string)
[select a from author as a, item as i where substring(soundex(a.alname),0,4)=substring(soundex(:keyword),0,4) and i.author.aid=a.aid order by i.ititle]
method:eu.cloudscale.showcase.db.dao.hibernate.impl.itemdaoimpl.findallbyauthor(iauthor)
[select i from item as i where i.author = :author order by i.ititle]

Syntactic Similarity:0.11086197325212724
Semantic Similarity:0.3333333333333333
Combining Similarity Score: (Syntactic Similarity + Semantic Similarity):0.4441953065854606
Path matching:False
Request matching:False
